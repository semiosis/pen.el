aspect-oriented software development
aspect-oriented programming
AOP
    Aims to increase modularity by allowing
    the separation of cross-cutting concerns.
    
    It does so by adding additional behavior
    to existing code (an advice) without
    modifying the code itself, instead
    separately specifying which code is
    modified via a "pointcut" specification,
    such as "log all function calls when the
    function's name begins with 'set'".
    
    This allows behaviors that are not central
    to the business logic (such as logging) to
    be added to a program without cluttering
    the code core to the functionality.

cross-cutting concern
    Cross-cutting concerns are aspects of a
    program that affect other concerns.
    
    These concerns often cannot be cleanly
    decomposed from the rest of the system in
    both the design and implementation, and
    can result in either scattering (code
    duplication), tangling (significant
    dependencies between systems), or both.
    
    For instance, if writing an application
    for handling medical records, the indexing
    of such records is a core concern, while
    logging a history of changes to the record
    database or user database, or an
    authentication system, would be cross-
    cutting concerns since they interact with
    more parts of the program.
