 a list of JSON objects, one for each record.
  jsons <- map (toJSON . fmap (\m -> m {-caret-})) maps

  -- Convert the list of JSON objects into a single JSON array.
  json <- toJSON (fromList jsons)

  -- Print the JSON array as text.
  print json
EOD

# haskell files

cat draft.haskell <<EOD
 Data.Text as T
import Data.Text.Encoding (decodeUtf8)

main = do

  -- Read the CSV from stdin and decode it into a list of lines.
  -- We use the Lazy version of ByteString to avoid reading the whole file into memory.
  lines <- L.readFile "-"

  -- Parse the CSV into a list of records, one for each line in the CSV file.
  records <- decodeUt
