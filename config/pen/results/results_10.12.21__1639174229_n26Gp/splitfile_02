
All the programs that we write to solve a specific problem can be classified into one of the three categories: data types that are not defined by the programmer, data types that are defined by the programmer, and data types that are defined by the programmer, but could also be given by the compiler. The first two categories are called primitive data types. These data types are usually built in to the programming language. The last category is called advanced type system. These advanced type systems are not built in to the programming languages. They are generated by the programmer.

Functional programming languages like Haskell were designed for this purpose. Haskell has four types of data types: primitive data types, algebraic data types, polymorphic data types, and phantom types. The first two categories are primitive types. The last two categories are advanced types which are generated by the programmer.

Algebraic data types are generated by the programmer. They are generated by three different types of data types: sum, product, and list
