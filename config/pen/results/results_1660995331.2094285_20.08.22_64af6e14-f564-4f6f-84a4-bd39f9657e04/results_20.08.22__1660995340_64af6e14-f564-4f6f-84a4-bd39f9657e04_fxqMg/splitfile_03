
  (let ((n (- char 65)))
    (if (< n 0)
        nil
      (s-concat (number-to-string n) " "))))

(defun pen-modeline-icon ()
  (let ((dn (pen-daemon-name)))
    (cond ((string-equal "DEFAULT" dn)
           "ðŸ–Š")
          ((s-matches? "pen-" dn)
           (s-replace-regexp
            "pen-emacsd-\\([0-9]*\\)"
            "\\1"
            dn))
          (t
           "emacs"))))

  ;;(ascii-letter-from-int (+ 1 (string-to-number pen/daemon/name)))

  ;;(pen/daemon/name)

  ;;(pen/daemon/
