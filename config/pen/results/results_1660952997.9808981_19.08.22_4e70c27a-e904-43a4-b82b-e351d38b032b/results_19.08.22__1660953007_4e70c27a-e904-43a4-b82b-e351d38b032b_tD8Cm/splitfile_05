# Playbook for (require 'clojure-mode)
(require 'cider)
(require 'ob-clojure)

(require 'clomacs)

(if (inside-docker-p)
    (setq cider-lein-command "pen-lein"))

(setq cider-auto-jump-to-error nil)
(setq cider-repl-pop-to-buffer-on-connect nil)

(pen-with 'cider
          ;; Fixes super annoying message
          (setq cider-allow-jack-in-without-project t))

(defun pen-4clojure-check-and-proceed ()
  "Check the answer and show the next question if it worked."
  (interactive)
  (let ((result (4clojure-check-answers)))
    (unless (string-match "failed." result)
       (4clojure-next-question))))
---
- name: "Install dependencies"
  hosts: all
  become: true
  vars:
    pen_lein_command: "pen-lein"
  tasks:
    - name: "Install dependencies"
      command: "{{ pen_lein_command }} deps"
      become: true
      register: result
      ignore_errors: true
      delegate_to: "{{ pen_delegate_to }}"
      when: pen_delegate_to is defined
      changed_when: false
      failed_when: false
- name: "Run tests"
  hosts: all
  become: true
  vars:
    pen_lein_command: "pen-lein"
  tasks:
    - name: "Run tests"
      command: "{{ pen_lein_command }} test"
      become: true
      register: result
      ignore_errors: true
