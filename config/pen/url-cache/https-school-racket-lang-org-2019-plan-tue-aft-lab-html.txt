HTTP/1.1 200 OK
Date: Wed, 27 Nov 2024 02:49:42 GMT
Content-Type: text/html; charset=utf-8
Transfer-Encoding: chunked
Connection: keep-alive
x-amz-id-2: rQSXjWc0dkc/UK19yI4wRnrmgILlF0gREyYJiPky99iYYKG3tAPU+qAQlinB6AalvBUzEFyC1Rc=
x-amz-request-id: MRGXB5XMHHMY1YXX
Cache-Control: max-age=0, no-cache
Last-Modified: Sat, 27 Jul 2019 23:29:19 GMT
x-amz-storage-class: REDUCED_REDUNDANCY
cf-cache-status: DYNAMIC
vary: accept-encoding
Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v4?s=rXaZJR2qjS32Yjz7bdB9kWeuAXWrSSeuBUGubEAEB%2FKSwY9qB5Z4PryPs7xQatj%2B48qtCa3WofclDqGQ45yRHgwvq4N294DGo35Yhy6cw7iK88vn22YuXa%2B8AEOSLCcfF6QCHv9PgakI"}],"group":"cf-nel","max_age":604800}
NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
Server: cloudflare
CF-RAY: 8e8ece730b27a7ef-SYD
alt-svc: h3=":443"; ma=86400
server-timing: cfL4;desc="?proto=TCP&rtt=58071&sent=39&recv=14&lost=0&retrans=9&sent_bytes=30934&recv_bytes=794&delivery_rate=367053&cwnd=161&unsent_bytes=0&cid=7d2157471387f880&ts=112026&x=0"

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"/><meta name="viewport" content="width=device-width, initial-scale=0.8"/><title>8&nbsp;Lab Comfortable Macros</title><link rel="stylesheet" type="text/css" href="scribble.css" title="default"/><link rel="stylesheet" type="text/css" href="racket.css" title="default"/><link rel="stylesheet" type="text/css" href="manual-style.css" title="default"/><link rel="stylesheet" type="text/css" href="manual-racket.css" title="default"/><script type="text/javascript" src="scribble-common.js"></script><script type="text/javascript" src="manual-racket.js"></script><!--[if IE 6]><style type="text/css">.SIEHidden { overflow: hidden; }</style><![endif]--></head><body id="scribble-racket-lang-org"><div class="tocset"><div class="tocview"><div class="tocviewlist tocviewlisttopspace"><div class="tocviewtitle"><table cellspacing="0" cellpadding="0"><tr><td style="width: 1em;"><a href="javascript:void(0);" title="Expand/Collapse" class="tocviewtoggle" onclick="TocviewToggle(this,&quot;tocview_0&quot;);">&#9660;</a></td><td></td><td><a href="index.html" class="tocviewlink" data-pltdoc="x">Racket School 2019:<span class="mywbr"> &nbsp;</span> <br/>
<span class="Smaller">The &#8220;How to Design Languages&#8221; Track</span></a></td></tr></table></div><div class="tocviewsublistonly" style="display: block;" id="tocview_0"><table cellspacing="0" cellpadding="0"><tr><td align="right">1&nbsp;</td><td><a href="mon-mor-lecture.html" class="tocviewlink" data-pltdoc="x">Language-<wbr></wbr>Oriented Programming</a></td></tr><tr><td align="right">2&nbsp;</td><td><a href="mon-mor-lab.html" class="tocviewlink" data-pltdoc="x">Macro Expansion</a></td></tr><tr><td align="right">3&nbsp;</td><td><a href="mon-aft-lecture.html" class="tocviewlink" data-pltdoc="x">Language Extensions via Macros</a></td></tr><tr><td align="right">4&nbsp;</td><td><a href="mon-aft-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> Simple Macros</a></td></tr><tr><td align="right">5&nbsp;</td><td><a href="tue-mor-lecture.html" class="tocviewlink" data-pltdoc="x">Advanced Racket Macros</a></td></tr><tr><td align="right">6&nbsp;</td><td><a href="tue-mor-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> Syntax Patterns &amp; Classes</a></td></tr><tr><td align="right">7&nbsp;</td><td><a href="tue-aft-lecture.html" class="tocviewlink" data-pltdoc="x">Lexical Scope, (Un)Hygienic Macros</a></td></tr><tr><td align="right">8&nbsp;</td><td><a href="" class="tocviewselflink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> Comfortable Macros</a></td></tr><tr><td align="right">9&nbsp;</td><td><a href="wed-mor-lecture.html" class="tocviewlink" data-pltdoc="x">Modules, Macros, Languages</a></td></tr><tr><td align="right">10&nbsp;</td><td><a href="wed-mor-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> Languages via Macros</a></td></tr><tr><td align="right">11&nbsp;</td><td><a href="wed-aft-lecture.html" class="tocviewlink" data-pltdoc="x">More Language Variations</a></td></tr><tr><td align="right">12&nbsp;</td><td><a href="wed-aft-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> Languages and Readers</a></td></tr><tr><td align="right">13&nbsp;</td><td><a href="thu-mor-lecture.html" class="tocviewlink" data-pltdoc="x">Types and Type Checking</a></td></tr><tr><td align="right">14&nbsp;</td><td><a href="thu-aft-lecture.html" class="tocviewlink" data-pltdoc="x">Typed Languages with Turnstile</a></td></tr><tr><td align="right">15&nbsp;</td><td><a href="thu-aft-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> My First Turnstile Language</a></td></tr><tr><td align="right">16&nbsp;</td><td><a href="fri-mor-lecture.html" class="tocviewlink" data-pltdoc="x">Two Techniques</a></td></tr><tr><td align="right">17&nbsp;</td><td><a href="fri-mor-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Extended Lab</span> Regexps</a></td></tr><tr><td align="right">18&nbsp;</td><td><a href="fri-aft-lecture.html" class="tocviewlink" data-pltdoc="x">Some Language Gems</a></td></tr><tr><td align="right">19&nbsp;</td><td><a href="fri-aft-lab.html" class="tocviewlink" data-pltdoc="x">Closure</a></td></tr></table></div></div></div></div><div class="maincolumn"><div class="main"><div class="versionbox"><span class="version">7.4.0.4</span></div><div class="navsettop"><span class="navleft"><div class="nosearchform"></div>&nbsp;&nbsp;</span><span class="navright">&nbsp;&nbsp;<a href="tue-aft-lecture.html" title="backward to &quot;7 Lexical Scope, (Un)Hygienic Macros&quot;" data-pltdoc="x">&larr; prev</a>&nbsp;&nbsp;<a href="index.html" title="up to &quot;Racket School 2019: 

The “How to Design Languages” Track&quot;" data-pltdoc="x">up</a>&nbsp;&nbsp;<a href="wed-mor-lecture.html" title="forward to &quot;9 Modules, Macros, Languages&quot;" data-pltdoc="x">next &rarr;</a></span>&nbsp;</div><h3>8<tt>&nbsp;</tt><a name="(part._tue-aft-lab)"></a><span style="font-weight: bold">Lab</span> Comfortable Macros</h3><div class="SAuthorListBox"><span class="SAuthorList"><p class="author">Jay McCarthy</p></span></div><p>In all of these exercises, first do not use a syntax parameter, then
write it using a syntax parameter. In each case, decide if you think
it is a better interface to use syntax parameters, or not.</p><blockquote class="SubFlow"><p><a name="(counter._(exercise._define~26return))"></a><span style="font-weight: bold">Exercise</span>&nbsp;16. Use <span class="RktSym"><a href="http://docs.racket-lang.org/reference/cont.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._let%2Fec%29%29" class="RktStxLink" data-pltdoc="x">let/ec</a></span> to make a version of
<span class="RktSym"><a href="http://docs.racket-lang.org/reference/define.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._define%29%29" class="RktStxLink" data-pltdoc="x">define</a></span> that defines a <span class="RktSym">return</span> statement. <img style="vertical-align: 0px; margin: -3px -3px -3px -3px;" src="pict_17.svg" type="image/svg+xml"/></p></blockquote><blockquote class="SubFlow"><p><a name="(counter._(exercise._while))"></a><span style="font-weight: bold">Exercise</span>&nbsp;17. Use <span class="RktSym"><a href="http://docs.racket-lang.org/reference/cont.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._let%2Fec%29%29" class="RktStxLink" data-pltdoc="x">let/ec</a></span> to make a <span class="RktSym">while</span> macro
that supports <span class="RktSym">break</span> and <span class="RktSym">continue</span>. <img style="vertical-align: 0px; margin: -3px -3px -3px -3px;" src="pict_18.svg" type="image/svg+xml"/></p></blockquote><blockquote class="SubFlow"><p><a name="(counter._(exercise._aif))"></a><span style="font-weight: bold">Exercise</span>&nbsp;18. Write a version of <span class="RktSym"><a href="http://docs.racket-lang.org/reference/if.html#%28form._%28%28quote._~23~25kernel%29._if%29%29" class="RktStxLink" data-pltdoc="x">if</a></span> that provides access
to the value of the condition via <span class="RktSym">it</span>. <img style="vertical-align: 0px; margin: -3px -3px -3px -3px;" src="pict_19.svg" type="image/svg+xml"/></p></blockquote><blockquote class="SubFlow"><p><a name="(counter._(exercise._acond))"></a><span style="font-weight: bold">Exercise</span>&nbsp;19. Write a version of <span class="RktSym"><a href="http://docs.racket-lang.org/reference/if.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._cond%29%29" class="RktStxLink" data-pltdoc="x">cond</a></span> that uses the
<span class="RktSym"><a href="http://docs.racket-lang.org/reference/if.html#%28form._%28%28quote._~23~25kernel%29._if%29%29" class="RktStxLink" data-pltdoc="x">if</a></span> from the previous exercise to also provide access the
value of the question. <img style="vertical-align: 0px; margin: -3px -3px -3px -3px;" src="pict_20.svg" type="image/svg+xml"/></p></blockquote><blockquote class="SubFlow"><p><a name="(counter._(exercise._related))"></a><span style="font-weight: bold">Exercise</span>&nbsp;20. Write a macro that allows you define bindings
related to other bindings. For example, a user could write:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/define-struct.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._struct%29%29" class="RktStxLink" data-pltdoc="x">struct</a></span><span class="hspace">&nbsp;</span><span class="RktSym">posn</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktSym">y</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym">define-related</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">define-posn</span><span class="hspace">&nbsp;</span><span class="RktSym">p</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;</span><span class="RktPn">[</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">posn-x</span><span class="hspace">&nbsp;</span><span class="RktSym">p</span><span class="RktPn">)</span><span class="RktPn">]</span></td></tr><tr><td><span class="hspace">&nbsp;</span><span class="RktPn">[</span><span class="RktSym">y</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">posn-y</span><span class="hspace">&nbsp;</span><span class="RktSym">p</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/define.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._define%29%29" class="RktStxLink" data-pltdoc="x">define</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._magnitude%29%29" class="RktValLink" data-pltdoc="x">magnitude</a></span><span class="hspace">&nbsp;</span><span class="RktSym">p</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">define-posn</span><span class="hspace">&nbsp;</span><span class="RktSym">p</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2B%29%29" class="RktValLink" data-pltdoc="x">+</a></span><span class="hspace">&nbsp;</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktSym">y</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._magnitude%29%29" class="RktValLink" data-pltdoc="x">magnitude</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">posn</span><span class="hspace">&nbsp;</span><span class="RktVal">3</span><span class="hspace">&nbsp;</span><span class="RktVal">4</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><span class="RktCmt">;</span><span class="RktCmt">&nbsp;</span><span class="RktCmt">=&gt; 7</span></td></tr></table></blockquote><p><span class="RktSym">define-related</span> is a basic kind of compile-time higher-order module (functor). <img style="vertical-align: 0px; margin: -3px -3px -3px -3px;" src="pict_21.svg" type="image/svg+xml"/></p></blockquote><blockquote class="SubFlow"><p><a name="(counter._(exercise._classy-mod1))"></a><span style="font-weight: bold">Exercise</span>&nbsp;21. Modify the <span class="RktSym">classy</span> macro to add
default values to the fields. <img style="vertical-align: 0px; margin: -3px -3px -3px -3px;" src="pict_22.svg" type="image/svg+xml"/></p></blockquote><blockquote class="SubFlow"><p><a name="(counter._(exercise._classy-mod2))"></a><span style="font-weight: bold">Exercise</span>&nbsp;22. Modify the <span class="RktSym">classy</span> macro to allow any
number of fields to be updated with <span class="RktSym">update</span>. <img style="vertical-align: 0px; margin: -3px -3px -3px -3px;" src="pict_23.svg" type="image/svg+xml"/></p></blockquote><p>Survey link: <a href="https://forms.gle/gc8Aiw9bBBmczcox9"><span class="url">https://forms.gle/gc8Aiw9bBBmczcox9</span></a></p><div class="navsetbottom"><span class="navleft"><div class="nosearchform"></div>&nbsp;&nbsp;</span><span class="navright">&nbsp;&nbsp;<a href="tue-aft-lecture.html" title="backward to &quot;7 Lexical Scope, (Un)Hygienic Macros&quot;" data-pltdoc="x">&larr; prev</a>&nbsp;&nbsp;<a href="index.html" title="up to &quot;Racket School 2019: 

The “How to Design Languages” Track&quot;" data-pltdoc="x">up</a>&nbsp;&nbsp;<a href="wed-mor-lecture.html" title="forward to &quot;9 Modules, Macros, Languages&quot;" data-pltdoc="x">next &rarr;</a></span>&nbsp;</div></div></div><div id="contextindicator">&nbsp;</div></body></html>
