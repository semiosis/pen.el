HTTP/1.1 200 OK
Connection: keep-alive
Content-Length: 8713
Server: GitHub.com
Content-Type: text/html; charset=utf-8
Last-Modified: Sun, 21 Feb 2021 00:01:02 GMT
Access-Control-Allow-Origin: *
ETag: W/"6031a2be-9f08"
expires: Mon, 28 Oct 2024 10:32:30 GMT
Cache-Control: max-age=600
x-proxy-cache: MISS
X-GitHub-Request-Id: 4D7F:158A53:ECD115:F93ACB:671F65E4
Accept-Ranges: bytes
Date: Mon, 28 Oct 2024 10:22:33 GMT
Via: 1.1 varnish
Age: 3
X-Served-By: cache-akl10334-AKL
X-Cache: HIT
X-Cache-Hits: 1
X-Timer: S1730110953.098349,VS0,VE1
Vary: Accept-Encoding
X-Fastly-Request-ID: abeb599431a9a7b62f6ba4384af2e5c661960dec

<!DOCTYPE html>
<html lang="en-us">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    
    <title>Leonardo Borges  | Monads in small bites - Part III - Monoids</title>
    <meta name="viewport" content="width=device-width,minimum-scale=1">
    <meta name="generator" content="Hugo 0.67.1" />
    
    
      <META NAME="ROBOTS" CONTENT="NOINDEX, NOFOLLOW">
    

    
    
      <link href="/dist/css/app.1cb140d8ba31d5b2f1114537dd04802a.css" rel="stylesheet">
    

    

    
      
<link rel="shortcut icon" href="/images/favicon.png" type="image/x-icon" />

    

    
    
    <meta property="og:title" content="Monads in small bites - Part III - Monoids" />
<meta property="og:description" content="This is Part III of my Monads tutorial. Make sure you read the previous parts:
  Part I - Functors
  Part II - Applicative Functors
  Part III - Monoids (this post)
  Part IV - Monads
  Monoids Simply put, Monoids describe types containing a binary function and an identity value.
When applied to the identity value and a random value x, said function leaves its argument x untouched, returning it as a result." />
<meta property="og:type" content="article" />
<meta property="og:url" content="http://leonardoborges.com/writings/2012/12/05/monads-in-small-bites-part-iii-monoids/" />
<meta property="article:published_time" content="2012-12-05T00:00:00+00:00" />
<meta property="article:modified_time" content="2012-12-05T00:00:00+00:00" /><meta property="og:site_name" content="Code. Leadership. AI." />
<meta itemprop="name" content="Monads in small bites - Part III - Monoids">
<meta itemprop="description" content="This is Part III of my Monads tutorial. Make sure you read the previous parts:
  Part I - Functors
  Part II - Applicative Functors
  Part III - Monoids (this post)
  Part IV - Monads
  Monoids Simply put, Monoids describe types containing a binary function and an identity value.
When applied to the identity value and a random value x, said function leaves its argument x untouched, returning it as a result.">
<meta itemprop="datePublished" content="2012-12-05T00:00:00&#43;00:00" />
<meta itemprop="dateModified" content="2012-12-05T00:00:00&#43;00:00" />
<meta itemprop="wordCount" content="1149">



<meta itemprop="keywords" content="clojure,functional-programming,haskell," /><meta name="twitter:card" content="summary"/>
<meta name="twitter:title" content="Monads in small bites - Part III - Monoids"/>
<meta name="twitter:description" content="This is Part III of my Monads tutorial. Make sure you read the previous parts:
  Part I - Functors
  Part II - Applicative Functors
  Part III - Monoids (this post)
  Part IV - Monads
  Monoids Simply put, Monoids describe types containing a binary function and an identity value.
When applied to the identity value and a random value x, said function leaves its argument x untouched, returning it as a result."/>

  </head>

  <body class="ma0 avenir bg-near-white">

    
   
  

<header>
    <div class="bg-black">
        <nav class="pv3 ph3 ph4-ns" role="navigation">
  <div class="flex-l justify-between items-center center">
    <a href="http://leonardoborges.com/" class="f3 fw2 hover-white no-underline white-90 dib">
      Leonardo Borges
    </a>
    <div class="flex-l items-center">
      

      
        <ul class="pl0 mr3">
          
          <li class="list f5 f4-ns fw4 dib pr3">
            <a class="hover-white no-underline white-90" href="/about/" title="About page">
              About
            </a>
          </li>
          
          <li class="list f5 f4-ns fw4 dib pr3">
            <a class="hover-white no-underline white-90" href="/books/" title="Books page">
              Books
            </a>
          </li>
          
          <li class="list f5 f4-ns fw4 dib pr3">
            <a class="hover-white no-underline white-90" href="/writings/" title="Posts page">
              Posts
            </a>
          </li>
          
          <li class="list f5 f4-ns fw4 dib pr3">
            <a class="hover-white no-underline white-90" href="/talks/" title="Projects &amp; Talks page">
              Projects &amp; Talks
            </a>
          </li>
          
          <li class="list f5 f4-ns fw4 dib pr3">
            <a class="hover-white no-underline white-90" href="/tags/" title="Tags page">
              Tags
            </a>
          </li>
          
        </ul>
      
      


<a href="https://stackoverflow.com/users/910811/leonardoborges" target="_blank" class="link-transition stackoverflow link dib z-999 pt3 pt0-l mr1" title="Stack Overflow link" rel="noopener" aria-label="follow on Stack Overflow——Opens in a new window">
  <svg height="32px" 
    style="enable-background:new 0 0 67 67;"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    width="32px"
>
    <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm.869 5.903l3.114 4.567-.975.665-3.115-4.567.976-.665zm-2.812 2.585l4.84 2.838-.6 1.017-4.842-2.838.602-1.017zm-1.276 2.724l5.413 1.521-.291 1.077-5.428-1.458.306-1.14zm-.588 2.461l5.687.569-.103 1.12-5.691-.513.107-1.176zm-.169 2.16h5.835v1.167h-5.835v-1.167zm7.976 3.167h-10v-6h1v5h8v-5h1v6zm.195-8.602l-.945-5.446 1.162-.202.947 5.446-1.164.202z"/>
</svg>

<span class="new-window"><svg  height="8px"  style="enable-background:new 0 0 1000 1000;" version="1.1" viewBox="0 0 1000 1000" width="8px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
<path d="M598 128h298v298h-86v-152l-418 418-60-60 418-418h-152v-86zM810 810v-298h86v298c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h298v86h-298v596h596z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/>
</svg>
</span></a>



<a href="https://twitter.com/theleoborges" target="_blank" class="link-transition twitter link dib z-999 pt3 pt0-l mr1" title="Twitter link" rel="noopener" aria-label="follow on Twitter——Opens in a new window">
  <svg height="32px"  style="enable-background:new 0 0 67 67;" version="1.1" viewBox="0 0 67 67" width="32px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M37.167,22.283c-2.619,0.953-4.274,3.411-4.086,6.101  l0.063,1.038l-1.048-0.127c-3.813-0.487-7.145-2.139-9.974-4.915l-1.383-1.377l-0.356,1.017c-0.754,2.267-0.272,4.661,1.299,6.271  c0.838,0.89,0.649,1.017-0.796,0.487c-0.503-0.169-0.943-0.296-0.985-0.233c-0.146,0.149,0.356,2.076,0.754,2.839  c0.545,1.06,1.655,2.097,2.871,2.712l1.027,0.487l-1.215,0.021c-1.173,0-1.215,0.021-1.089,0.467  c0.419,1.377,2.074,2.839,3.918,3.475l1.299,0.444l-1.131,0.678c-1.676,0.976-3.646,1.526-5.616,1.568  C19.775,43.256,19,43.341,19,43.405c0,0.211,2.557,1.397,4.044,1.864c4.463,1.377,9.765,0.783,13.746-1.568  c2.829-1.673,5.657-5,6.978-8.221c0.713-1.716,1.425-4.851,1.425-6.354c0-0.975,0.063-1.102,1.236-2.267  c0.692-0.678,1.341-1.419,1.467-1.631c0.21-0.403,0.188-0.403-0.88-0.043c-1.781,0.636-2.033,0.551-1.152-0.402  c0.649-0.678,1.425-1.907,1.425-2.267c0-0.063-0.314,0.042-0.671,0.233c-0.377,0.212-1.215,0.53-1.844,0.72l-1.131,0.361l-1.027-0.7  c-0.566-0.381-1.361-0.805-1.781-0.932C39.766,21.902,38.131,21.944,37.167,22.283z M33,64C16.432,64,3,50.569,3,34S16.432,4,33,4  s30,13.431,30,30S49.568,64,33,64z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/></svg>

<span class="new-window"><svg  height="8px"  style="enable-background:new 0 0 1000 1000;" version="1.1" viewBox="0 0 1000 1000" width="8px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
<path d="M598 128h298v298h-86v-152l-418 418-60-60 418-418h-152v-86zM810 810v-298h86v298c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h298v86h-298v596h596z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/>
</svg>
</span></a>




<a href="https://www.linkedin.com/in/theleoborges/" target="_blank" class="link-transition linkedin link dib z-999 pt3 pt0-l mr1" title="LinkedIn link" rel="noopener" aria-label="follow on LinkedIn——Opens in a new window">
  <svg  height="32px"  style="enable-background:new 0 0 65 65;" version="1.1" viewBox="0 0 65 65" width="32px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <path d="M50.837,48.137V36.425c0-6.275-3.35-9.195-7.816-9.195  c-3.604,0-5.219,1.983-6.119,3.374V27.71h-6.79c0.09,1.917,0,20.427,0,20.427h6.79V36.729c0-0.609,0.044-1.219,0.224-1.655  c0.49-1.22,1.607-2.483,3.482-2.483c2.458,0,3.44,1.873,3.44,4.618v10.929H50.837z M22.959,24.922c2.367,0,3.842-1.57,3.842-3.531  c-0.044-2.003-1.475-3.528-3.797-3.528s-3.841,1.524-3.841,3.528c0,1.961,1.474,3.531,3.753,3.531H22.959z M34,64  C17.432,64,4,50.568,4,34C4,17.431,17.432,4,34,4s30,13.431,30,30C64,50.568,50.568,64,34,64z M26.354,48.137V27.71h-6.789v20.427  H26.354z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/>
</svg>

<span class="new-window"><svg  height="8px"  style="enable-background:new 0 0 1000 1000;" version="1.1" viewBox="0 0 1000 1000" width="8px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
<path d="M598 128h298v298h-86v-152l-418 418-60-60 418-418h-152v-86zM810 810v-298h86v298c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h298v86h-298v596h596z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/>
</svg>
</span></a>


<a href="https://github.com/theleoborges" target="_blank" class="link-transition github link dib z-999 pt3 pt0-l mr1" title="Github link" rel="noopener" aria-label="follow on Github——Opens in a new window">
  <svg  height="32px"  style="enable-background:new 0 0 512 512;" version="1.1" viewBox="0 0 512 512" width="32px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
  <path d="M256,32C132.3,32,32,134.8,32,261.7c0,101.5,64.2,187.5,153.2,217.9c11.2,2.1,15.3-5,15.3-11.1   c0-5.5-0.2-19.9-0.3-39.1c-62.3,13.9-75.5-30.8-75.5-30.8c-10.2-26.5-24.9-33.6-24.9-33.6c-20.3-14.3,1.5-14,1.5-14   c22.5,1.6,34.3,23.7,34.3,23.7c20,35.1,52.4,25,65.2,19.1c2-14.8,7.8-25,14.2-30.7c-49.7-5.8-102-25.5-102-113.5   c0-25.1,8.7-45.6,23-61.6c-2.3-5.8-10-29.2,2.2-60.8c0,0,18.8-6.2,61.6,23.5c17.9-5.1,37-7.6,56.1-7.7c19,0.1,38.2,2.6,56.1,7.7   c42.8-29.7,61.5-23.5,61.5-23.5c12.2,31.6,4.5,55,2.2,60.8c14.3,16.1,23,36.6,23,61.6c0,88.2-52.4,107.6-102.3,113.3   c8,7.1,15.2,21.1,15.2,42.5c0,30.7-0.3,55.5-0.3,63c0,6.1,4,13.3,15.4,11C415.9,449.1,480,363.1,480,261.7   C480,134.8,379.7,32,256,32z"/>
</svg>

<span class="new-window"><svg  height="8px"  style="enable-background:new 0 0 1000 1000;" version="1.1" viewBox="0 0 1000 1000" width="8px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
<path d="M598 128h298v298h-86v-152l-418 418-60-60 418-418h-152v-86zM810 810v-298h86v298c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h298v86h-298v596h596z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/>
</svg>
</span></a>







    </div>
  </div>
</nav>

    </div>
    
<script type="application/javascript">
var doNotTrack = false;
if (!doNotTrack) {
	window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
	ga('create', 'UA-2811271-1', 'auto');
	
	ga('send', 'pageview');
}
</script>
<script async src='https://www.google-analytics.com/analytics.js'></script>

</header>



    <main class="pb7" role="main">
      
  
  <article class="flex-l flex-wrap justify-between mw8 center ph3">
    <header class="mt4 w-100">
      <aside class="instapaper_ignoref b helvetica tracked">
          
        WRITINGS
      </aside>
      




  <div id="sharing" class="mt3">

    
    <a href="https://www.facebook.com/sharer.php?u=http://leonardoborges.com/writings/2012/12/05/monads-in-small-bites-part-iii-monoids/" class="facebook no-underline" aria-label="share on Facebook">
      <svg height="32px"  style="enable-background:new 0 0 67 67;" version="1.1" viewBox="0 0 67 67" width="32px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M28.765,50.32h6.744V33.998h4.499l0.596-5.624h-5.095  l0.007-2.816c0-1.466,0.14-2.253,2.244-2.253h2.812V17.68h-4.5c-5.405,0-7.307,2.729-7.307,7.317v3.377h-3.369v5.625h3.369V50.32z   M33,64C16.432,64,3,50.569,3,34S16.432,4,33,4s30,13.431,30,30S49.568,64,33,64z" style="fill-rule:evenodd;clip-rule:evenodd;"/></svg>

    </a>

    
    
    <a href="https://twitter.com/share?url=http://leonardoborges.com/writings/2012/12/05/monads-in-small-bites-part-iii-monoids/&amp;text=Monads%20in%20small%20bites%20-%20Part%20III%20-%20Monoids" class="twitter no-underline" aria-label="share on Twitter">
      <svg height="32px"  style="enable-background:new 0 0 67 67;" version="1.1" viewBox="0 0 67 67" width="32px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M37.167,22.283c-2.619,0.953-4.274,3.411-4.086,6.101  l0.063,1.038l-1.048-0.127c-3.813-0.487-7.145-2.139-9.974-4.915l-1.383-1.377l-0.356,1.017c-0.754,2.267-0.272,4.661,1.299,6.271  c0.838,0.89,0.649,1.017-0.796,0.487c-0.503-0.169-0.943-0.296-0.985-0.233c-0.146,0.149,0.356,2.076,0.754,2.839  c0.545,1.06,1.655,2.097,2.871,2.712l1.027,0.487l-1.215,0.021c-1.173,0-1.215,0.021-1.089,0.467  c0.419,1.377,2.074,2.839,3.918,3.475l1.299,0.444l-1.131,0.678c-1.676,0.976-3.646,1.526-5.616,1.568  C19.775,43.256,19,43.341,19,43.405c0,0.211,2.557,1.397,4.044,1.864c4.463,1.377,9.765,0.783,13.746-1.568  c2.829-1.673,5.657-5,6.978-8.221c0.713-1.716,1.425-4.851,1.425-6.354c0-0.975,0.063-1.102,1.236-2.267  c0.692-0.678,1.341-1.419,1.467-1.631c0.21-0.403,0.188-0.403-0.88-0.043c-1.781,0.636-2.033,0.551-1.152-0.402  c0.649-0.678,1.425-1.907,1.425-2.267c0-0.063-0.314,0.042-0.671,0.233c-0.377,0.212-1.215,0.53-1.844,0.72l-1.131,0.361l-1.027-0.7  c-0.566-0.381-1.361-0.805-1.781-0.932C39.766,21.902,38.131,21.944,37.167,22.283z M33,64C16.432,64,3,50.569,3,34S16.432,4,33,4  s30,13.431,30,30S49.568,64,33,64z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/></svg>

    </a>

    
    <a href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://leonardoborges.com/writings/2012/12/05/monads-in-small-bites-part-iii-monoids/&amp;title=Monads%20in%20small%20bites%20-%20Part%20III%20-%20Monoids" class="linkedin no-underline" aria-label="share on LinkedIn">
      <svg  height="32px"  style="enable-background:new 0 0 65 65;" version="1.1" viewBox="0 0 65 65" width="32px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <path d="M50.837,48.137V36.425c0-6.275-3.35-9.195-7.816-9.195  c-3.604,0-5.219,1.983-6.119,3.374V27.71h-6.79c0.09,1.917,0,20.427,0,20.427h6.79V36.729c0-0.609,0.044-1.219,0.224-1.655  c0.49-1.22,1.607-2.483,3.482-2.483c2.458,0,3.44,1.873,3.44,4.618v10.929H50.837z M22.959,24.922c2.367,0,3.842-1.57,3.842-3.531  c-0.044-2.003-1.475-3.528-3.797-3.528s-3.841,1.524-3.841,3.528c0,1.961,1.474,3.531,3.753,3.531H22.959z M34,64  C17.432,64,4,50.568,4,34C4,17.431,17.432,4,34,4s30,13.431,30,30C64,50.568,50.568,64,34,64z M26.354,48.137V27.71h-6.789v20.427  H26.354z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/>
</svg>

    </a>
  </div>

      <h1 class="f1 athelas mt3 mb1">Monads in small bites - Part III - Monoids</h1>
      
      
      <time class="f6 mv4 dib tracked" datetime="2012-12-05T00:00:00Z">December 5, 2012</time>

      
      
    </header>
    <div class="nested-copy-line-height lh-copy serif f4 nested-links nested-img mid-gray pr4-l w-two-thirds-l"><p>This is Part III of my Monads tutorial. Make sure you read the previous parts:</p>
<ul>
<li>
<p><a href="/2012/11/30/monads-in-small-bites-part-i-functors/">Part I   - Functors</a></p>
</li>
<li>
<p><a href="/2012/12/02/monads-in-small-bites-part-ii-applicative-functors/">Part II  - Applicative Functors</a></p>
</li>
<li>
<p>Part III - Monoids (this post)</p>
</li>
<li>
<p><a href="/2012/12/08/monads-in-small-bites-part-iv-monads/">Part IV  - Monads</a></p>
</li>
</ul>
<h3 id="monoids">Monoids</h3>
<p>Simply put, Monoids describe types containing a <a href="http://en.wikipedia.org/wiki/Binary_function">binary function</a> and an identity value.</p>
<p>When applied to the identity value and a random value <code>x</code>, said function leaves its argument <code>x</code> <em>untouched</em>, returning it as a result.</p>
<p>This short description should be enough to get the conversation started.</p>
<p>Here&rsquo;s how Haskell defines a Monoid:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-haskell" data-lang="haskell"><span style="color:#66d9ef">class</span> <span style="color:#66d9ef">Monoid</span> m <span style="color:#66d9ef">where</span>
    mempty <span style="color:#f92672">::</span> m
    mappend <span style="color:#f92672">::</span> m <span style="color:#f92672">-&gt;</span> m <span style="color:#f92672">-&gt;</span> m
    mconcat <span style="color:#f92672">::</span> [m] <span style="color:#f92672">-&gt;</span> m
    mconcat ms <span style="color:#f92672">=</span> foldr mappend mempty ms
</code></pre></div><p>This type introduces three new functions so let&rsquo;s walk through each one of them:</p>
<blockquote>
<p><strong>mempty</strong> - I started with a lie since <code>mempty</code> isn&rsquo;t actually a function. You can think of it as a constant of the same type of the Monoid <code>m</code>. It is this monoid&rsquo;s identity value.</p>
</blockquote>
<blockquote>
<p><strong>mappend</strong> - A poorly named function, <code>mappend</code> is the binary function I mentioned earlier. It receives two arguments of type <code>m</code> and returns a value of type <code>m</code></p>
</blockquote>
<blockquote>
<p><strong>mconcat</strong> - It receives a list of Monoids <code>m</code> and reduces them to a single Monoid of type <code>m</code>. What&rsquo;s interesting about this snippet is that the Monoid type class provides a default implementation for <code>mconcat</code>: it simply calls <em><a href="http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'">foldr</a></em> with the binary function <code>mappend</code>, a starting value of <code>mempty</code> and the list of Monoid values <code>ms</code></p>
</blockquote>
<p>Enough Haskell! Let&rsquo;s have a look at a few examples.</p>
<p>Did you know that, in Clojure,  the functions <code>*</code> and <code>+</code> are monoids? Yup. But don&rsquo;t take my word for it. Let me prove it to you:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(<span style="color:#66d9ef">def </span> mempty (<span style="color:#a6e22e">+</span>)) <span style="color:#75715e">;; 0</span>
(<span style="color:#66d9ef">def </span> mappend +)
(<span style="color:#66d9ef">defn </span>mconcat [ms] 
    (reduce mappend mempty ms))

(<span style="color:#a6e22e">mappend</span> <span style="color:#ae81ff">3</span> <span style="color:#ae81ff">4</span>) <span style="color:#75715e">;; 7</span>

(<span style="color:#a6e22e">mconcat</span> [<span style="color:#ae81ff">2</span> <span style="color:#ae81ff">3</span> <span style="color:#ae81ff">4</span>]) <span style="color:#75715e">;; 9</span>
</code></pre></div><p>Whoa!  What happened here? Am I just making this stuff up?</p>
<p>Not really. I only defined the same haskell names to their Clojure counterparts for clarity. Totally overkill. The code above is the same as:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(<span style="color:#a6e22e">+</span>) <span style="color:#75715e">;; 0</span>

(+ <span style="color:#ae81ff">3</span> <span style="color:#ae81ff">4</span>) <span style="color:#75715e">;; 7</span>

(reduce + [<span style="color:#ae81ff">2</span> <span style="color:#ae81ff">3</span> <span style="color:#ae81ff">4</span>]) <span style="color:#75715e">;; 9</span>
</code></pre></div><p>Did you notice that on the second call to <code>reduce</code> we did not provide an initial value? That&rsquo;s because <code>reduce</code> will attempt to get its initial accumulator by calling the reducing function without arguments - hence <code>mempty == (+)</code>.</p>
<p>So that means we don&rsquo;t even need an <code>mconcat</code> function since in Clojure,  <code>reduce</code> works with monoids as well!</p>
<blockquote>
<p><strong>Update</strong>: this isn&rsquo;t entirely true. When I wrote this post I had in mind the version of <code>reduce</code> provided by the Clojure (1.5+) reducers library. The <a href="https://github.com/clojure/clojure/blob/master/src/clj/clojure/core/reducers.clj#L71">source code</a> shows how that is the case.</p>
</blockquote>
<blockquote>
<p>The implementation of <code>reduce</code> in <code>clojure.core</code> however uses the first element of the collection being reduced over as its seed.</p>
</blockquote>
<p>But how the hell do you create a monoid in Clojure then? I&rsquo;m glad you asked. Let&rsquo;s create our own <em>plus-monoid</em>!</p>
<h4 id="your-first-monoid">Your first monoid</h4>
<p>In <a href="/2012/11/30/monads-in-small-bites-part-i-functors/">Part I</a> I implemented Functors using <a href="http://clojure.org/protocols">protocols</a> and <a href="http://clojuredocs.org/clojure_core/clojure.core/defrecord">records</a>. In <a href="/2012/12/02/monads-in-small-bites-part-ii-applicative-functors/">Part II</a> I showed how Applicative Functors could be implemented using <a href="http://clojure.org/multimethods">multimethods</a>.</p>
<p>This time around I won&rsquo;t be using any of these. I&rsquo;ll implement Monoids using pure functions:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(<span style="color:#66d9ef">defn </span>plus-monoid 
    ([]
        <span style="color:#ae81ff">0</span>)
    ([a b]
        (+ a b)))

(<span style="color:#a6e22e">plus-monoid</span>) <span style="color:#75715e">;; 0 - same as mempty</span>

(<span style="color:#a6e22e">plus-monoid</span> <span style="color:#ae81ff">3</span> <span style="color:#ae81ff">4</span>) <span style="color:#75715e">;; 7 - same as mappend</span>

(reduce plus-monoid [<span style="color:#ae81ff">2</span> <span style="color:#ae81ff">3</span> <span style="color:#ae81ff">4</span>]) <span style="color:#75715e">;; 9 - when working with monoids, reduce is the same as mconcat</span>
</code></pre></div><p>We start by defining a function with multiple arities. The first body receives no arguments, so we just return the identity value for summation, which is <em>0 (zero)</em>. The second body receives two arguments so we can just add them up. Multiplication can be implemented in a similar fashion but obviously with the identity value of <em>one</em>.</p>
<p>Easy, huh?</p>
<p>Oh, by the way, lists are Monoids too! Who&rsquo;d have thought?</p>
<p>Here&rsquo;s its Clojure implementation:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(<span style="color:#66d9ef">defn </span>list-monoid 
    ([]
        <span style="color:#f92672">&#39;</span>())
    ([a b]
        (concat a b)))

(<span style="color:#a6e22e">list-monoid</span>) <span style="color:#75715e">;; () - remember, same as mempty</span>

(<span style="color:#a6e22e">list-monoid</span> [<span style="color:#ae81ff">1</span> <span style="color:#ae81ff">2</span> <span style="color:#ae81ff">3</span>] [<span style="color:#ae81ff">4</span> <span style="color:#ae81ff">5</span> <span style="color:#ae81ff">6</span>]) <span style="color:#75715e">;; (1 2 3 4 5 6) - remember, same as mappend</span>

(reduce list-monoid [[<span style="color:#ae81ff">1</span> <span style="color:#ae81ff">2</span> <span style="color:#ae81ff">3</span>] [<span style="color:#ae81ff">4</span> <span style="color:#ae81ff">5</span> <span style="color:#ae81ff">6</span>] [<span style="color:#ae81ff">7</span> <span style="color:#ae81ff">8</span> <span style="color:#ae81ff">9</span>]]) <span style="color:#75715e">;; (1 2 3 4 5 6 7 8 9) - mconcat in action</span>
</code></pre></div><p>Same rules apply but for lists <code>mappend</code> is achieved by using <code>concat</code> inside our monoid function.</p>
<p>Also, since our binary function concatenates two lists together it makes sense that <code>mempty</code> is <code>()</code> (the empty list). Remember <code>mempty</code> is supposed to be an identity value so if we stitch <code>()</code> and <code>[1 2 3]</code> together, we&rsquo;re left with <code>[1 2 3]</code> which is exactly what we&rsquo;d expect.</p>
<blockquote>
<p>You can see now why I said <code>mappend</code> was poorly named. While it makes sense when you think about lists, <code>mappend</code> doesn&rsquo;t do any appending in our <em>plus-monoid</em> and in fact most monoids don&rsquo;t append anything. Just keep this in mind if you see any haskell code using it: <code>mappend</code> is just a binary function.</p>
</blockquote>
<h3 id="dont-break-the-law">Don&rsquo;t break the law</h3>
<p>You saw this coming, huh? Monoids also come with a couple of laws. You know the drill. Let&rsquo;s prove they both hold.</p>
<h4 id="identity">Identity</h4>
<blockquote>
<p>Applying <code>mappend</code> to <code>mempty</code> and a monoid <code>x</code> should be the same as the original <code>x</code> monoid.</p>
</blockquote>
<p>In Haskell:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-haskell" data-lang="haskell"><span style="color:#a6e22e">mappend</span> mempty x <span style="color:#f92672">=</span> x
<span style="color:#a6e22e">mappend</span> x mempty <span style="color:#f92672">=</span> x
</code></pre></div><p>And the proof in Clojure:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure"><span style="color:#75715e">;; first, the plus-monoid</span>
(<span style="color:#66d9ef">def </span>mempty (<span style="color:#a6e22e">plus-monoid</span>))

(<span style="color:#66d9ef">def </span>x <span style="color:#ae81ff">10</span>)

<span style="color:#75715e">;; This...</span>
(<span style="color:#a6e22e">plus-monoid</span> mempty x) <span style="color:#75715e">;; 10</span>

<span style="color:#75715e">;; ...is the same as:</span>
(<span style="color:#a6e22e">plus-monoid</span> x mempty) <span style="color:#75715e">;; 10</span>

<span style="color:#75715e">;;now, the list-monoid</span>

(<span style="color:#66d9ef">def </span>mempty (<span style="color:#a6e22e">list-monoid</span>))
(<span style="color:#66d9ef">def </span>x [<span style="color:#ae81ff">1</span> <span style="color:#ae81ff">2</span> <span style="color:#ae81ff">3</span>])

<span style="color:#75715e">;; This...</span>
(<span style="color:#a6e22e">list-monoid</span> mempty x) <span style="color:#75715e">;; (1 2 3)</span>

<span style="color:#75715e">;; ...is the same as:</span>
(<span style="color:#a6e22e">list-monoid</span> x mempty) <span style="color:#75715e">;; (1 2 3)</span>
</code></pre></div><h4 id="associativity">Associativity</h4>
<blockquote>
<p>Applying <code>mappend</code> to a monoid <code>x</code> and the result of applying <code>mappend</code> to the monoids <code>y</code> and <code>z</code> should be the same as first applying <code>mappend</code> to the monoids <code>x</code> and <code>y</code> and then applying <code>mappend</code> to the resulting monoid and the monoid <code>z</code></p>
</blockquote>
<p>In Haskell:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-haskell" data-lang="haskell"><span style="color:#a6e22e">mappend</span> x (mappend y z) <span style="color:#f92672">=</span> mappend (mappend x y) z
</code></pre></div><p>And the proof in Clojure - remember that calling the monoid function with two arguments is equivalent to <code>mappend</code> in haskell:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure"><span style="color:#75715e">;; first, the plus-monoid</span>

(<span style="color:#66d9ef">def </span>x <span style="color:#ae81ff">10</span>)
(<span style="color:#66d9ef">def </span>y <span style="color:#ae81ff">25</span>)
(<span style="color:#66d9ef">def </span>z <span style="color:#ae81ff">40</span>)

<span style="color:#75715e">;; This...</span>
(<span style="color:#a6e22e">plus-monoid</span> x (<span style="color:#a6e22e">plus-monoid</span> y z)) <span style="color:#75715e">;; 75</span>

<span style="color:#75715e">;; ...is the same as:</span>
(<span style="color:#a6e22e">plus-monoid</span> (<span style="color:#a6e22e">plus-monoid</span> x y) z) <span style="color:#75715e">;; 75</span>

<span style="color:#75715e">;;now, the list-monoid</span>

(<span style="color:#66d9ef">def </span>x [<span style="color:#ae81ff">40</span>])
(<span style="color:#66d9ef">def </span>y [<span style="color:#ae81ff">10</span> <span style="color:#ae81ff">25</span>])
(<span style="color:#66d9ef">def </span>z [<span style="color:#ae81ff">50</span>])

<span style="color:#75715e">;; This...</span>
(<span style="color:#a6e22e">list-monoid</span> x (<span style="color:#a6e22e">list-monoid</span> y z)) <span style="color:#75715e">;; (40 10 25 50)</span>

<span style="color:#75715e">;; ...is the same as:</span>
(<span style="color:#a6e22e">list-monoid</span> (<span style="color:#a6e22e">list-monoid</span> x y) z) <span style="color:#75715e">;; (40 10 25 50)</span>
</code></pre></div><h3 id="almost-there">Almost there&hellip;</h3>
<p>This puts an end to Part III. It&rsquo;s time to head to the pub.</p>
<p>When you&rsquo;re back look for the final post in these series - <a href="/2012/12/08/monads-in-small-bites-part-iv-monads/">Part IV</a> - where we will conclude our journey by finally introducing Monads!</p>
<ul class="pa0">
  
   <li class="list">
     <a href="/tags/clojure" class="link f5 grow no-underline br-pill ba ph3 pv2 mb2 dib black sans-serif">clojure</a>
   </li>
  
   <li class="list">
     <a href="/tags/functional-programming" class="link f5 grow no-underline br-pill ba ph3 pv2 mb2 dib black sans-serif">functional-programming</a>
   </li>
  
   <li class="list">
     <a href="/tags/haskell" class="link f5 grow no-underline br-pill ba ph3 pv2 mb2 dib black sans-serif">haskell</a>
   </li>
  
</ul>
<div class="mt6 instapaper_ignoref">
      
        <div id="disqus_thread"></div>
<script type="application/javascript">
    var disqus_config = function () {
    
    
    
    };
    (function() {
        if (["localhost", "127.0.0.1"].indexOf(window.location.hostname) != -1) {
            document.getElementById('disqus_thread').innerHTML = 'Disqus comments not available by default when the website is previewed locally.';
            return;
        }
        var d = document, s = d.createElement('script'); s.async = true;
        s.src = '//' + "leonardoborges" + '.disqus.com/embed.js';
        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="https://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
      
      
      </div>
    </div>

    <aside class="w-30-l mt6-l">




  <div class="bg-light-gray pa3 nested-list-reset nested-copy-line-height nested-links">
    <p class="f5 b mb3">Related</p>
    <ul class="pa0 list">
	   
	     <li  class="mb2">
          <a href="/writings/2012/12/02/monads-in-small-bites-part-ii-applicative-functors/">Monads in small bites - Part II - Applicative Functors</a>
        </li>
	    
	     <li  class="mb2">
          <a href="/writings/2012/11/30/monads-in-small-bites-part-i-functors/">Monads in small bites - Part I - Functors</a>
        </li>
	    
	     <li  class="mb2">
          <a href="/writings/2012/09/10/clojure-leiningen-heroku-aot-compilation-gotchas/">Clojure, leiningen 2 and Heroku: AOT compilation gotchas</a>
        </li>
	    
	     <li  class="mb2">
          <a href="/writings/2012/08/23/sean-corfield-clojure-and-cfml-sitting-in-a-tree/">Sean Corfield: Clojure and CFML sitting in a tree</a>
        </li>
	    
	     <li  class="mb2">
          <a href="/writings/2012/02/22/clj-syd-report-number-0/">clj syd report number 0</a>
        </li>
	    
	     <li  class="mb2">
          <a href="/writings/2012/02/05/project-euler-problem-4-in-clojure/">project euler problem 4 in clojure</a>
        </li>
	    
	     <li  class="mb2">
          <a href="/writings/2012/01/22/backlog-ola-bini-on-clojure-conj/">backlog ola bini on clojure conj</a>
        </li>
	    
	     <li  class="mb2">
          <a href="/writings/2012/01/20/announcing-the-sydney-clojure-user-group/">announcing the sydney clojure user group</a>
        </li>
	    
	     <li  class="mb2">
          <a href="/writings/2011/10/12/report-clojure-meetup-1/">Report: Clojure Meetup - 1</a>
        </li>
	    
    </ul>
</div>

</aside>

  </article>

    </main>
    <footer class="bg-black bottom-0 w-100 pa3" role="contentinfo">
  <div class="flex justify-between">
  <a class="f4 fw4 hover-white no-underline white-70 dn dib-ns pv2 ph3" href="http://leonardoborges.com/" >
    &copy;  Leonardo Borges 2021 
  </a>
    <div>


<a href="https://stackoverflow.com/users/910811/leonardoborges" target="_blank" class="link-transition stackoverflow link dib z-999 pt3 pt0-l mr1" title="Stack Overflow link" rel="noopener" aria-label="follow on Stack Overflow——Opens in a new window">
  <svg height="32px" 
    style="enable-background:new 0 0 67 67;"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    width="32px"
>
    <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm.869 5.903l3.114 4.567-.975.665-3.115-4.567.976-.665zm-2.812 2.585l4.84 2.838-.6 1.017-4.842-2.838.602-1.017zm-1.276 2.724l5.413 1.521-.291 1.077-5.428-1.458.306-1.14zm-.588 2.461l5.687.569-.103 1.12-5.691-.513.107-1.176zm-.169 2.16h5.835v1.167h-5.835v-1.167zm7.976 3.167h-10v-6h1v5h8v-5h1v6zm.195-8.602l-.945-5.446 1.162-.202.947 5.446-1.164.202z"/>
</svg>

<span class="new-window"><svg  height="8px"  style="enable-background:new 0 0 1000 1000;" version="1.1" viewBox="0 0 1000 1000" width="8px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
<path d="M598 128h298v298h-86v-152l-418 418-60-60 418-418h-152v-86zM810 810v-298h86v298c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h298v86h-298v596h596z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/>
</svg>
</span></a>



<a href="https://twitter.com/theleoborges" target="_blank" class="link-transition twitter link dib z-999 pt3 pt0-l mr1" title="Twitter link" rel="noopener" aria-label="follow on Twitter——Opens in a new window">
  <svg height="32px"  style="enable-background:new 0 0 67 67;" version="1.1" viewBox="0 0 67 67" width="32px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M37.167,22.283c-2.619,0.953-4.274,3.411-4.086,6.101  l0.063,1.038l-1.048-0.127c-3.813-0.487-7.145-2.139-9.974-4.915l-1.383-1.377l-0.356,1.017c-0.754,2.267-0.272,4.661,1.299,6.271  c0.838,0.89,0.649,1.017-0.796,0.487c-0.503-0.169-0.943-0.296-0.985-0.233c-0.146,0.149,0.356,2.076,0.754,2.839  c0.545,1.06,1.655,2.097,2.871,2.712l1.027,0.487l-1.215,0.021c-1.173,0-1.215,0.021-1.089,0.467  c0.419,1.377,2.074,2.839,3.918,3.475l1.299,0.444l-1.131,0.678c-1.676,0.976-3.646,1.526-5.616,1.568  C19.775,43.256,19,43.341,19,43.405c0,0.211,2.557,1.397,4.044,1.864c4.463,1.377,9.765,0.783,13.746-1.568  c2.829-1.673,5.657-5,6.978-8.221c0.713-1.716,1.425-4.851,1.425-6.354c0-0.975,0.063-1.102,1.236-2.267  c0.692-0.678,1.341-1.419,1.467-1.631c0.21-0.403,0.188-0.403-0.88-0.043c-1.781,0.636-2.033,0.551-1.152-0.402  c0.649-0.678,1.425-1.907,1.425-2.267c0-0.063-0.314,0.042-0.671,0.233c-0.377,0.212-1.215,0.53-1.844,0.72l-1.131,0.361l-1.027-0.7  c-0.566-0.381-1.361-0.805-1.781-0.932C39.766,21.902,38.131,21.944,37.167,22.283z M33,64C16.432,64,3,50.569,3,34S16.432,4,33,4  s30,13.431,30,30S49.568,64,33,64z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/></svg>

<span class="new-window"><svg  height="8px"  style="enable-background:new 0 0 1000 1000;" version="1.1" viewBox="0 0 1000 1000" width="8px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
<path d="M598 128h298v298h-86v-152l-418 418-60-60 418-418h-152v-86zM810 810v-298h86v298c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h298v86h-298v596h596z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/>
</svg>
</span></a>




<a href="https://www.linkedin.com/in/theleoborges/" target="_blank" class="link-transition linkedin link dib z-999 pt3 pt0-l mr1" title="LinkedIn link" rel="noopener" aria-label="follow on LinkedIn——Opens in a new window">
  <svg  height="32px"  style="enable-background:new 0 0 65 65;" version="1.1" viewBox="0 0 65 65" width="32px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <path d="M50.837,48.137V36.425c0-6.275-3.35-9.195-7.816-9.195  c-3.604,0-5.219,1.983-6.119,3.374V27.71h-6.79c0.09,1.917,0,20.427,0,20.427h6.79V36.729c0-0.609,0.044-1.219,0.224-1.655  c0.49-1.22,1.607-2.483,3.482-2.483c2.458,0,3.44,1.873,3.44,4.618v10.929H50.837z M22.959,24.922c2.367,0,3.842-1.57,3.842-3.531  c-0.044-2.003-1.475-3.528-3.797-3.528s-3.841,1.524-3.841,3.528c0,1.961,1.474,3.531,3.753,3.531H22.959z M34,64  C17.432,64,4,50.568,4,34C4,17.431,17.432,4,34,4s30,13.431,30,30C64,50.568,50.568,64,34,64z M26.354,48.137V27.71h-6.789v20.427  H26.354z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/>
</svg>

<span class="new-window"><svg  height="8px"  style="enable-background:new 0 0 1000 1000;" version="1.1" viewBox="0 0 1000 1000" width="8px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
<path d="M598 128h298v298h-86v-152l-418 418-60-60 418-418h-152v-86zM810 810v-298h86v298c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h298v86h-298v596h596z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/>
</svg>
</span></a>


<a href="https://github.com/theleoborges" target="_blank" class="link-transition github link dib z-999 pt3 pt0-l mr1" title="Github link" rel="noopener" aria-label="follow on Github——Opens in a new window">
  <svg  height="32px"  style="enable-background:new 0 0 512 512;" version="1.1" viewBox="0 0 512 512" width="32px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
  <path d="M256,32C132.3,32,32,134.8,32,261.7c0,101.5,64.2,187.5,153.2,217.9c11.2,2.1,15.3-5,15.3-11.1   c0-5.5-0.2-19.9-0.3-39.1c-62.3,13.9-75.5-30.8-75.5-30.8c-10.2-26.5-24.9-33.6-24.9-33.6c-20.3-14.3,1.5-14,1.5-14   c22.5,1.6,34.3,23.7,34.3,23.7c20,35.1,52.4,25,65.2,19.1c2-14.8,7.8-25,14.2-30.7c-49.7-5.8-102-25.5-102-113.5   c0-25.1,8.7-45.6,23-61.6c-2.3-5.8-10-29.2,2.2-60.8c0,0,18.8-6.2,61.6,23.5c17.9-5.1,37-7.6,56.1-7.7c19,0.1,38.2,2.6,56.1,7.7   c42.8-29.7,61.5-23.5,61.5-23.5c12.2,31.6,4.5,55,2.2,60.8c14.3,16.1,23,36.6,23,61.6c0,88.2-52.4,107.6-102.3,113.3   c8,7.1,15.2,21.1,15.2,42.5c0,30.7-0.3,55.5-0.3,63c0,6.1,4,13.3,15.4,11C415.9,449.1,480,363.1,480,261.7   C480,134.8,379.7,32,256,32z"/>
</svg>

<span class="new-window"><svg  height="8px"  style="enable-background:new 0 0 1000 1000;" version="1.1" viewBox="0 0 1000 1000" width="8px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
<path d="M598 128h298v298h-86v-152l-418 418-60-60 418-418h-152v-86zM810 810v-298h86v298c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h298v86h-298v596h596z" style="fill-rule:evenodd;clip-rule:evenodd;fill:;"/>
</svg>
</span></a>






</div>
  </div>
</footer>

    

  <script src="/dist/js/app.3fc0f988d21662902933.js"></script>


  </body>
</html>
