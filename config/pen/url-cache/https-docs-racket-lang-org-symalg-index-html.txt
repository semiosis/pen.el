HTTP/1.1 200 OK
Date: Tue, 02 Jan 2024 05:08:15 GMT
Content-Type: text/html; charset=utf-8
Transfer-Encoding: chunked
Connection: keep-alive
x-amz-id-2: N6plJ3No8J7uGoGDSzgOIQGLOROEKdFw6W5gSs34ah7qzvDomIGKS7GtKo2G1KzvJsDp7e8d4co=
x-amz-request-id: PP9DFFWNRZ3CSC2C
Cache-Control: max-age=21600, public
Last-Modified: Tue, 14 Nov 2023 07:08:28 GMT
x-amz-storage-class: REDUCED_REDUNDANCY
CF-Cache-Status: DYNAMIC
Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=nVWumLeMerhxfLR5TL5kWTv%2FdZ%2F%2FJ4fJAIv%2BeGUzgB6zWSzTmffTHalJW0skY52hFlt%2FU0H7sCdPGgMptAJBwHz%2BxNlOsSEtSGaHLJ%2Bs3R1x%2FtcRZ%2B8sALlrhGThwP5sDlFernK8VO6xpKVf7NrfuwNZ7A%3D%3D"}],"group":"cf-nel","max_age":604800}
NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
Server: cloudflare
CF-RAY: 83f07ba9fdad50c2-AKL
alt-svc: h3=":443"; ma=86400

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"/><meta name="viewport" content="width=device-width, initial-scale=0.8"/><title>Symbolic algebraic expressions</title><link rel="stylesheet" type="text/css" href="../scribble.css" title="default"/><link rel="stylesheet" type="text/css" href="../racket.css" title="default"/><link rel="stylesheet" type="text/css" href="../manual-style.css" title="default"/><link rel="stylesheet" type="text/css" href="../manual-racket.css" title="default"/><link rel="stylesheet" type="text/css" href="../manual-racket.css" title="default"/><link rel="stylesheet" type="text/css" href="../doc-site.css" title="default"/><script type="text/javascript" src="../scribble-common.js"></script><script type="text/javascript" src="../manual-racket.js"></script><script type="text/javascript" src="../manual-racket.js"></script><script type="text/javascript" src="../doc-site.js"></script><script type="text/javascript" src="../local-redirect/local-redirect.js"></script><script type="text/javascript" src="../local-redirect/local-user-redirect.js"></script><!--[if IE 6]><style type="text/css">.SIEHidden { overflow: hidden; }</style><![endif]--></head><body id="doc-racket-lang-org"><div class="tocset"><div class="tocview"><div class="tocviewlist tocviewlisttopspace"><div class="tocviewtitle"><table cellspacing="0" cellpadding="0"><tr><td style="width: 1em;"><a href="javascript:void(0);" title="Expand/Collapse" class="tocviewtoggle" onclick="TocviewToggle(this,&quot;tocview_0&quot;);">&#9658;</a></td><td></td><td><a href="" class="tocviewselflink" data-pltdoc="x">Symbolic algebraic expressions</a></td></tr></table></div><div class="tocviewsublistonly" style="display: none;" id="tocview_0"><table cellspacing="0" cellpadding="0"><tr><td align="right">1&nbsp;</td><td><a href="#%28part._.Example%29" class="tocviewlink" data-pltdoc="x">Example</a></td></tr><tr><td align="right">2&nbsp;</td><td><a href="#%28part._.A.P.I_.Reference%29" class="tocviewlink" data-pltdoc="x">API Reference</a></td></tr></table></div></div></div><div class="tocsub"><table class="tocsublist" cellspacing="0"><tr><td><span class="tocsublinknumber"></span><a href="#%28part._top%29" class="tocsubseclink" data-pltdoc="x">Symbolic algebraic expressions</a></td></tr><tr><td><span class="tocsublinknumber">1<tt>&nbsp;</tt></span><a href="#%28part._.Example%29" class="tocsubseclink" data-pltdoc="x">Example</a></td></tr><tr><td><span class="tocsublinknumber">2<tt>&nbsp;</tt></span><a href="#%28part._.A.P.I_.Reference%29" class="tocsubseclink" data-pltdoc="x">API Reference</a></td></tr><tr><td><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._parse-sexpr%29%29" class="tocsubnonseclink" data-pltdoc="x"><span class="RktSym"><span class="RktValLink">parse-<wbr></wbr>sexpr</span></span></a></td></tr><tr><td><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._parse-infix%29%29" class="tocsubnonseclink" data-pltdoc="x"><span class="RktSym"><span class="RktValLink">parse-<wbr></wbr>infix</span></span></a></td></tr><tr><td><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="tocsubnonseclink" data-pltdoc="x"><span class="RktSym"><span class="RktValLink">symalg-<wbr></wbr>expr?</span></span></a></td></tr><tr><td><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._simplify%29%29" class="tocsubnonseclink" data-pltdoc="x"><span class="RktSym"><span class="RktValLink">simplify</span></span></a></td></tr><tr><td><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._differentiate%29%29" class="tocsubnonseclink" data-pltdoc="x"><span class="RktSym"><span class="RktValLink">differentiate</span></span></a></td></tr><tr><td><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._evaluate%29%29" class="tocsubnonseclink" data-pltdoc="x"><span class="RktSym"><span class="RktValLink">evaluate</span></span></a></td></tr><tr><td><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._infix%29%29" class="tocsubnonseclink" data-pltdoc="x"><span class="RktSym"><span class="RktValLink">infix</span></span></a></td></tr><tr><td><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._latex%29%29" class="tocsubnonseclink" data-pltdoc="x"><span class="RktSym"><span class="RktValLink">latex</span></span></a></td></tr><tr><td><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._sexpr%29%29" class="tocsubnonseclink" data-pltdoc="x"><span class="RktSym"><span class="RktValLink">sexpr</span></span></a></td></tr></table></div></div><div class="maincolumn"><div class="main"><div class="versionbox"><span class="version">8.11</span></div><div class="navsettop"><span class="navleft"><form class="searchform"><input class="searchbox" id="searchbox" type="text" tabindex="1" placeholder="...search manuals..." title="Enter a search string to search the manuals" onkeypress="return DoSearchKey(event, this, &quot;8.11&quot;, &quot;../&quot;);"/></form>&nbsp;&nbsp;<a href="../index.html" title="up to the documentation top" data-pltdoc="x" onclick="return GotoPLTRoot(&quot;8.11&quot;);">top</a><span class="tocsettoggle">&nbsp;&nbsp;<a href="javascript:void(0);" title="show/hide table of contents" onclick="TocsetToggle();">contents</a></span></span><span class="navright">&nbsp;&nbsp;<span class="nonavigation">&larr; prev</span>&nbsp;&nbsp;<a href="../index.html" title="up to the documentation top" data-pltdoc="x" onclick="return GotoPLTRoot(&quot;8.11&quot;);">up</a>&nbsp;&nbsp;<span class="nonavigation">next &rarr;</span></span>&nbsp;</div><h2 x-source-module="(lib &quot;symalg/scribblings/symalg.scrbl&quot;)" x-source-pkg="symalg" x-part-tag="&quot;top&quot;"><a name="(part._top)"></a><a name="(part._.Symbolic_algebraic_expressions)"></a><a name="(mod-path._symalg)"></a>Symbolic algebraic expressions</h2><div class="SAuthorListBox"><span class="SAuthorList"><p class="author">Johannes Tax</p></span></div><p><table cellspacing="0" cellpadding="0" class="defmodule"><tr><td align="left"><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=require.html%23%2528form._%2528%2528lib._racket%252Fprivate%252Fbase..rkt%2529._require%2529%2529&amp;version=8.11" class="RktStxLink Sq" data-pltdoc="x">require</a></span><span class="stt"> </span><a href="" class="RktModLink" data-pltdoc="x"><span class="RktSym">symalg</span></a><span class="RktPn">)</span></td><td align="right"><span class="RpackageSpec"><span class="Smaller">&nbsp;package:</span> <a href="https://pkgs.racket-lang.org/package/symalg" title="Install this package using `raco pkg install symalg`"><span class="stt">symalg</span></a></span></td></tr></table></p><p>This library provides functions to parse and manipulate symbolic algebraic
expressions. These expression can be constants, variables, arithmetic
operations and exponentiations. Additionally trigonometric functions and
logarithms are supported.</p><h3 x-source-module="(lib &quot;symalg/scribblings/symalg.scrbl&quot;)" x-source-pkg="symalg" x-part-tag="&quot;Example&quot;">1<tt>&nbsp;</tt><a name="(part._.Example)"></a>Example</h3><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=define.html%23%2528form._%2528%2528lib._racket%252Fprivate%252Fbase..rkt%2529._define%2529%2529&amp;version=8.11" class="RktStxLink Sq" data-pltdoc="x">define</a></span><span class="hspace">&nbsp;</span><span class="RktSym">expr</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._parse-infix%29%29" class="RktValLink" data-pltdoc="x">parse-infix</a></span><span class="hspace">&nbsp;</span><span class="RktVal">"3*x^2 - 4*x + cos(x)"</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=define.html%23%2528form._%2528%2528lib._racket%252Fprivate%252Fbase..rkt%2529._define%2529%2529&amp;version=8.11" class="RktStxLink Sq" data-pltdoc="x">define</a></span><span class="hspace">&nbsp;</span><span class="RktSym">expr-deriv</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._simplify%29%29" class="RktValLink" data-pltdoc="x">simplify</a></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._differentiate%29%29" class="RktValLink" data-pltdoc="x">differentiate</a></span><span class="hspace">&nbsp;</span><span class="RktSym">expr</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr></table></td></tr><tr><td><span class="stt">&gt; </span><span class="RktSym">expr-deriv</span></td></tr><tr><td><table cellspacing="0" cellpadding="0"><tr><td><p><span class="RktRes">(add</span></p></td></tr><tr><td><p><span class="RktRes"></span><span class="hspace">&nbsp;</span><span class="RktRes">(list</span></p></td></tr><tr><td><p><span class="RktRes"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktRes">(num -4)</span></p></td></tr><tr><td><p><span class="RktRes"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktRes">(mul (list (num 6) (sym 'x)))</span></p></td></tr><tr><td><p><span class="RktRes"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktRes">(mul (list (num -1) (sin_ (sym 'x))))))</span></p></td></tr></table></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._infix%29%29" class="RktValLink" data-pltdoc="x">infix</a></span><span class="hspace">&nbsp;</span><span class="RktSym">expr-deriv</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">"-4 + 6 * x + -1 * sin(x)"</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._sexpr%29%29" class="RktValLink" data-pltdoc="x">sexpr</a></span><span class="hspace">&nbsp;</span><span class="RktSym">expr-deriv</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">'(+ -4 (* 6 x) (* -1 (sin x)))</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._latex%29%29" class="RktValLink" data-pltdoc="x">latex</a></span><span class="hspace">&nbsp;</span><span class="RktSym">expr-deriv</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">"-4 + 6 x -\\sin(x)"</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=define.html%23%2528form._%2528%2528lib._racket%252Fprivate%252Fbase..rkt%2529._define%2529%2529&amp;version=8.11" class="RktStxLink Sq" data-pltdoc="x">define</a></span><span class="hspace">&nbsp;</span><span class="RktSym">f</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._evaluate%29%29" class="RktValLink" data-pltdoc="x">evaluate</a></span><span class="hspace">&nbsp;</span><span class="RktSym">expr-deriv</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">f</span><span class="hspace">&nbsp;</span><span class="RktVal">3</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">13.858879991940134</span></p></td></tr></table></blockquote><h3 x-source-module="(lib &quot;symalg/scribblings/symalg.scrbl&quot;)" x-source-pkg="symalg" x-part-tag="&quot;API_Reference&quot;">2<tt>&nbsp;</tt><a name="(part._.A.P.I_.Reference)"></a>API Reference</h3><p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><a name="(def._((lib._symalg/main..rkt)._parse-sexpr))"></a><span title="Provided from: symalg | Package: symalg"><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._parse-sexpr%29%29" class="RktValDef RktValLink" data-pltdoc="x">parse-sexpr</a></span></span><span class="hspace">&nbsp;</span><span class="RktVar">s</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>&rarr;<span class="hspace">&nbsp;</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="RktValLink" data-pltdoc="x">symalg-expr?</a></span></p></blockquote></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">s</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=data-structure-contracts.html%23%2528def._%2528%2528lib._racket%252Fcontract%252Fprivate%252Fmisc..rkt%2529._any%252Fc%2529%2529&amp;version=8.11" class="RktValLink Sq" data-pltdoc="x">any/c</a></span></td></tr></table></blockquote></div><div class="SIntrapara">Parses an s-expression and returns a corresponding symbolic algebraic
expression. <span class="RktVar">s</span> can be an expression <span class="RktSym">expr</span> of the following
form:</div></p><blockquote class="SCentered"><table cellspacing="0" cellpadding="0"><tr><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">expr :</span></p></td></tr></table></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">number?</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| symbol?</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| e</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| pi</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| (+ expr ...+)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| (- expr ...+)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| (* expr ...+)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| (/ expr expr)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| (expt expr expr)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| (log expr expr)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| (sin expr)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| (cos expr)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| (tan expr)</span></p></td></tr></table></td></tr></table></blockquote><p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><a name="(def._((lib._symalg/main..rkt)._parse-infix))"></a><span title="Provided from: symalg | Package: symalg"><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._parse-infix%29%29" class="RktValDef RktValLink" data-pltdoc="x">parse-infix</a></span></span><span class="hspace">&nbsp;</span><span class="RktVar">s</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>&rarr;<span class="hspace">&nbsp;</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="RktValLink" data-pltdoc="x">symalg-expr?</a></span></p></blockquote></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">s</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=strings.html%23%2528def._%2528%2528quote._%7E23%7E25kernel%2529._string%7E3f%2529%2529&amp;version=8.11" class="RktValLink Sq" data-pltdoc="x">string?</a></span></td></tr></table></blockquote></div><div class="SIntrapara">Parses a string containing an infix expression and returns a corresponding
symbolic algebraic expression. An infix expression can be an expression
<span class="RktSym">expr</span> of the following form:</div></p><blockquote class="SCentered"><table cellspacing="0" cellpadding="0"><tr><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">expr :</span></p></td></tr></table></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">number?</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| symbol?</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| e</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| pi</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| (expr)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| expr + expr</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| expr - expr</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| expr * expr</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| expr / expr</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| expr ^ expr</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| log(expr, expr)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| sin(expr)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| cos(expr)</span></p></td></tr></table></td></tr><tr><td><p></p></td><td><p><span class="hspace">&nbsp;</span></p></td><td><table cellspacing="0" cellpadding="0" class="SVerbatim"><tr><td><p><span class="stt">| tan(expr)</span></p></td></tr></table></td></tr></table></blockquote><p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><a name="(def._((lib._symalg/main..rkt)._symalg-expr~3f))"></a><span title="Provided from: symalg | Package: symalg"><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="RktValDef RktValLink" data-pltdoc="x">symalg-expr?</a></span></span><span class="hspace">&nbsp;</span><span class="RktVar">e</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>&rarr;<span class="hspace">&nbsp;</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=booleans.html%23%2528def._%2528%2528quote._%7E23%7E25kernel%2529._boolean%7E3f%2529%2529&amp;version=8.11" class="RktValLink Sq" data-pltdoc="x">boolean?</a></span></p></blockquote></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">e</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=data-structure-contracts.html%23%2528def._%2528%2528lib._racket%252Fcontract%252Fprivate%252Fmisc..rkt%2529._any%252Fc%2529%2529&amp;version=8.11" class="RktValLink Sq" data-pltdoc="x">any/c</a></span></td></tr></table></blockquote></div><div class="SIntrapara">This predicate checks, if the argument denotes a symbolic algebraic expression
that can be processed by the functions below.</div></p><p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><a name="(def._((lib._symalg/main..rkt)._simplify))"></a><span title="Provided from: symalg | Package: symalg"><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._simplify%29%29" class="RktValDef RktValLink" data-pltdoc="x">simplify</a></span></span><span class="hspace">&nbsp;</span><span class="RktVar">e</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>&rarr;<span class="hspace">&nbsp;</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="RktValLink" data-pltdoc="x">symalg-expr?</a></span></p></blockquote></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">e</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="RktValLink" data-pltdoc="x">symalg-expr?</a></span></td></tr></table></blockquote></div><div class="SIntrapara">Returns a simplified form of <span class="RktVar">e</span>. Simplification is mostly based on
Joel S. Cohen&rsquo;s <span style="font-style: italic">Computer Algebra and Symbolic Computation</span>.</div></p><p>Some examples:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._infix%29%29" class="RktValLink" data-pltdoc="x">infix</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._simplify%29%29" class="RktValLink" data-pltdoc="x">simplify</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._parse-infix%29%29" class="RktValLink" data-pltdoc="x">parse-infix</a></span><span class="hspace">&nbsp;</span><span class="RktVal">"x+x"</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">"2 * x"</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._infix%29%29" class="RktValLink" data-pltdoc="x">infix</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._simplify%29%29" class="RktValLink" data-pltdoc="x">simplify</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._parse-infix%29%29" class="RktValLink" data-pltdoc="x">parse-infix</a></span><span class="hspace">&nbsp;</span><span class="RktVal">"x^0"</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">"1"</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._infix%29%29" class="RktValLink" data-pltdoc="x">infix</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._simplify%29%29" class="RktValLink" data-pltdoc="x">simplify</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._parse-infix%29%29" class="RktValLink" data-pltdoc="x">parse-infix</a></span><span class="hspace">&nbsp;</span><span class="RktVal">"2*x^2 + 4*x^2 + 5 - 6"</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">"-1 + 6 * (x)^(2)"</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._infix%29%29" class="RktValLink" data-pltdoc="x">infix</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._simplify%29%29" class="RktValLink" data-pltdoc="x">simplify</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._parse-infix%29%29" class="RktValLink" data-pltdoc="x">parse-infix</a></span><span class="hspace">&nbsp;</span><span class="RktVal">"2*x^2 / x"</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">"2 * x"</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._infix%29%29" class="RktValLink" data-pltdoc="x">infix</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._simplify%29%29" class="RktValLink" data-pltdoc="x">simplify</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._parse-infix%29%29" class="RktValLink" data-pltdoc="x">parse-infix</a></span><span class="hspace">&nbsp;</span><span class="RktVal">"2^x^4"</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">"(2)^(4 * x)"</span></p></td></tr></table></blockquote><p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><a name="(def._((lib._symalg/main..rkt)._differentiate))"></a><span title="Provided from: symalg | Package: symalg"><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._differentiate%29%29" class="RktValDef RktValLink" data-pltdoc="x">differentiate</a></span></span><span class="hspace">&nbsp;</span><span class="RktVar">e</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>&rarr;<span class="hspace">&nbsp;</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="RktValLink" data-pltdoc="x">symalg-expr?</a></span></p></blockquote></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">e</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="RktValLink" data-pltdoc="x">symalg-expr?</a></span></td></tr></table></blockquote></div><div class="SIntrapara">The function <span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._differentiate%29%29" class="RktValLink" data-pltdoc="x">differentiate</a></span> computes the first derivation of a given
symbolic algebraic expression.</div></p><p>Take into account that the resulting expression is not simplified
automatically, a further call to <span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._simplify%29%29" class="RktValLink" data-pltdoc="x">simplify</a></span> is necessary to bring it into
a canonical form:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=define.html%23%2528form._%2528%2528lib._racket%252Fprivate%252Fbase..rkt%2529._define%2529%2529&amp;version=8.11" class="RktStxLink Sq" data-pltdoc="x">define</a></span><span class="hspace">&nbsp;</span><span class="RktSym">expr</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._parse-infix%29%29" class="RktValLink" data-pltdoc="x">parse-infix</a></span><span class="hspace">&nbsp;</span><span class="RktVal">"2*x^2 - x"</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._infix%29%29" class="RktValLink" data-pltdoc="x">infix</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._differentiate%29%29" class="RktValLink" data-pltdoc="x">differentiate</a></span><span class="hspace">&nbsp;</span><span class="RktSym">expr</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">"(x)^(2) * 1 * 2 * (x)^(-1) + 0 * log(x) * 2 + (x)^(2) * 0 + 1 * -1 + x * 0"</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._infix%29%29" class="RktValLink" data-pltdoc="x">infix</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._simplify%29%29" class="RktValLink" data-pltdoc="x">simplify</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._differentiate%29%29" class="RktValLink" data-pltdoc="x">differentiate</a></span><span class="hspace">&nbsp;</span><span class="RktSym">expr</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">"-1 + 4 * x"</span></p></td></tr></table></blockquote><p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><a name="(def._((lib._symalg/main..rkt)._evaluate))"></a><span title="Provided from: symalg | Package: symalg"><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._evaluate%29%29" class="RktValDef RktValLink" data-pltdoc="x">evaluate</a></span></span><span class="hspace">&nbsp;</span><span class="RktVar">e</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>&rarr;<span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">f</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=number-types.html%23%2528def._%2528%2528quote._%7E23%7E25kernel%2529._number%7E3f%2529%2529&amp;version=8.11" class="RktValLink Sq" data-pltdoc="x">number?</a></span><span class="hspace">&nbsp;</span><span class="RktSym">...+</span><span class="RktPn">)</span></p></blockquote></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">e</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="RktValLink" data-pltdoc="x">symalg-expr?</a></span></td></tr></table></blockquote></div><div class="SIntrapara">Returns a function that evaluates the given symbolic algebraic expression.
Parameters of the returned function are bound to variables (unbound symbols) of
the symbolic algebraic expression in alphabetical order.</div></p><p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><a name="(def._((lib._symalg/main..rkt)._infix))"></a><span title="Provided from: symalg | Package: symalg"><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._infix%29%29" class="RktValDef RktValLink" data-pltdoc="x">infix</a></span></span><span class="hspace">&nbsp;</span><span class="RktVar">e</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>&rarr;<span class="hspace">&nbsp;</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=strings.html%23%2528def._%2528%2528quote._%7E23%7E25kernel%2529._string%7E3f%2529%2529&amp;version=8.11" class="RktValLink Sq" data-pltdoc="x">string?</a></span></p></blockquote></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">e</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="RktValLink" data-pltdoc="x">symalg-expr?</a></span></td></tr></table></blockquote></div><div class="SIntrapara">Returns the infix representation of a symbolic algebraic expression.</div></p><p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><a name="(def._((lib._symalg/main..rkt)._latex))"></a><span title="Provided from: symalg | Package: symalg"><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._latex%29%29" class="RktValDef RktValLink" data-pltdoc="x">latex</a></span></span><span class="hspace">&nbsp;</span><span class="RktVar">e</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>&rarr;<span class="hspace">&nbsp;</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=strings.html%23%2528def._%2528%2528quote._%7E23%7E25kernel%2529._string%7E3f%2529%2529&amp;version=8.11" class="RktValLink Sq" data-pltdoc="x">string?</a></span></p></blockquote></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">e</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="RktValLink" data-pltdoc="x">symalg-expr?</a></span></td></tr></table></blockquote></div><div class="SIntrapara">Returns the LaTeX math mode representation of a symbolic algebraic expression.</div></p><p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><a name="(def._((lib._symalg/main..rkt)._sexpr))"></a><span title="Provided from: symalg | Package: symalg"><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._sexpr%29%29" class="RktValDef RktValLink" data-pltdoc="x">sexpr</a></span></span><span class="hspace">&nbsp;</span><span class="RktVar">e</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>&rarr;<span class="hspace">&nbsp;</span><span class="RktSym"><a href="https://download.racket-lang.org/releases/8.11/doc/local-redirect/index.html?doc=reference&amp;rel=data-structure-contracts.html%23%2528def._%2528%2528lib._racket%252Fcontract%252Fprivate%252Fmisc..rkt%2529._any%252Fc%2529%2529&amp;version=8.11" class="RktValLink Sq" data-pltdoc="x">any/c</a></span></p></blockquote></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">e</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym"><a href="#%28def._%28%28lib._symalg%2Fmain..rkt%29._symalg-expr~3f%29%29" class="RktValLink" data-pltdoc="x">symalg-expr?</a></span></td></tr></table></blockquote></div><div class="SIntrapara">Returns the s-expression representation of a symbolic algebraic expression.</div></p><div class="navsetbottom"><span class="navleft"><form class="searchform"><input class="searchbox" id="searchbox" type="text" tabindex="1" placeholder="...search manuals..." title="Enter a search string to search the manuals" onkeypress="return DoSearchKey(event, this, &quot;8.11&quot;, &quot;../&quot;);"/></form>&nbsp;&nbsp;<a href="../index.html" title="up to the documentation top" data-pltdoc="x" onclick="return GotoPLTRoot(&quot;8.11&quot;);">top</a><span class="tocsettoggle">&nbsp;&nbsp;<a href="javascript:void(0);" title="show/hide table of contents" onclick="TocsetToggle();">contents</a></span></span><span class="navright">&nbsp;&nbsp;<span class="nonavigation">&larr; prev</span>&nbsp;&nbsp;<a href="../index.html" title="up to the documentation top" data-pltdoc="x" onclick="return GotoPLTRoot(&quot;8.11&quot;);">up</a>&nbsp;&nbsp;<span class="nonavigation">next &rarr;</span></span>&nbsp;</div></div></div><div id="contextindicator">&nbsp;</div></body></html>
