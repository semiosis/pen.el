HTTP/1.1 200 OK
content-security-policy: object-src 'none'; base-uri 'none'; script-src 'unsafe-inline' 'strict-dynamic' https: http: 'sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8=' 'sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=' 'sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE=' 'sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=' 'sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw=' 'sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=' 'sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc=' 'sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=' 'sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w=' 'sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=' 'sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='
x-content-type-options: nosniff
x-frame-options: deny
content-type: text/html; charset=utf-8
Transfer-Encoding: chunked
Date: Tue, 13 Sep 2022 08:05:19 GMT
Server: Google Frontend
Via: 1.1 google
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000



<!DOCTYPE html>
<html lang="en" data-layout="responsive">
  <head>
    
    <script>
      window.addEventListener('error', window.__err=function f(e){f.p=f.p||[];f.p.push(e)});
    </script>
    <script>
      (function() {
        const theme = document.cookie.match(/prefers-color-scheme=(light|dark|auto)/)?.[1]
        if (theme) {
          document.querySelector('html').setAttribute('data-theme', theme);
        }
      }())
    </script>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="Description" content="Package errors implements functions to manipulate errors.">
    
    <meta class="js-gtmID" data-gtmid="GTM-W8MVQXG">
    <link rel="shortcut icon" href="/static/shared/icon/favicon.ico">
    
  <link rel="canonical" href="https://pkg.go.dev/errors">

    <link href="/static/frontend/frontend.min.css?version=prod-frontend-00051-nam" rel="stylesheet">
    
  <title>errors package - errors - Go Packages</title>

    
  <link href="/static/frontend/unit/unit.min.css?version=prod-frontend-00051-nam" rel="stylesheet">
  
  <link href="/static/frontend/unit/main/main.min.css?version=prod-frontend-00051-nam" rel="stylesheet">


  </head>
  <body>
    
    <script>
      function loadScript(src, mod = true) {
        let s = document.createElement('script');
        s.src = src;
        if (mod) {
          s.type = 'module';
          s.async = true;
          s.defer = true
        }
        document.head.appendChild(s);
      }
      loadScript("/third_party/dialog-polyfill/dialog-polyfill.js", false)
      loadScript("/static/frontend/frontend.js");
    </script>
    
  <header class="go-Header go-Header--full js-siteHeader">
    <div class="go-Header-inner go-Header-inner--dark">
      <nav class="go-Header-nav">
        <a href="https://go.dev/" class="js-headerLogo" data-gtmc="nav link"
            data-test-id="go-header-logo-link">
          <img class="go-Header-logo" src="/static/shared/logo/go-white.svg" alt="Go">
        </a>
        <div class="go-Header-rightContent">
          
<div class="go-SearchForm js-searchForm">
  <form
    class="go-InputGroup go-ShortcutKey go-SearchForm-form"
    action="/search"
    data-shortcut="/"
    data-shortcut-alt="search"
    data-gtmc="search form"
    aria-label="Search for a package"
    role="search"
  >
    <input name="q" class="go-Input js-searchFocus" aria-label="Search for a package" type="search"
        autocapitalize="off" autocomplete="off" autocorrect="off" spellcheck="false"
        placeholder="Search packages or symbols"
        value="" />
    <input name="m" value="" hidden>
    <button class="go-Button go-Button--inverted" aria-label="Submit search">
      <img
        class="go-Icon"
        height="24"
        width="24"
        src="/static/shared/icon/search_gm_grey_24dp.svg"
        alt=""
      />
    </button>
  </form>
  <button class="go-SearchForm-expandSearch js-expandSearch" data-gtmc="nav button"
      aria-label="Open search" data-test-id="expand-search">
    <img class="go-Icon go-Icon--inverted" height="24" width="24"
        src="/static/shared/icon/search_gm_grey_24dp.svg" alt="">
  </button>
</div>

          <ul class="go-Header-menu">
            <li class="go-Header-menuItem">
              <a href="https://go.dev/solutions/" data-gtmc="nav link">Why Go</a>
            </li>
            <li class="go-Header-menuItem">
              <a href="https://go.dev/learn/" data-gtmc="nav link">Get Started</a>
            </li>
            <li class="go-Header-menuItem">
              <a href="https://golang.org/doc/" data-gtmc="nav link">Docs</a>
            </li>
            <li class="go-Header-menuItem go-Header-menuItem--active">
              <a href="/" data-gtmc="nav link">Packages</a>
            </li>
            <li class="go-Header-menuItem">
              <a href="https://play.golang.org/" data-gtmc="nav link">Play</a>
            </li>
            <li class="go-Header-menuItem">
              <a href="https://go.dev/blog/" data-gtmc="nav link">Blog</a>
            </li>
          </ul>
          <button class="go-Header-navOpen js-headerMenuButton go-Header-navOpen--white" data-gtmc="nav button" aria-label="Open navigation">
          </button>
        </div>
      </nav>
    </div>
  </header>
  <aside class="go-NavigationDrawer js-header">
    <nav>
      <div class="go-NavigationDrawer-header">
        <a href="https://go.dev/" tabindex="-1">
          <img class="go-NavigationDrawer-logo" src="/static/shared/logo/go-blue.svg" alt="Go.">
        </a>
      </div>
      <ul class="go-NavigationDrawer-list">
          <li class="go-NavigationDrawer-listItem">
            <a href="https://go.dev/solutions/" tabindex="-1">Why Go</a>
          </li>
          <li class="go-NavigationDrawer-listItem">
            <a href="https://go.dev/learn/" tabindex="-1">Get Started</a>
          </li>
          <li class="go-NavigationDrawer-listItem">
            <a href="https://golang.org/doc/" tabindex="-1">Docs</a>
          </li>
          <li class="go-NavigationDrawer-listItem go-NavigationDrawer-listItem--active">
            <a href="/" tabindex="-1">Packages</a>
          </li>
          <li class="go-NavigationDrawer-listItem">
            <a href="https://play.golang.org/" tabindex="-1">Play</a>
          </li>
          <li class="go-NavigationDrawer-listItem">
            <a href="https://go.dev/blog" tabindex="-1">Blog</a>
          </li>
      </ul>
    </nav>
  </aside>
  <div class="go-NavigationDrawer-scrim js-scrim" role="presentation"></div>

    
  <main class="go-Main">
    <div class="go-Main-banner" role="alert"></div>
    <header class="go-Main-header js-mainHeader">
  
  
  <nav class="go-Main-headerBreadcrumb go-Breadcrumb" aria-label="Breadcrumb" data-test-id="UnitHeader-breadcrumb">
    <ol>
      
        
          <li data-test-id="UnitHeader-breadcrumbItem">
            <a href="/" data-gtmc="breadcrumb link">Discover Packages</a>
          </li>
        
          <li data-test-id="UnitHeader-breadcrumbItem">
            <a href="/std" data-gtmc="breadcrumb link">Standard library</a>
          </li>
        
        <li>
          <a href="/errors@go1.19.1" data-gtmc="breadcrumb link" aria-current="location"
              data-test-id="UnitHeader-breadcrumbCurrent">
            errors
          </a>
          
            <button
              class="go-Button go-Button--inline go-Clipboard js-clipboard"
              title="Copy path to clipboard.&#10;&#10;errors"
              aria-label="Copy Path to Clipboard"
              data-to-copy="errors"
              data-gtmc="breadcrumbs button"
            >
              <img
                class="go-Icon go-Icon--accented"
                height="24"
                width="24"
                src="/static/shared/icon/content_copy_gm_grey_24dp.svg"
                alt=""
              >
            </button>
          
        
      </li>
    </ol>
  </nav>

  <div class="go-Main-headerContent">
    
  <div class="go-Main-headerTitle js-stickyHeader">
    <a class="go-Main-headerLogo" href="https://go.dev/" aria-hidden="true" tabindex="-1" data-gtmc="header link" aria-label="Link to Go Homepage">
      <img height="78" width="207" src="/static/shared/logo/go-blue.svg" alt="Go">
    </a>
    <h1 class="UnitHeader-titleHeading" data-test-id="UnitHeader-title">errors</h1>
    
      <span class="go-Chip go-Chip--inverted">package</span>
    
      <span class="go-Chip go-Chip--inverted">standard library</span>
    
    
      
        <button
          class="go-Button go-Button--inline go-Clipboard js-clipboard"
          title="Copy path to clipboard.&#10;&#10;errors"
          aria-label="Copy Path to Clipboard"
          data-to-copy="errors"
          data-gtmc="title button"
          tabindex="-1"
        >
          <img
            class="go-Icon go-Icon--accented"
            height="24"
            width="24"
            src="/static/shared/icon/content_copy_gm_grey_24dp.svg"
            alt=""
          />
        </button>
      
    
  </div>

    
  <div class="go-Main-headerDetails">
    
      
  <span class="go-Main-headerDetailItem" data-test-id="UnitHeader-version">
    <a href="?tab=versions" aria-label="Go to Versions" data-gtmc="header link"><span class="go-textSubtle">Version: </span>go1.19.1</a>
    
    <span class="DetailsHeader-badge--latest" data-test-id="UnitHeader-minorVersionBanner">
      <span class="go-Chip DetailsHeader-span--latest">Latest</span>
      <span class="go-Chip DetailsHeader-span--notAtLatest">
        Latest
        
  <details class="go-Tooltip js-tooltip" data-gtmc="tooltip">
    <summary>
      <img class="go-Icon go-Icon--inverted" height="24" width="24" src="/static/shared/icon/alert_gm_grey_24dp.svg" alt="Warning">
    </summary>
    <p>This package is not in the latest version of its module.</p>
  </details>

      </span>
      <a href="/errors" aria-label="Go to Latest Version" data-gtmc="header link">
        <span class="go-Chip go-Chip--alert DetailsHeader-span--goToLatest">Go to latest</span>
      </a>
    </span>
  </span>

      
  <span class="go-Main-headerDetailItem" data-test-id="UnitHeader-commitTime">
    Published: Sep  6, 2022
  </span>

      
  <span class="go-Main-headerDetailItem" data-test-id="UnitHeader-licenses">
    License: <a href="/errors?tab=licenses" data-test-id="UnitHeader-license"
            aria-label="Go to Licenses" data-gtmc="header link">BSD-3-Clause</a>
      
    
  </span>

      
        
  <span class="go-Main-headerDetailItem" data-test-id="UnitHeader-imports">
    <a href="/errors?tab=imports" aria-label="Go to Imports"
        data-gtmc="header link">
      <span class="go-textSubtle">Imports: </span>1
    </a>
  </span>

        
  <span class="go-Main-headerDetailItem" data-test-id="UnitHeader-importedby">
    <a href="/errors?tab=importedby" aria-label="Go to Imported By"
        data-gtmc="header link">
       <span class="go-textSubtle">Imported by: </span>662,067
    </a>
  </span>

      
    
  </div>
  
  <div class="UnitHeader-overflowContainer">
    <svg class="UnitHeader-overflowImage" xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24">
      <path d="M0 0h24v24H0z" fill="none"/>
      <path d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"/>
    </svg>
    <select class="UnitHeader-overflowSelect js-selectNav" tabindex="-1">
      <option value="/">Main</option>
      <option value="/errors?tab=versions">
        Versions
      </option>
      <option value="/errors?tab=licenses">
        Licenses
      </option>
      
        <option value="/errors?tab=imports">
          Imports
        </option>
        <option value="/errors?tab=importedby">
          Imported By
        </option>
      
    </select>
  </div>


  </div>

</header>
    <aside class="go-Main-aside  js-mainAside">
  
  <div class="UnitMeta">
    <h2 class="go-textLabel">Details</h2>
    
  <ul class="UnitMeta-details">
    <li>
      <details class="go-Tooltip js-tooltip" data-gtmc="tooltip">
        <summary class="go-textSubtle">
          
  <img class="go-Icon go-Icon--accented"src="/static/shared/icon/check_circle_gm_grey_24dp.svg" alt="checked"height="24" width="24">

          Valid <a href="https://cs.opensource.google/go/go/+/go1.19.1:src/go.mod" target="_blank" rel="noopener">go.mod</a> file
          <img class="go-Icon" src="/static/shared/icon/help_gm_grey_24dp.svg" alt="" height="24" width="24">
        </summary>
        <p>
          The Go module system was introduced in Go 1.11 and is the official dependency management
          solution for Go.
        </p>
      </details>
    </li>
    <li>
      <details class="go-Tooltip js-tooltip" data-gtmc="tooltip">
        <summary class="go-textSubtle">
          
  <img class="go-Icon go-Icon--accented"src="/static/shared/icon/check_circle_gm_grey_24dp.svg" alt="checked"height="24" width="24">

          Redistributable license
          <img class="go-Icon" src="/static/shared/icon/help_gm_grey_24dp.svg" alt="" height="24" width="24">
        </summary>
        <p>
          Redistributable licenses place minimal restrictions on how software can be used,
          modified, and redistributed.
        </p>
      </details>
    </li>
    <li>
      <details class="go-Tooltip js-tooltip" data-gtmc="tooltip">
        <summary class="go-textSubtle">
          
  <img class="go-Icon go-Icon--accented"src="/static/shared/icon/check_circle_gm_grey_24dp.svg" alt="checked"height="24" width="24">

          Tagged version
          <img class="go-Icon" src="/static/shared/icon/help_gm_grey_24dp.svg" alt="" height="24" width="24">
        </summary>
        <p>Modules with tagged versions give importers more predictable builds.</p>
      </details>
    </li>
    <li>
      <details class="go-Tooltip js-tooltip" data-gtmc="tooltip">
        <summary class="go-textSubtle">
          
  <img class="go-Icon go-Icon--accented"src="/static/shared/icon/check_circle_gm_grey_24dp.svg" alt="checked"height="24" width="24">

          Stable version
          <img class="go-Icon" src="/static/shared/icon/help_gm_grey_24dp.svg" alt="" height="24" width="24">
        </summary>
        <p>When a project reaches major version v1 it is considered stable.</p>
      </details>
    </li>
    <li class="UnitMeta-detailsLearn">
      <a href="/about#best-practices-h2" data-gtmc="meta link">Learn more</a>
    </li>
  </ul>

    <h2 class="go-textLabel">Repository</h2>
    <div class="UnitMeta-repo">
      
        <a href="https://cs.opensource.google/go/go" title="https://cs.opensource.google/go/go" target="_blank" rel="noopener">
          cs.opensource.google/go/go
        </a>
      
    </div>
    <h2 class="go-textLabel">Links</h2>
    <ul class="UnitMeta-links">
      <li>
      
        <a href="https://go.dev/security/policy"
            title="Report security issues in the Go standard library and sub-repositories">
          <img class="go-Icon" height="24" width="24" src="/static/shared/icon/security_grey_24dp.svg" alt="">
          Report a Vulnerability
        </a>
      
      </li>
      
      
  

      
  

      
  

    </ul>
  </div>

</aside>
    <nav class="go-Main-nav go-Main-nav--sticky js-mainNav" aria-label="Outline">
  <div class="go-Main-navDesktop">
    
  <div class="UnitOutline-jumpTo">
    <button class="UnitOutline-jumpToInput go-ShortcutKey js-jumpToInput"
        aria-controls="jump-to-modal"
        aria-label="Open Jump to Identifier"
        data-shortcut="f"
        data-shortcut-alt="find"
        data-test-id="jump-to-button" data-gtmc="outline button">
      Jump to ...
    </button>
  </div>
  <ul class="go-Tree js-tree" role="tree" aria-label="Outline">
    
    
      <li>
        <a href="#section-documentation" data-gtmc="outline link">
          Documentation
        </a>
        
<ul>
  
    <li>
      <a href="#pkg-overview" data-gtmc="doc outline link">Overview</a>
    </li>
  <li class="DocNav-overview">
      <a href="#pkg-index" data-gtmc="doc outline link">
        Index
      </a>
      
        <ul>
          <li>
            <a href="#pkg-examples" data-gtmc="doc outline link">
              Examples
            </a>
          </li>
        </ul>
      
    </li>
    <li class="DocNav-constants">
      <a href="#pkg-constants" data-gtmc="doc outline link">
        Constants
      </a>
    </li>
    <li class="DocNav-variables">
      <a href="#pkg-variables" data-gtmc="doc outline link">
        Variables
      </a>
    </li>
    <li class="DocNav-functions">
      <a href="#pkg-functions" data-gtmc="doc outline link">
        Functions
      </a>
      
        <ul>
          
            <li>
              <a href="#As" title="As(err, target)" data-gtmc="doc outline link">
                As(err, target)
              </a>
            </li>
          
            <li>
              <a href="#Is" title="Is(err, target)" data-gtmc="doc outline link">
                Is(err, target)
              </a>
            </li>
          
            <li>
              <a href="#New" title="New(text)" data-gtmc="doc outline link">
                New(text)
              </a>
            </li>
          
            <li>
              <a href="#Unwrap" title="Unwrap(err)" data-gtmc="doc outline link">
                Unwrap(err)
              </a>
            </li>
          
        </ul>
      
    </li>
    <li class="DocNav-types">
      <a href="#pkg-types" data-gtmc="doc outline link">
        Types
      </a>
      <ul>
         
      </ul>
    </li>
  
  
</ul>

      </li>
    
    
      <li>
        <a href="#section-sourcefiles" data-gtmc="outline link">
          Source Files
        </a>
      </li>
    
    
  </ul>

  </div>
  <div class="go-Main-navMobile js-mainNavMobile">
    <label class="go-Label">
      <select class="go-Select">
        
          <option selected disabled>Documentation</option>
        
      </select>
    </label>
  </div>
</nav>
    <article class="go-Main-article js-mainContent">
  <div class="UnitDetails" data-test-id="UnitDetails" style="display: block;">
    <div class="UnitDetails-content js-unitDetailsContent" data-test-id="UnitDetails-content">
      
      
        
          
  <div class="UnitDoc">
    <h2 class="UnitDoc-title" id="section-documentation">
      <img class="go-Icon" height="24" width="24" src="/static/shared/icon/code_gm_grey_24dp.svg" alt="">
      Documentation
      <a class="UnitDoc-idLink" href="#section-documentation">¶</a>
    </h2>
    
  
    
  

    <div class="Documentation js-documentation">
      
        

<div class="Documentation-content js-docContent"> <section class="Documentation-overview">
    <h3 tabindex="-1" id="pkg-overview" class="Documentation-overviewHeader">Overview <a href="#pkg-overview">¶</a></h3>

<p>Package errors implements functions to manipulate errors.
</p><p>The New function creates errors whose only content is a text message.
</p><p>The Unwrap, Is and As functions work on errors that may wrap other errors.
An error wraps another error if its type has the method
</p><pre>Unwrap() error
</pre><p>If e.Unwrap() returns a non-nil error w, then we say that e wraps w.
</p><p>Unwrap unpacks wrapped errors. If its argument&#39;s type has an
Unwrap method, it calls the method once. Otherwise, it returns nil.
</p><p>A simple way to create wrapped errors is to call fmt.Errorf and apply the %w verb
to the error argument:
</p><pre>errors.Unwrap(fmt.Errorf(&#34;... %w ...&#34;, ..., err, ...))
</pre><p>returns err.
</p><p>Is unwraps its first argument sequentially looking for an error that matches the
second. It reports whether it finds a match. It should be used in preference to
simple equality checks:
</p><pre>if errors.Is(err, fs.ErrExist)
</pre><p>is preferable to
</p><pre>if err == fs.ErrExist
</pre><p>because the former will succeed if err wraps fs.ErrExist.
</p><p>As unwraps its first argument sequentially looking for an error that can be
assigned to its second argument, which must be a pointer. If it succeeds, it
performs the assignment and returns true. Otherwise, it returns false. The form
</p><pre>var perr *fs.PathError
if errors.As(err, &amp;perr) {
	fmt.Println(perr.Path)
}
</pre><p>is preferable to
</p><pre>if perr, ok := err.(*fs.PathError); ok {
	fmt.Println(perr.Path)
}
</pre><p>because the former will succeed if err wraps an *fs.PathError.
</p>
<details tabindex="-1" id="example-package" class="Documentation-exampleDetails js-exampleContainer">
<summary class="Documentation-exampleDetailsHeader">Example <a href="#example-package">¶</a></summary>
<div class="Documentation-exampleDetailsBody">

<pre class="Documentation-exampleCode">
package main

import (
	&#34;fmt&#34;
	&#34;time&#34;
)

// MyError is an error implementation that includes a time and message.
type MyError struct {
	When time.Time
	What string
}

func (e MyError) Error() string {
	return fmt.Sprintf(&#34;%v: %v&#34;, e.When, e.What)
}

func oops() error {
	return MyError{
		time.Date(1989, 3, 15, 22, 30, 0, 0, time.UTC),
		&#34;the file system has gone away&#34;,
	}
}

func main() {
	if err := oops(); err != nil {
		fmt.Println(err)
	}
}
</pre>

<pre><span class="Documentation-exampleOutputLabel">Output:</span>

<span class="Documentation-exampleOutput">1989-03-15 22:30:00 +0000 UTC: the file system has gone away
</span></pre>
</div>
<div class="Documentation-exampleButtonsContainer">
        <p class="Documentation-exampleError" role="alert" aria-atomic="true"></p>
        <button class="Documentation-exampleShareButton" aria-label="Share Code">Share</button>
        <button class="Documentation-exampleFormatButton" aria-label="Format Code">Format</button>
        <button class="Documentation-exampleRunButton" aria-label="Run Code">Run</button>
      </div></details>

</section><section class="Documentation-index">
    <h3 id="pkg-index" class="Documentation-indexHeader">Index <a href="#pkg-index">¶</a></h3>

<ul class="Documentation-indexList">
<li class="Documentation-indexFunction">
        <a href="#As">func As(err error, target any) bool</a></li>
<li class="Documentation-indexFunction">
        <a href="#Is">func Is(err, target error) bool</a></li>
<li class="Documentation-indexFunction">
        <a href="#New">func New(text string) error</a></li>
<li class="Documentation-indexFunction">
        <a href="#Unwrap">func Unwrap(err error) error</a></li>
</ul>
</section><section class="Documentation-examples">
    <h4 tabindex="-1" id="pkg-examples" class="Documentation-examplesHeader">Examples <a class="Documentation-idLink" href="#pkg-examples">¶</a></h4>
<ul class="Documentation-examplesList">
<li><a href="#example-package" class="js-exampleHref">Package</a></li>
<li><a href="#example-As" class="js-exampleHref">As</a></li>
<li><a href="#example-Is" class="js-exampleHref">Is</a></li>
<li><a href="#example-New" class="js-exampleHref">New</a></li>
<li><a href="#example-New-Errorf" class="js-exampleHref">New (Errorf)</a></li>
<li><a href="#example-Unwrap" class="js-exampleHref">Unwrap</a></li>
</ul>
</section><h3 tabindex="-1" id="pkg-constants" class="Documentation-constantsHeader">Constants <a href="#pkg-constants">¶</a></h3>

  <section class="Documentation-constants"><p class="Documentation-empty">This section is empty.</p></section>

  <h3 tabindex="-1" id="pkg-variables" class="Documentation-variablesHeader">Variables <a href="#pkg-variables">¶</a></h3>

  <section class="Documentation-variables"><p class="Documentation-empty">This section is empty.</p></section>

  <h3 tabindex="-1" id="pkg-functions" class="Documentation-functionsHeader">Functions <a href="#pkg-functions">¶</a></h3>

  <section class="Documentation-functions"><div class="Documentation-function">
	  
  
  
    <h4 tabindex="-1" id="As" data-kind="function" class="Documentation-functionHeader">
      <span>func <a class="Documentation-source" href="https://cs.opensource.google/go/go/+/go1.19.1:src/errors/wrap.go;l=78">As</a> <a class="Documentation-idLink" href="#As">¶</a></span>
  <span class="Documentation-sinceVersion">
    
      <span class="Documentation-sinceVersionLabel">added in</span>
      <span class="Documentation-sinceVersionVersion">go1.13</span>
    
  </span>
</h4>

    
    <div class="Documentation-declaration">
      <pre>func As(err <a href="/builtin#error">error</a>, target <a href="/builtin#any">any</a>) <a href="/builtin#bool">bool</a></pre>
    </div>
  <p>As finds the first error in err&#39;s chain that matches target, and if one is found, sets
target to that error value and returns true. Otherwise, it returns false.
</p><p>The chain consists of err itself followed by the sequence of errors obtained by
repeatedly calling Unwrap.
</p><p>An error matches target if the error&#39;s concrete value is assignable to the value
pointed to by target, or if the error has a method As(interface{}) bool such that
As(target) returns true. In the latter case, the As method is responsible for
setting target.
</p><p>An error type might provide an As method so it can be treated as if it were a
different error type.
</p><p>As panics if target is not a non-nil pointer to either a type that implements
error, or to any interface type.
</p>
<details tabindex="-1" id="example-As" class="Documentation-exampleDetails js-exampleContainer">
<summary class="Documentation-exampleDetailsHeader">Example <a href="#example-As">¶</a></summary>
<div class="Documentation-exampleDetailsBody">

<pre class="Documentation-exampleCode">
package main

import (
	&#34;errors&#34;
	&#34;fmt&#34;
	&#34;io/fs&#34;
	&#34;os&#34;
)

func main() {
	if _, err := os.Open(&#34;non-existing&#34;); err != nil {
		var pathError *fs.PathError
		if errors.As(err, &amp;pathError) {
			fmt.Println(&#34;Failed at path:&#34;, pathError.Path)
		} else {
			fmt.Println(err)
		}
	}

}
</pre>

<pre><span class="Documentation-exampleOutputLabel">Output:</span>

<span class="Documentation-exampleOutput">Failed at path: non-existing
</span></pre>
</div>
<div class="Documentation-exampleButtonsContainer">
        <p class="Documentation-exampleError" role="alert" aria-atomic="true"></p>
        <button class="Documentation-exampleShareButton" aria-label="Share Code">Share</button>
        <button class="Documentation-exampleFormatButton" aria-label="Format Code">Format</button>
        <button class="Documentation-exampleRunButton" aria-label="Run Code">Run</button>
      </div></details>


  

        </div><div class="Documentation-function">
	  
  
  
    <h4 tabindex="-1" id="Is" data-kind="function" class="Documentation-functionHeader">
      <span>func <a class="Documentation-source" href="https://cs.opensource.google/go/go/+/go1.19.1:src/errors/wrap.go;l=40">Is</a> <a class="Documentation-idLink" href="#Is">¶</a></span>
  <span class="Documentation-sinceVersion">
    
      <span class="Documentation-sinceVersionLabel">added in</span>
      <span class="Documentation-sinceVersionVersion">go1.13</span>
    
  </span>
</h4>

    
    <div class="Documentation-declaration">
      <pre>func Is(err, target <a href="/builtin#error">error</a>) <a href="/builtin#bool">bool</a></pre>
    </div>
  <p>Is reports whether any error in err&#39;s chain matches target.
</p><p>The chain consists of err itself followed by the sequence of errors obtained by
repeatedly calling Unwrap.
</p><p>An error is considered to match a target if it is equal to that target or if
it implements a method Is(error) bool such that Is(target) returns true.
</p><p>An error type might provide an Is method so it can be treated as equivalent
to an existing error. For example, if MyError defines
</p><pre>func (m MyError) Is(target error) bool { return target == fs.ErrExist }
</pre><p>then Is(MyError{}, fs.ErrExist) returns true. See syscall.Errno.Is for
an example in the standard library. An Is method should only shallowly
compare err and the target and not call Unwrap on either.
</p>
<details tabindex="-1" id="example-Is" class="Documentation-exampleDetails js-exampleContainer">
<summary class="Documentation-exampleDetailsHeader">Example <a href="#example-Is">¶</a></summary>
<div class="Documentation-exampleDetailsBody">

<pre class="Documentation-exampleCode">
package main

import (
	&#34;errors&#34;
	&#34;fmt&#34;
	&#34;io/fs&#34;
	&#34;os&#34;
)

func main() {
	if _, err := os.Open(&#34;non-existing&#34;); err != nil {
		if errors.Is(err, fs.ErrNotExist) {
			fmt.Println(&#34;file does not exist&#34;)
		} else {
			fmt.Println(err)
		}
	}

}
</pre>

<pre><span class="Documentation-exampleOutputLabel">Output:</span>

<span class="Documentation-exampleOutput">file does not exist
</span></pre>
</div>
<div class="Documentation-exampleButtonsContainer">
        <p class="Documentation-exampleError" role="alert" aria-atomic="true"></p>
        <button class="Documentation-exampleShareButton" aria-label="Share Code">Share</button>
        <button class="Documentation-exampleFormatButton" aria-label="Format Code">Format</button>
        <button class="Documentation-exampleRunButton" aria-label="Run Code">Run</button>
      </div></details>


  

        </div><div class="Documentation-function">
	  
  
  
    <h4 tabindex="-1" id="New" data-kind="function" class="Documentation-functionHeader">
      <span>func <a class="Documentation-source" href="https://cs.opensource.google/go/go/+/go1.19.1:src/errors/errors.go;l=58">New</a> <a class="Documentation-idLink" href="#New">¶</a></span>
  <span class="Documentation-sinceVersion">
    
  </span>
</h4>

    
    <div class="Documentation-declaration">
      <pre>func New(text <a href="/builtin#string">string</a>) <a href="/builtin#error">error</a></pre>
    </div>
  <p>New returns an error that formats as the given text.
Each call to New returns a distinct error value even if the text is identical.
</p>
<details tabindex="-1" id="example-New" class="Documentation-exampleDetails js-exampleContainer">
<summary class="Documentation-exampleDetailsHeader">Example <a href="#example-New">¶</a></summary>
<div class="Documentation-exampleDetailsBody">

<pre class="Documentation-exampleCode">
package main

import (
	&#34;errors&#34;
	&#34;fmt&#34;
)

func main() {
	err := errors.New(&#34;emit macho dwarf: elf header corrupted&#34;)
	if err != nil {
		fmt.Print(err)
	}
}
</pre>

<pre><span class="Documentation-exampleOutputLabel">Output:</span>

<span class="Documentation-exampleOutput">emit macho dwarf: elf header corrupted
</span></pre>
</div>
<div class="Documentation-exampleButtonsContainer">
        <p class="Documentation-exampleError" role="alert" aria-atomic="true"></p>
        <button class="Documentation-exampleShareButton" aria-label="Share Code">Share</button>
        <button class="Documentation-exampleFormatButton" aria-label="Format Code">Format</button>
        <button class="Documentation-exampleRunButton" aria-label="Run Code">Run</button>
      </div></details>

<details tabindex="-1" id="example-New-Errorf" class="Documentation-exampleDetails js-exampleContainer">
<summary class="Documentation-exampleDetailsHeader">Example (Errorf) <a href="#example-New-Errorf">¶</a></summary>
<div class="Documentation-exampleDetailsBody">
<p>The fmt package&#39;s Errorf function lets us use the package&#39;s formatting
features to create descriptive error messages.
</p>

<pre class="Documentation-exampleCode">
package main

import (
	&#34;fmt&#34;
)

func main() {
	const name, id = &#34;bimmler&#34;, 17
	err := fmt.Errorf(&#34;user %q (id %d) not found&#34;, name, id)
	if err != nil {
		fmt.Print(err)
	}
}
</pre>

<pre><span class="Documentation-exampleOutputLabel">Output:</span>

<span class="Documentation-exampleOutput">user &#34;bimmler&#34; (id 17) not found
</span></pre>
</div>
<div class="Documentation-exampleButtonsContainer">
        <p class="Documentation-exampleError" role="alert" aria-atomic="true"></p>
        <button class="Documentation-exampleShareButton" aria-label="Share Code">Share</button>
        <button class="Documentation-exampleFormatButton" aria-label="Format Code">Format</button>
        <button class="Documentation-exampleRunButton" aria-label="Run Code">Run</button>
      </div></details>


  

        </div><div class="Documentation-function">
	  
  
  
    <h4 tabindex="-1" id="Unwrap" data-kind="function" class="Documentation-functionHeader">
      <span>func <a class="Documentation-source" href="https://cs.opensource.google/go/go/+/go1.19.1:src/errors/wrap.go;l=14">Unwrap</a> <a class="Documentation-idLink" href="#Unwrap">¶</a></span>
  <span class="Documentation-sinceVersion">
    
      <span class="Documentation-sinceVersionLabel">added in</span>
      <span class="Documentation-sinceVersionVersion">go1.13</span>
    
  </span>
</h4>

    
    <div class="Documentation-declaration">
      <pre>func Unwrap(err <a href="/builtin#error">error</a>) <a href="/builtin#error">error</a></pre>
    </div>
  <p>Unwrap returns the result of calling the Unwrap method on err, if err&#39;s
type contains an Unwrap method returning error.
Otherwise, Unwrap returns nil.
</p>
<details tabindex="-1" id="example-Unwrap" class="Documentation-exampleDetails js-exampleContainer">
<summary class="Documentation-exampleDetailsHeader">Example <a href="#example-Unwrap">¶</a></summary>
<div class="Documentation-exampleDetailsBody">

<pre class="Documentation-exampleCode">
package main

import (
	&#34;errors&#34;
	&#34;fmt&#34;
)

func main() {
	err1 := errors.New(&#34;error1&#34;)
	err2 := fmt.Errorf(&#34;error2: [%w]&#34;, err1)
	fmt.Println(err2)
	fmt.Println(errors.Unwrap(err2))
	// Output
	// error2: [error1]
	// error1
}
</pre>

<pre><span class="Documentation-exampleOutputLabel">Output:</span>

<span class="Documentation-exampleOutput"></span></pre>
</div>
<div class="Documentation-exampleButtonsContainer">
        <p class="Documentation-exampleError" role="alert" aria-atomic="true"></p>
        <button class="Documentation-exampleShareButton" aria-label="Share Code">Share</button>
        <button class="Documentation-exampleFormatButton" aria-label="Format Code">Format</button>
        <button class="Documentation-exampleRunButton" aria-label="Run Code">Run</button>
      </div></details>


  

        </div></section>

  <h3 tabindex="-1" id="pkg-types" class="Documentation-typesHeader">Types <a href="#pkg-types">¶</a></h3>

  <section class="Documentation-types"><p class="Documentation-empty">This section is empty.</p></section></div> 






      
    </div>
  </div>

        
      
      
        
  <div class="UnitFiles js-unitFiles">
    <h2 class="UnitFiles-title" id="section-sourcefiles">
      <img class="go-Icon" height="24" width="24" src="/static/shared/icon/insert_drive_file_gm_grey_24dp.svg" alt="">
      Source Files
      <a class="UnitFiles-idLink" href="#section-sourcefiles">¶</a>
    </h2>
    <div class="UnitFiles-titleLink">
      <a href="https://cs.opensource.google/go/go/+/go1.19.1:src/errors" target="_blank" rel="noopener">View all</a>
    </div>
    <div>
      <ul class="UnitFiles-fileList"><li>
            <a href="https://cs.opensource.google/go/go/+/go1.19.1:src/errors/errors.go" target="_blank" rel="noopener" title="errors.go">errors.go</a>
          </li><li>
            <a href="https://cs.opensource.google/go/go/+/go1.19.1:src/errors/wrap.go" target="_blank" rel="noopener" title="wrap.go">wrap.go</a>
          </li></ul>
    </div>
  </div>

      
      
    </div>
  </div>
</article>
    <footer class="go-Main-footer"></footer>
  </main>

    
  <footer class="go-Footer">
    
    <div class="go-Footer-links">
      <div class="go-Footer-linkColumn">
        <a href="https://go.dev/solutions" class="go-Footer-link go-Footer-link--primary"
            data-gtmc="footer link">
          Why Go
        </a>
        <a href="https://go.dev/solutions#use-cases" class="go-Footer-link"
            data-gtmc="footer link">
          Use Cases
        </a>
        <a href="https://go.dev/solutions#case-studies" class="go-Footer-link"
            data-gtmc="footer link">
          Case Studies
        </a>
      </div>
      <div class="go-Footer-linkColumn">
        <a href="https://learn.go.dev/" class="go-Footer-link go-Footer-link--primary"
            data-gtmc="footer link">
          Get Started
        </a>
        <a href="https://play.golang.org" class="go-Footer-link" data-gtmc="footer link">
          Playground
        </a>
        <a href="https://tour.golang.org" class="go-Footer-link" data-gtmc="footer link">
          Tour
        </a>
        <a href="https://stackoverflow.com/questions/tagged/go?tab=Newest" class="go-Footer-link"
            data-gtmc="footer link">
          Stack Overflow
        </a>
        <a href="https://go.dev/help" class="go-Footer-link"
            data-gtmc="footer link">
          Help
        </a>
      </div>
      <div class="go-Footer-linkColumn">
        <a href="https://pkg.go.dev" class="go-Footer-link go-Footer-link--primary"
            data-gtmc="footer link">
          Packages
        </a>
        <a href="/std" class="go-Footer-link" data-gtmc="footer link">
          Standard Library
        </a>
      </div>
      <div class="go-Footer-linkColumn">
        <a href="https://go.dev/project" class="go-Footer-link go-Footer-link--primary"
            data-gtmc="footer link">
          About
        </a>
        <a href="https://go.dev/dl/" class="go-Footer-link" data-gtmc="footer link">Download</a>
        <a href="https://go.dev/blog" class="go-Footer-link" data-gtmc="footer link">Blog</a>
        <a href="https://github.com/golang/go/issues" class="go-Footer-link" data-gtmc="footer link">
          Issue Tracker
        </a>
        <a href="https://go.dev/doc/devel/release.html" class="go-Footer-link"
            data-gtmc="footer link">
          Release Notes
        </a>
        <a href="https://blog.golang.org/go-brand" class="go-Footer-link" data-gtmc="footer link">
          Brand Guidelines
        </a>
        <a href="https://go.dev/conduct" class="go-Footer-link" data-gtmc="footer link">
          Code of Conduct
        </a>
      </div>
      <div class="go-Footer-linkColumn">
        <a href="https://www.twitter.com/golang" class="go-Footer-link go-Footer-link--primary"
            data-gtmc="footer link">
          Connect
        </a>
        <a href="https://www.twitter.com/golang" class="go-Footer-link" data-gtmc="footer link">
          Twitter
        </a>
        <a href="https://github.com/golang" class="go-Footer-link" data-gtmc="footer link">GitHub</a>
        <a href="https://invite.slack.golangbridge.org/" class="go-Footer-link"
            data-gtmc="footer link">
          Slack
        </a>
        <a href="https://reddit.com/r/golang" class="go-Footer-link" data-gtmc="footer link">
          r/golang
        </a>
        <a href="https://www.meetup.com/pro/go" class="go-Footer-link" data-gtmc="footer link">
          Meetup
        </a>
        <a href="https://golangweekly.com/" class="go-Footer-link" data-gtmc="footer link">
          Golang Weekly
        </a>
      </div>
    </div>
    <div class="go-Footer-bottom">
      <img class="go-Footer-gopher"  width="1431" height="901"
          src="/static/shared/gopher/pilot-bust-1431x901.svg" alt="Gopher in flight goggles">
      <ul class="go-Footer-listRow">
        <li class="go-Footer-listItem">
          <a href="https://go.dev/copyright" data-gtmc="footer link">Copyright</a>
        </li>
        <li class="go-Footer-listItem">
          <a href="https://go.dev/tos" data-gtmc="footer link">Terms of Service</a>
        </li>
        <li class="go-Footer-listItem">
          <a href="http://www.google.com/intl/en/policies/privacy/" data-gtmc="footer link"
              target="_blank" rel="noopener">
            Privacy Policy
          </a>
        </li>
        <li class="go-Footer-listItem">
          <a href="https://go.dev/s/pkgsite-feedback" target="_blank" rel="noopener"
              data-gtmc="footer link">
            Report an Issue
          </a>
        </li>
        <li class="go-Footer-listItem">
          <button class="go-Button go-Button--text go-Footer-toggleTheme js-toggleTheme" aria-label="Toggle theme">
            <img data-value="auto" class="go-Icon go-Icon--inverted" height="24" width="24" src="/static/shared/icon/brightness_6_gm_grey_24dp.svg" alt="System theme">
            <img data-value="dark" class="go-Icon go-Icon--inverted" height="24" width="24" src="/static/shared/icon/brightness_2_gm_grey_24dp.svg" alt="Dark theme">
            <img data-value="light" class="go-Icon go-Icon--inverted" height="24" width="24" src="/static/shared/icon/light_mode_gm_grey_24dp.svg" alt="Light theme">
          </button>
          <button class="go-Button go-Button--text go-Footer-keyboard js-openShortcuts" aria-label="Open shorcuts modal">
            <img class="go-Icon go-Icon--inverted" height="24" width="24" src="/static/shared/icon/keyboard_grey_24dp.svg" alt="">
          </button>
        </li>
      </ul>
      <a class="go-Footer-googleLogo" href="https://google.com" target="_blank"rel="noopener"
          data-gtmc="footer link">
        <img class="go-Footer-googleLogoImg" height="24" width="72"
            src="/static/shared/logo/google-white.svg" alt="Google logo">
      </a>
    </div>
  </footer>

    
  <dialog id="jump-to-modal" class="JumpDialog go-Modal go-Modal--md js-modal">
    <form method="dialog" data-gmtc="jump to form" aria-label="Jump to Identifier">
      <div class="Dialog-title go-Modal-header">
        <h2>Jump to</h2>
        <button
          class="go-Button go-Button--inline"
          type="button"
          data-modal-close
          data-gtmc="modal button"
          aria-label="Close"
        >
          <img
            class="go-Icon"
            height="24"
            width="24"
            src="/static/shared/icon/close_gm_grey_24dp.svg"
            alt=""
          />
        </button>
      </div>
      <div class="JumpDialog-filter">
        <input class="JumpDialog-input go-Input" autocomplete="off" type="text">
      </div>
      <div class="JumpDialog-body go-Modal-body">
        <div class="JumpDialog-list"></div>
      </div>
      <div class="go-Modal-actions">
        <button class="go-Button" data-test-id="close-dialog">Close</button>
      </div>
    </form>
  </dialog>

  <dialog class="ShortcutsDialog go-Modal go-Modal--sm js-modal">
    <form method="dialog">
      <div class="go-Modal-header">
        <h2>Keyboard shortcuts</h2>
        <button
          class="go-Button go-Button--inline"
          type="button"
          data-modal-close
          data-gtmc="modal button"
          aria-label="Close"
        >
          <img
            class="go-Icon"
            height="24"
            width="24"
            src="/static/shared/icon/close_gm_grey_24dp.svg"
            alt=""
          />
        </button>
      </div>
      <div class="go-Modal-body">
        <table>
          <tbody>
            <tr><td class="ShortcutsDialog-key">
              <strong>?</strong></td><td> : This menu</td>
            </tr>
            <tr><td class="ShortcutsDialog-key">
              <strong>/</strong></td><td> : Search site</td>
            </tr>
            <tr><td class="ShortcutsDialog-key">
              <strong>f</strong> or <strong>F</strong></td><td> : Jump to</td>
            </tr>
            <tr>
              <td class="ShortcutsDialog-key"><strong>y</strong> or <strong>Y</strong></td>
              <td> : Canonical URL</td>
            </tr>
          </tbody>
        </table>
      </div>
      <div class="go-Modal-actions">
        <button class="go-Button" data-test-id="close-dialog">Close</button>
      </div>
    </form>
  </dialog>

    
      <script>
        // this will throw if the querySelector can’t find the element
        const gtmId = document.querySelector('.js-gtmID').dataset.gtmid;
        if (!gtmId) {
          throw new Error('Google Tag Manager ID not found');
        }
        loadScript(`https://www.googletagmanager.com/gtm.js?id=${gtmId}`);
      </script>
      <noscript>
        <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-W8MVQXG"
                height="0" width="0" style="display:none;visibility:hidden">
        </iframe>
      </noscript>
    
    
  
  <div class="js-canonicalURLPath" data-canonical-url-path="/errors@go1.19.1" hidden></div>
  <script>
    loadScript('/static/frontend/unit/main/main.js')
  </script>

  <script>
    loadScript('/static/frontend/unit/unit.js')
  </script>

  </body>
</html>
