HTTP/1.1 200 OK
Date: Wed, 27 Nov 2024 02:56:18 GMT
Content-Type: text/html; charset=utf-8
Transfer-Encoding: chunked
Connection: keep-alive
x-amz-id-2: BEAM4KNRnJOwbD7+MHRcdDW6XrAViujfQsKPM0MRJUm1s9gqhZXhXrIJSUTtgmGVKbNe3uOikLk=
x-amz-request-id: YCSHRB9R43AASZZ6
Cache-Control: max-age=0, no-cache
Last-Modified: Sat, 27 Jul 2019 23:29:19 GMT
x-amz-storage-class: REDUCED_REDUNDANCY
cf-cache-status: DYNAMIC
vary: accept-encoding
Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v4?s=JBb631kJLNg%2BpLiIfty6edzyDrqjCs3t0ewyRW6ADWTy9PvuRTzvOO4vTWXtGgEBMLzFYxy260J3C1yKR2BxjDZBQfvGgk5H4KAcfDC8pwSGToM2PyUlGEVguiVsnlRQQFX0kkT1%2F1AW"}],"group":"cf-nel","max_age":604800}
NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
Server: cloudflare
CF-RAY: 8e8ed8229c86a7ef-SYD
alt-svc: h3=":443"; ma=86400
server-timing: cfL4;desc="?proto=TCP&rtt=67284&sent=102&recv=30&lost=0&retrans=9&sent_bytes=80355&recv_bytes=2238&delivery_rate=367053&cwnd=161&unsent_bytes=0&cid=7d2157471387f880&ts=508749&x=0"

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"/><meta name="viewport" content="width=device-width, initial-scale=0.8"/><title>14&nbsp;Typed Languages with Turnstile</title><link rel="stylesheet" type="text/css" href="scribble.css" title="default"/><link rel="stylesheet" type="text/css" href="racket.css" title="default"/><link rel="stylesheet" type="text/css" href="figure.css" title="default"/><link rel="stylesheet" type="text/css" href="manual-style.css" title="default"/><link rel="stylesheet" type="text/css" href="manual-racket.css" title="default"/><script type="text/javascript" src="scribble-common.js"></script><script type="text/javascript" src="figure.js"></script><script type="text/javascript" src="manual-racket.js"></script><!--[if IE 6]><style type="text/css">.SIEHidden { overflow: hidden; }</style><![endif]--></head><body id="scribble-racket-lang-org"><div class="tocset"><div class="tocview"><div class="tocviewlist tocviewlisttopspace"><div class="tocviewtitle"><table cellspacing="0" cellpadding="0"><tr><td style="width: 1em;"><a href="javascript:void(0);" title="Expand/Collapse" class="tocviewtoggle" onclick="TocviewToggle(this,&quot;tocview_0&quot;);">&#9660;</a></td><td></td><td><a href="index.html" class="tocviewlink" data-pltdoc="x">Racket School 2019:<span class="mywbr"> &nbsp;</span> <br/>
<span class="Smaller">The &#8220;How to Design Languages&#8221; Track</span></a></td></tr></table></div><div class="tocviewsublisttop" style="display: block;" id="tocview_0"><table cellspacing="0" cellpadding="0"><tr><td align="right">1&nbsp;</td><td><a href="mon-mor-lecture.html" class="tocviewlink" data-pltdoc="x">Language-<wbr></wbr>Oriented Programming</a></td></tr><tr><td align="right">2&nbsp;</td><td><a href="mon-mor-lab.html" class="tocviewlink" data-pltdoc="x">Macro Expansion</a></td></tr><tr><td align="right">3&nbsp;</td><td><a href="mon-aft-lecture.html" class="tocviewlink" data-pltdoc="x">Language Extensions via Macros</a></td></tr><tr><td align="right">4&nbsp;</td><td><a href="mon-aft-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> Simple Macros</a></td></tr><tr><td align="right">5&nbsp;</td><td><a href="tue-mor-lecture.html" class="tocviewlink" data-pltdoc="x">Advanced Racket Macros</a></td></tr><tr><td align="right">6&nbsp;</td><td><a href="tue-mor-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> Syntax Patterns &amp; Classes</a></td></tr><tr><td align="right">7&nbsp;</td><td><a href="tue-aft-lecture.html" class="tocviewlink" data-pltdoc="x">Lexical Scope, (Un)Hygienic Macros</a></td></tr><tr><td align="right">8&nbsp;</td><td><a href="tue-aft-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> Comfortable Macros</a></td></tr><tr><td align="right">9&nbsp;</td><td><a href="wed-mor-lecture.html" class="tocviewlink" data-pltdoc="x">Modules, Macros, Languages</a></td></tr><tr><td align="right">10&nbsp;</td><td><a href="wed-mor-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> Languages via Macros</a></td></tr><tr><td align="right">11&nbsp;</td><td><a href="wed-aft-lecture.html" class="tocviewlink" data-pltdoc="x">More Language Variations</a></td></tr><tr><td align="right">12&nbsp;</td><td><a href="wed-aft-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> Languages and Readers</a></td></tr><tr><td align="right">13&nbsp;</td><td><a href="thu-mor-lecture.html" class="tocviewlink" data-pltdoc="x">Types and Type Checking</a></td></tr><tr><td align="right">14&nbsp;</td><td><a href="" class="tocviewselflink" data-pltdoc="x">Typed Languages with Turnstile</a></td></tr><tr><td align="right">15&nbsp;</td><td><a href="thu-aft-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Lab</span> My First Turnstile Language</a></td></tr><tr><td align="right">16&nbsp;</td><td><a href="fri-mor-lecture.html" class="tocviewlink" data-pltdoc="x">Two Techniques</a></td></tr><tr><td align="right">17&nbsp;</td><td><a href="fri-mor-lab.html" class="tocviewlink" data-pltdoc="x"><span style="font-weight: bold">Extended Lab</span> Regexps</a></td></tr><tr><td align="right">18&nbsp;</td><td><a href="fri-aft-lecture.html" class="tocviewlink" data-pltdoc="x">Some Language Gems</a></td></tr><tr><td align="right">19&nbsp;</td><td><a href="fri-aft-lab.html" class="tocviewlink" data-pltdoc="x">Closure</a></td></tr></table></div></div><div class="tocviewlist"><table cellspacing="0" cellpadding="0"><tr><td style="width: 1em;"><a href="javascript:void(0);" title="Expand/Collapse" class="tocviewtoggle" onclick="TocviewToggle(this,&quot;tocview_1&quot;);">&#9658;</a></td><td>14&nbsp;</td><td><a href="" class="tocviewselflink" data-pltdoc="x">Typed Languages with Turnstile</a></td></tr></table><div class="tocviewsublistbottom" style="display: none;" id="tocview_1"><table cellspacing="0" cellpadding="0"><tr><td align="right">14.1&nbsp;</td><td><a href="#%28part._.A_.Preview%29" class="tocviewlink" data-pltdoc="x">A Preview</a></td></tr><tr><td align="right">14.2&nbsp;</td><td><a href="#%28part._erasure-rules%29" class="tocviewlink" data-pltdoc="x">Getting Our Theory Closer to Practice</a></td></tr><tr><td align="right">14.3&nbsp;</td><td><a href="#%28part._.Doing_.It_with__.Stile%29" class="tocviewlink" data-pltdoc="x">Doing It with &rsquo;Stile</a></td></tr></table></div></div></div><div class="tocsub"><div class="tocsubtitle">On this page:</div><table class="tocsublist" cellspacing="0"><tr><td><span class="tocsublinknumber">14.1<tt>&nbsp;</tt></span><a href="#%28part._.A_.Preview%29" class="tocsubseclink" data-pltdoc="x">A Preview</a></td></tr><tr><td><span class="tocsublinknumber">14.2<tt>&nbsp;</tt></span><a href="#%28part._erasure-rules%29" class="tocsubseclink" data-pltdoc="x">Getting Our Theory Closer to Practice</a></td></tr><tr><td><span class="tocsublinknumber">14.3<tt>&nbsp;</tt></span><a href="#%28part._.Doing_.It_with__.Stile%29" class="tocsubseclink" data-pltdoc="x">Doing It with &rsquo;Stile</a></td></tr><tr><td><span class="tocsublinknumber">14.3.1<tt>&nbsp;</tt></span><a href="#%28part._.Working_with_.Types%29" class="tocsubseclink" data-pltdoc="x">Working with Types</a></td></tr><tr><td><span class="tocsublinknumber">14.3.2<tt>&nbsp;</tt></span><a href="#%28part._.Typing_.Rules_in_turnstile%29" class="tocsubseclink" data-pltdoc="x">Typing Rules in <span class="stt">turnstile</span></a></td></tr><tr><td><span class="tocsublinknumber">14.3.3<tt>&nbsp;</tt></span><a href="#%28part._.Making_.Your_.Definitions_.Available%29" class="tocsubseclink" data-pltdoc="x">Making Your Definitions Available</a></td></tr></table></div></div><div class="maincolumn"><div class="main"><div class="versionbox"><span class="version">7.4.0.4</span></div><div class="navsettop"><span class="navleft"><div class="nosearchform"></div>&nbsp;&nbsp;</span><span class="navright">&nbsp;&nbsp;<a href="thu-mor-lecture.html" title="backward to &quot;13 Types and Type Checking&quot;" data-pltdoc="x">&larr; prev</a>&nbsp;&nbsp;<a href="index.html" title="up to &quot;Racket School 2019: 

The “How to Design Languages” Track&quot;" data-pltdoc="x">up</a>&nbsp;&nbsp;<a href="thu-aft-lab.html" title="forward to &quot;15 Lab My First Turnstile Language&quot;" data-pltdoc="x">next &rarr;</a></span>&nbsp;</div><h3>14<tt>&nbsp;</tt><a name="(part._thu-aft-lecture)"></a>Typed Languages with Turnstile</h3><div class="SAuthorListBox"><span class="SAuthorList"><p class="author">Jesse Tov</p></span></div><p><table cellspacing="0" cellpadding="0" class="boxed"><tr><td><p><span style="font-weight: bold">Goals</span></p></td></tr><tr><td><p> &#8212;<wbr></wbr> transition from blackboard rules to a real <span class="stt">#lang</span></p></td></tr><tr><td><p> &#8212;<wbr></wbr> see how macro expansion can check types</p></td></tr><tr><td><p> &#8212;<wbr></wbr> use the <span class="stt">turnstile</span> library to implement a typed language</p></td></tr></table></p><h4>14.1<tt>&nbsp;</tt><a name="(part._.A_.Preview)"></a>A Preview</h4><p>This afternoon, we&rsquo;re going to learn how to implement a type
system using macros. The end result will be a <span class="stt">#lang</span>
that checks while it expands and raises a syntax error if it
encounters a type error. Here is an example interaction that
makes the type checker happy:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2B%29%29" class="RktValLink" data-pltdoc="x">+</a></span><span class="hspace">&nbsp;</span><span class="RktVal">3</span><span class="hspace">&nbsp;</span><span class="RktVal">4</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">7</span></p></td></tr><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">&#955;</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktPn">[</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktSym">Bool</span><span class="RktPn">]</span><span class="hspace">&nbsp;</span><span class="RktPn">[</span><span class="RktSym">y</span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym">if</span><span class="hspace">&nbsp;</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktSym">y</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2A%29%29" class="RktValLink" data-pltdoc="x">*</a></span><span class="hspace">&nbsp;</span><span class="RktVal">2</span><span class="hspace">&nbsp;</span><span class="RktSym">y</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr></table></td></tr><tr><td><p><span class="RktRes">#&lt;procedure&gt;</span></p></td></tr><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/let.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._let%29%29" class="RktStxLink" data-pltdoc="x">let</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktPn">[</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktVal">5</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/let.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._let%29%29" class="RktStxLink" data-pltdoc="x">let</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktPn">[</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktVal">8</span><span class="RktPn">]</span><span class="hspace">&nbsp;</span><span class="RktPn">[</span><span class="RktSym">y</span><span class="hspace">&nbsp;</span><span class="RktSym">x</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktSym">y</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr></table></td></tr><tr><td><p><span class="RktRes">5</span></p></td></tr></table></blockquote><p>And here&rsquo;s an interaction demonstrating some type errors:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2B%29%29" class="RktValLink" data-pltdoc="x">+</a></span><span class="hspace">&nbsp;</span><span class="RktVal">3</span><span class="hspace">&nbsp;</span><span class="RktVal">#t</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktErr">eval:4.0: #%app: type mismatch: expected Int, given Bool</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">expression: #t</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">at: #t</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">in: (#%app + 3 #t)</span></p></td></tr><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">&#955;</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktPn">[</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="RktPn">]</span><span class="hspace">&nbsp;</span><span class="RktPn">[</span><span class="RktSym">y</span><span class="hspace">&nbsp;</span><span class="RktSym">Bool</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym">if</span><span class="hspace">&nbsp;</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktSym">y</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2A%29%29" class="RktValLink" data-pltdoc="x">*</a></span><span class="hspace">&nbsp;</span><span class="RktVal">2</span><span class="hspace">&nbsp;</span><span class="RktSym">y</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr></table></td></tr><tr><td><p><span class="RktErr">eval:5.0: if: type mismatch: expected Bool, given Int</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">expression: x</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">at: x</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">in: (if x y (* 2 y))</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">&#955;</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">x</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2B%29%29" class="RktValLink" data-pltdoc="x">+</a></span><span class="hspace">&nbsp;</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktVal">1</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktErr">eval:6.0: &#955;: no expected type, add annotations</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">at: (&#955; (x) (+ x 1))</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">in: (&#955; (x) (+ x 1))</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">parsing context: </span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;</span><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">while parsing has-expected-type</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">term: (&#955; (x) (+ x 1))</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">location: eval:6.0</span></p></td></tr></table></blockquote><p>The last error message suggests that we can fix the function
by adding a type annotation. Annotating either the whole
function or just the parameter allows the function to type:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">ann</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">&#955;</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">x</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2B%29%29" class="RktValLink" data-pltdoc="x">+</a></span><span class="hspace">&nbsp;</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktVal">1</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr></table></td></tr><tr><td><p><span class="RktRes">#&lt;procedure&gt;</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">&#955;</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktPn">[</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="RktPn">]</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2B%29%29" class="RktValLink" data-pltdoc="x">+</a></span><span class="hspace">&nbsp;</span><span class="RktSym">x</span><span class="hspace">&nbsp;</span><span class="RktVal">1</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">#&lt;procedure&gt;</span></p></td></tr></table></blockquote><p>Beyond the rules we saw this morning, the <span class="stt">stlc</span>
language adds a module-level definition form <span class="RktSym">def</span>,
which is visible only to code that follows it. It also
supports testing forms, such as <span class="RktSym">check-type</span> and
<span class="RktSym">typecheck-fail</span>.<span class="refelem"><span class="refcolumn"><span class="refcontent">These forms originate from the
<a href="http://docs.racket-lang.org/turnstile/Rackunit-Style_Test_Forms_for_Turnstile.html" class="RktModLink" data-pltdoc="x"><span class="RktSym">rackunit/turnstile</span></a> library.</span></span></span>
Here&rsquo;s a full-module example using these:</p><blockquote class="Rfilebox"><p class="Rfiletitle"><span class="Rfilename"><span class="stt">"use-stlc.rkt"</span></span></p><blockquote class="Rfilecontent"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="hspace">&nbsp;&nbsp;</span><a href="http://docs.racket-lang.org/guide/Module_Syntax.html#%28part._hash-lang%29" class="RktModLink" data-pltdoc="x"><span class="RktMod">#lang</span></a><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><a href="http://docs.racket-lang.org/reference/reader.html#%28mod-path._s-exp%29" class="RktModLink" data-pltdoc="x"><span class="RktSym">s-exp</span></a><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta">"stlc.rkt"</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta">&#160;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;;</span><span class="hspace">&nbsp;</span><span class="RktCmt">Subtracts</span><span class="hspace">&nbsp;</span><span class="RktCmt">two</span><span class="hspace">&nbsp;</span><span class="RktCmt">integers.</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">def</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._-%29%29" class="RktValLink" data-pltdoc="x"><span class="nobreak">-</span></a></span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">&#955;</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktPn">[</span><span class="RktSym">x</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktPn">]</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym">y</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktPn">]</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2B%29%29" class="RktValLink" data-pltdoc="x">+</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">x</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2A%29%29" class="RktValLink" data-pltdoc="x">*</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">-1</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">y</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta">&#160;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">check-type</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._-%29%29" class="RktValLink" data-pltdoc="x"><span class="nobreak">-</span></a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">:</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;</span><span class="hspace">&nbsp;</span><span class="RktCmt">correct</span><span class="hspace">&nbsp;</span><span class="RktCmt">type</span><span class="hspace">&nbsp;</span><span class="RktCmt">for</span><span class="hspace">&nbsp;</span><span class="RktCmt">-</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">check-type</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._-%29%29" class="RktValLink" data-pltdoc="x"><span class="nobreak">-</span></a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">3</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">8</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">:</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">-5</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;</span><span class="hspace">&nbsp;</span><span class="RktCmt">correct</span><span class="hspace">&nbsp;</span><span class="RktCmt">type</span><span class="hspace">&nbsp;</span><span class="RktCmt">and</span><span class="hspace">&nbsp;</span><span class="RktCmt">result</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta">&#160;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">typecheck-fail</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._-%29%29" class="RktValLink" data-pltdoc="x"><span class="nobreak">-</span></a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">3</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">#t</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;</span><span class="hspace">&nbsp;</span><span class="RktCmt">bad</span><span class="hspace">&nbsp;</span><span class="RktCmt">argument</span><span class="hspace">&nbsp;</span><span class="RktCmt">type</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">typecheck-fail</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._-%29%29" class="RktValLink" data-pltdoc="x"><span class="nobreak">-</span></a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">3</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">8</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">12</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;</span><span class="hspace">&nbsp;</span><span class="RktCmt">too</span><span class="hspace">&nbsp;</span><span class="RktCmt">many</span><span class="hspace">&nbsp;</span><span class="RktCmt">arguments</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">typecheck-fail</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._-%29%29" class="RktValLink" data-pltdoc="x"><span class="nobreak">-</span></a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">3</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;</span><span class="hspace">&nbsp;</span><span class="RktCmt">too</span><span class="hspace">&nbsp;</span><span class="RktCmt">few</span><span class="hspace">&nbsp;</span><span class="RktCmt">arguments</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta">&#160;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta">&#160;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;;</span><span class="hspace">&nbsp;</span><span class="RktCmt">Finds</span><span class="hspace">&nbsp;</span><span class="RktCmt">the</span><span class="hspace">&nbsp;</span><span class="RktCmt">factorial</span><span class="hspace">&nbsp;</span><span class="RktCmt">of</span><span class="hspace">&nbsp;</span><span class="RktCmt">an</span><span class="hspace">&nbsp;</span><span class="RktCmt">integer.</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">def</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">fact</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">rec</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">self</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">&#955;</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">n</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">if</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._~3c~3d%29%29" class="RktValLink" data-pltdoc="x">&lt;=</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">n</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">1</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktVal">1</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2A%29%29" class="RktValLink" data-pltdoc="x">*</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">n</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">self</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._-%29%29" class="RktValLink" data-pltdoc="x"><span class="nobreak">-</span></a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">n</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">1</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta">&#160;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">check-type</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">fact</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">5</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">:</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">120</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta">&#160;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta">&#160;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;;</span><span class="hspace">&nbsp;</span><span class="RktCmt">(iter</span><span class="hspace">&nbsp;</span><span class="RktCmt">n</span><span class="hspace">&nbsp;</span><span class="RktCmt">f</span><span class="hspace">&nbsp;</span><span class="RktCmt">x)</span><span class="hspace">&nbsp;</span><span class="RktCmt">applies</span><span class="hspace">&nbsp;</span><span class="RktCmt">`f`</span><span class="hspace">&nbsp;</span><span class="RktCmt">to</span><span class="hspace">&nbsp;</span><span class="RktCmt">`x`,</span><span class="hspace">&nbsp;</span><span class="RktCmt">`n`</span><span class="hspace">&nbsp;</span><span class="RktCmt">times.</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">def</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">iter</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">rec</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">self</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">&#955;</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">n</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">f</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">x</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">if</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._~3c~3d%29%29" class="RktValLink" data-pltdoc="x">&lt;=</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">n</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">0</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktSym">x</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">self</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._-%29%29" class="RktValLink" data-pltdoc="x"><span class="nobreak">-</span></a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">n</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">1</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">f</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">f</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">x</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta">&#160;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;;</span><span class="hspace">&nbsp;</span><span class="RktCmt">Integer</span><span class="hspace">&nbsp;</span><span class="RktCmt">exponentiation</span><span class="hspace">&nbsp;</span><span class="RktCmt">using</span><span class="hspace">&nbsp;</span><span class="RktCmt">`iter`.</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">def</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._expt%29%29" class="RktValLink" data-pltdoc="x">expt</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">&#955;</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">n</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">m</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">iter</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">m</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">&#955;</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">acc</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2A%29%29" class="RktValLink" data-pltdoc="x">*</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">n</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">acc</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">1</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta">&#160;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">check-type</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._expt%29%29" class="RktValLink" data-pltdoc="x">expt</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">2</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">10</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">:</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">1024</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr></table></blockquote></blockquote><h4>14.2<tt>&nbsp;</tt><a name="(part._erasure-rules)"></a>Getting Our Theory Closer to Practice</h4><p>To express <span class="stt">turnstile</span>-style rewriting using type
inference rules, we&rsquo;re going to define a second language as
that target of our translation. This new language is like
the typed source language <span class="stt">&#955;</span><span style="vertical-align: sub; font-size: 80%">ZB&#8594;</span>, but without types or type
annotations:</p><blockquote class="SCentered"><p><img style="vertical-align: -3.974609375px; margin: -3px -3px -3px -3px;" src="pict_200.svg" type="image/svg+xml"/></p></blockquote><p>The compute-mode and check-mode judgments now have a
fourth position between the input expression and the
type&#8212;<wbr></wbr>a rewritten output expression. Here&rsquo;s the form of the
new inference-mode judgment: <img style="vertical-align: -4.064453125px; margin: -3px -3px -3px -3px;" src="pict_201.svg" type="image/svg+xml"/>. And
here&rsquo;s the form of the new check-mode judgment:
<img style="vertical-align: -4.064453125px; margin: -3px -3px -3px -3px;" src="pict_202.svg" type="image/svg+xml"/></p><p>We need one more change, to type environments. Part of how
<span class="stt">turnstile</span> works involves replacing variable names with
new ones, and to do this, it uses an environment to map each
old name (<img style="vertical-align: -3.603515625px; margin: -3px -3px -3px -3px;" src="pict_203.svg" type="image/svg+xml"/>) to both a new name (<img style="vertical-align: -3.974609375px; margin: -3px -3px -3px -3px;" src="pict_204.svg" type="image/svg+xml"/>) and the
variable&rsquo;s type:</p><blockquote class="SCentered"><p><img style="vertical-align: -4.064453125px; margin: -3px -3px -3px -3px;" src="pict_205.svg" type="image/svg+xml"/></p></blockquote><p>Now we can express the rule for inferring the type of a
variable. It has to be present in the type environment, in
which case we rewrite it to the new name <img style="vertical-align: -3.974609375px; margin: -3px -3px -3px -3px;" src="pict_206.svg" type="image/svg+xml"/> from the
environment and assign the type from the environment:</p><blockquote class="SCentered"><p><img style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" src="pict_207.svg" type="image/svg+xml"/></p></blockquote><p>Some rules, such as the inference-mode rule for function
applications, are the same as before, except for rewriting each
piece before putting them back together:</p><blockquote class="SCentered"><p><img style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" src="pict_208.svg" type="image/svg+xml"/></p></blockquote><p>Rules that bind variables also need to participate in the
renaming. This means generating a fresh name for each bound
variable and including that information in the environment
for expressions in the variable&rsquo;s scope. For example, here&rsquo;s
the check-mode rule for <img style="vertical-align: -3.974609375px; margin: -3px -3px -3px -3px;" src="pict_209.svg" type="image/svg+xml"/>:</p><blockquote class="SCentered"><p><img style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" src="pict_210.svg" type="image/svg+xml"/></p></blockquote><p>Finally, some rules need to eliminate syntactic forms that
the target language lacks. For example, the inference-mode
rules for type annotation expressions and type-annotated &#955;s
both erase the annotations in order to translate to the
untyped target language:</p><p><div class="SIntrapara"><blockquote class="SCentered"><p><img style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" src="pict_211.svg" type="image/svg+xml"/></p></blockquote></div><div class="SIntrapara"><blockquote class="SCentered"><p><img style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" src="pict_212.svg" type="image/svg+xml"/></p></blockquote></div></p><h4>14.3<tt>&nbsp;</tt><a name="(part._.Doing_.It_with__.Stile)"></a>Doing It with &rsquo;Stile</h4><p>Before we see how to write those same rules in <span class="stt">turnstile</span>, let&rsquo;s
start with the basics. The easiest way to make a
<span class="stt">turnstile</span>&#8211;based language is to write it in the <a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28part._turnstilequicklang%29" data-pltdoc="x"><span class="RktModLink"><span class="RktMod">#lang</span></span> <span class="RktModLink"><span class="RktSym">turnstile</span></span>/quicklang</a>
language, which automatically provides
<span class="RktSym"><a href="http://docs.racket-lang.org/reference/module.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._~23~25module-begin%29%29" class="RktStxLink" data-pltdoc="x">#%module-begin</a></span>, <span class="RktSym"><a href="http://docs.racket-lang.org/reference/__top-interaction.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._~23~25top-interaction%29%29" class="RktStxLink" data-pltdoc="x">#%top-interaction</a></span>, and
<span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._require%29%29" class="RktStxLink" data-pltdoc="x">require</a></span> from our language:</p><blockquote class="SCodeFlow"><p><a href="http://docs.racket-lang.org/guide/Module_Syntax.html#%28part._hash-lang%29" class="RktModLink" data-pltdoc="x"><span class="RktMod">#lang</span></a><span class="hspace">&nbsp;</span><font class="badlink"><span class="RktModLink"><span class="RktSym">turnstile/quicklang</span></span></font></p></blockquote><p>(If you want to customize the automatically provided forms
then there are lower-level ways to set it up.)</p><p>Next, before we define the syntax of expressions, we need to
define the syntax of types.</p><h5>14.3.1<tt>&nbsp;</tt><a name="(part._.Working_with_.Types)"></a>Working with Types</h5><p>The <span class="stt">turnstile</span> library represents types as syntax objects. Types have an
external form, which you write directly, and an internal
form suitable for comparison and pattern matching. Each type
written in a user program will be in the external
representation, and it&rsquo;s our responsibility to <span style="font-style: italic">normalize</span> it to its internal form. To help with this,
<span class="stt">turnstile</span> provides a syntax class
<span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._type%29%29" class="RktStxLink" data-pltdoc="x">type</a></span> (at phase 1). The <span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span>
pattern <span class="RktSym">&#964;:type</span></p><ol><li><p>matches only well-formed types,</p></li><li><p>normalizes type <span class="RktSym">&#964;</span> to its internal form, and</p></li><li><p>binds an <span style="font-style: italic">attribute</span> named <span class="RktSym">&#964;.norm</span> to
that internal form for use in subsequent syntax templates.
(Note that pattern variable <span class="RktSym">&#964;</span> gets bound to the
original syntax, <span style="font-style: italic">not</span> the internal form.)</p></li></ol><p>Setting all that up can be pretty complicated, but <span class="stt">turnstile</span>
provides macros that will define the right things for you.
So, let&rsquo;s start by defining our types. As before, we want
two base types for Booleans and integers, and one <span style="font-style: italic">type
constructor</span> for function types:</p><blockquote class="Rfilebox"><p class="Rfiletitle"><span class="Rfilename"><span class="stt">"stlc.rkt"</span></span></p><blockquote class="Rfilecontent"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">19</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-base-types%29%29" class="RktStxLink" data-pltdoc="x">define-base-types</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Bool</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">20</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-type-constructor%29%29" class="RktStxLink" data-pltdoc="x">define-type-constructor</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">#:arity</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._~3e~3d%29%29" class="RktValLink" data-pltdoc="x">&gt;=</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktVal">1</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr></table></blockquote></blockquote><p>The notation <span class="RktPn">#:arity</span><span class="stt"> </span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._~3e~3d%29%29" class="RktValLink" data-pltdoc="x">&gt;=</a></span><span class="stt"> </span><span class="RktVal">1</span> means that <span class="RktSym"><span class="nobreak">-&gt;</span></span>
requires at least one parameter to be well formed.</p><p>Each type definition above binds four names. When you define
a type named <span class="RktSym">&#964;</span>, you get:</p><ul><li><p><span class="RktSym">&#964;</span> &#8211; the external form of the type as it should be
written in both user programs and your type checker;</p></li><li><p><span class="RktSym">&#964;-</span> &#8211; the internal form of the
type, which you won&rsquo;t usually refer to directly;</p></li><li><p><span class="RktSym">&#964;?</span> &#8211; a predicate, defined at phase 1, for
recognizing type <span class="RktSym">&#964;</span>; and</p></li><li><p><span class="RktSym">~&#964;</span> &#8211; a <span style="font-style: italic">pattern expander</span>, also defined
at phase 1, that can be used in <span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span>
patterns to match type <span class="RktSym">&#964;</span>.</p></li></ul><p>Let&rsquo;s see how constructing and matching types works using
the REPL. First we&rsquo;ll require <span class="stt">turnstile</span> and define our types:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._require%29%29" class="RktStxLink" data-pltdoc="x">require</a></span><span class="hspace">&nbsp;</span><span class="RktSym">turnstile/base</span><span class="RktPn">)</span></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-base-types%29%29" class="RktStxLink" data-pltdoc="x">define-base-types</a></span><span class="hspace">&nbsp;</span><span class="RktSym">Bool</span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="RktPn">)</span></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-type-constructor%29%29" class="RktStxLink" data-pltdoc="x">define-type-constructor</a></span><span class="hspace">&nbsp;</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="hspace">&nbsp;</span><span class="RktPn">#:arity</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._~3e~3d%29%29" class="RktValLink" data-pltdoc="x">&gt;=</a></span><span class="hspace">&nbsp;</span><span class="RktVal">1</span><span class="RktPn">)</span></td></tr></table></blockquote><p>Now, what can we do with them? At run time, not much, since
the operations aren&#8217;t available:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktSym">Int</span></td></tr><tr><td><p><span class="RktErr">Int: Cannot use tag at run time</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktRdr">#'</span><span class="RktSym">Int</span></td></tr><tr><td><p><span class="RktRes">#&lt;syntax:eval:5:0 Int&gt;</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">Int?</span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktSym">Int</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktErr">Int?: undefined;</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;</span><span class="RktErr">cannot reference an identifier before its definition</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">module: 'program</span></p></td></tr></table></blockquote><p>The error is because <span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-base-types%29%29" class="RktStxLink" data-pltdoc="x">define-base-types</a></span> defined
<span class="RktSym">Int?</span> in phase 1 (the transformer environment), not
phase 0 (the run-time environment). This is because <span class="stt">turnstile</span>&rsquo;s
types are meant to be used while type checking, which
happens <span style="font-style: italic">at compile time</span>. Further, some <span class="stt">turnstile</span>
operations, such as type normalization (and thus, the
<span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._type%29%29" class="RktStxLink" data-pltdoc="x">type</a></span> syntax class), only work during macro
expansion.</p><p>To make it easy to experiment with macro expansion in the
REPL, we&rsquo;ll make a variant of <span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span> that
pattern matches phase 0 syntax, evaluates the body of the
matching clause in 1, and then shifts the resulting value
back to phase 0. That&rsquo;s tricky, but you don&rsquo;t need to
understand how it works in order to experiment with it.
Here&rsquo;s the definition:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._require%29%29" class="RktStxLink" data-pltdoc="x">require</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._for-syntax%29%29" class="RktStxLink" data-pltdoc="x">for-syntax</a></span><span class="hspace">&nbsp;</span><span class="RktSym">syntax/parse</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/define.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._define-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-syntax</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">syntax-parse0</span><span class="hspace">&nbsp;</span><span class="RktSym">stx</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span><span class="hspace">&nbsp;</span><span class="RktSym">stx</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">#:literals</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._syntax%29%29" class="RktStxLink" data-pltdoc="x">syntax</a></span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29.__%29%29" class="RktStxLink" data-pltdoc="x">_</a></span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktSym">e0</span><span class="hspace">&nbsp;</span><span class="RktPn">[</span><span class="RktSym">p</span><span class="hspace">&nbsp;</span><span class="RktSym">e1</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="hspace">&nbsp;</span><span class="RktSym">er</span><span class="RktPn">]</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/syntax/stxparse-patterns.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._......%2B%29%29" class="RktStxLink" data-pltdoc="x">...+</a></span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktRdr">#'</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/let.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._let-syntax%29%29" class="RktStxLink" data-pltdoc="x">let-syntax</a></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktPn">[</span><span class="RktSym">m</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">&#955;</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">stx</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span><span class="hspace">&nbsp;</span><span class="RktSym">stx</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29.__%29%29" class="RktStxLink" data-pltdoc="x">_</a></span><span class="hspace">&nbsp;</span><span class="RktSym">p</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span><span class="RktSym">e1</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="hspace">&nbsp;</span><span class="RktRdr">#`</span><span class="RktVal">'</span><span class="RktVal">#,</span><span class="RktVal">er</span><span class="RktPn">]</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym">m</span><span class="hspace">&nbsp;</span><span class="RktSym">e0</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr></table></td></tr></table></blockquote><p>To see how to use it, let&rsquo;s start with something simple:
Match the syntax of a type and format it as a string
(using <span class="stt">turnstile</span>&rsquo;s phase 1 function <span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28def._%28%28lib._turnstile%2Fmain..rkt%29._type-~3estr%29%29" class="RktValLink" data-pltdoc="x">type-&gt;str</a></span>):</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">syntax-parse0</span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktSym">Int</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktCmt">;</span><span class="RktCmt">&nbsp;</span><span class="RktCmt">&#8595; note: this isn't quite right</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym">&#964;:type</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28def._%28%28lib._turnstile%2Fmain..rkt%29._type-~3estr%29%29" class="RktValLink" data-pltdoc="x">type-&gt;str</a></span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktSym">&#964;</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr></table></td></tr><tr><td><p><span class="RktRes">"Int"</span></p></td></tr></table></blockquote><p>That might seem like it&rsquo;s not doing anything, but let&rsquo;s try
formatting a couple ill-formed types:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">syntax-parse0</span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktSym">Intt</span><span class="hspace">&nbsp;</span><span class="RktCmt">;</span><span class="RktCmt">&nbsp;</span><span class="RktCmt">&#8595; still not right&#8230;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym">&#964;:type</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28def._%28%28lib._turnstile%2Fmain..rkt%29._type-~3estr%29%29" class="RktValLink" data-pltdoc="x">type-&gt;str</a></span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktSym">&#964;</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr></table></td></tr><tr><td><p><span class="RktErr">eval:8.0: m: eval (10:0) not a well-formed type: Intt</span></p></td></tr><tr><td><blockquote class="SubFlow"></blockquote></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">at: Intt</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">in: (m Intt)</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">parsing context: </span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;</span><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">while parsing type</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">term: Intt</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">location: eval:10.0</span></p></td></tr><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">syntax-parse0</span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktPn">)</span><span class="hspace">&nbsp;</span><span class="RktCmt">;</span><span class="RktCmt">&nbsp;</span><span class="RktCmt">&#8595; also not right&#8230;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym">&#964;:type</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28def._%28%28lib._turnstile%2Fmain..rkt%29._type-~3estr%29%29" class="RktValLink" data-pltdoc="x">type-&gt;str</a></span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktSym">&#964;</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr></table></td></tr><tr><td><p><span class="RktErr">eval:8.0: m: eval (11:0) not a well-formed type: (-&gt;)</span></p></td></tr><tr><td><p><span class="RktErr">eval:11:0: -&gt;: Improper usage of type constructor -&gt;: (-&gt;),</span></p></td></tr><tr><td><p><span class="RktErr">expected &gt;= 1 arguments</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">in: (-&gt;)</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">at: (-&gt;)</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">in: (m (-&gt;))</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">parsing context: </span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;</span><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">while parsing type</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">term: (-&gt;)</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">location: eval:11.0</span></p></td></tr></table></blockquote><p>In order to write a type checker, we also need to be able to
recognize and decompose types, which is where <span style="font-style: italic">pattern
expanders</span>, like <span class="RktSym">~Int</span> and <span class="RktSym">~-&gt;</span> come in. To
match type <span class="RktSym">Int</span> with <span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span>, use the
pattern <span class="RktSym">~Int</span>; to match an one-parameter arrow type
and bind the domain and codomain to pattern variables, you
want the pattern <span class="RktPn">(</span><span class="RktSym">~-&gt;</span><span class="stt"> </span><span class="RktSym">dom</span><span class="stt"> </span><span class="RktSym">cod</span><span class="RktPn">)</span>. Let&rsquo;s try matching
an arrow type and returning codomain as a string:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">syntax-parse0</span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="hspace">&nbsp;</span><span class="RktSym">Bool</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktCmt">;</span><span class="RktCmt">&nbsp;</span><span class="RktCmt">&#8595; won't match &#8593;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktPn">(</span><span class="RktSym">~-&gt;</span><span class="hspace">&nbsp;</span><span class="RktSym">dom</span><span class="hspace">&nbsp;</span><span class="RktSym">cod</span><span class="RktPn">)</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28def._%28%28lib._turnstile%2Fmain..rkt%29._type-~3estr%29%29" class="RktValLink" data-pltdoc="x">type-&gt;str</a></span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktSym">cod</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr></table></td></tr><tr><td><p><span class="RktErr">eval:8.0: m: expected the identifier `#%plain-app'</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">at: -&gt;</span></p></td></tr><tr><td><p><span class="RktErr"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktErr">in: (m (-&gt; Int Bool))</span></p></td></tr></table></blockquote><p>What&rsquo;s the problem now? The <span class="stt">turnstile</span> library&rsquo;s pattern expanders work only
on internal types, but types that come directly from the
program&rsquo;s syntax haven&rsquo;t been normalized to internal types
yet. That means we first need to match using the
<span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._type%29%29" class="RktStxLink" data-pltdoc="x">type</a></span> syntax class, and then use the <span class="RktSym">norm</span>
attribute to get the normalized (internal) type and match
<span style="font-style: italic">that</span> using <span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span>&rsquo;s pattern directive
<span class="RktPn">#:with</span>:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">syntax-parse0</span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="hspace">&nbsp;</span><span class="RktSym">Bool</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym">&#964;:type</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktCmt">;</span><span class="RktCmt">&nbsp;</span><span class="RktCmt">&#8595; this is the solution</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktPn">#:with</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">~-&gt;</span><span class="hspace">&nbsp;</span><span class="RktSym">dom</span><span class="hspace">&nbsp;</span><span class="RktSym">cod</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktSym">&#964;.norm</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28def._%28%28lib._turnstile%2Fmain..rkt%29._type-~3estr%29%29" class="RktValLink" data-pltdoc="x">type-&gt;str</a></span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktSym">cod</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr></table></td></tr><tr><td><p><span class="RktRes">"Bool"</span></p></td></tr></table></blockquote><p>It&rsquo;s important know which types have been internalized and
which are still external and unchecked. Since tracking this
can be tricky, I adopt the following convention: external types
are named using Greek letters (<span style="font-style: italic">e.g.,</span> <span class="RktSym">&#964;</span>, <span class="RktSym">&#963;</span>),
whereas internal types are named using Roman letters (<span style="font-style: italic">e.g.,</span>
<span class="RktSym">t</span>, <span class="RktSym">s</span>, <span class="RktSym">dom</span>, etc.).</p><p>As a final example of working with types, let&rsquo;s write a
macro that counts all the arrows in a type:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/define.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._define-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-syntax</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">count-arrows</span><span class="hspace">&nbsp;</span><span class="RktSym">stx</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span><span class="hspace">&nbsp;</span><span class="RktSym">stx</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29.__%29%29" class="RktStxLink" data-pltdoc="x">_</a></span><span class="hspace">&nbsp;</span><span class="RktSym">&#964;:type</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">#:with</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">~-&gt;</span><span class="hspace">&nbsp;</span><span class="RktSym">dom</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="hspace">&nbsp;</span><span class="RktSym">cod</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span><span class="RktRdr">#'</span><span class="RktSym">&#964;.norm</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktRdr">#'</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2B%29%29" class="RktValLink" data-pltdoc="x">+</a></span><span class="hspace">&nbsp;</span><span class="RktVal">1</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">count-arrows</span><span class="hspace">&nbsp;</span><span class="RktSym">dom</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">count-arrows</span><span class="hspace">&nbsp;</span><span class="RktSym">cod</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">]</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29.__%29%29" class="RktStxLink" data-pltdoc="x">_</a></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktRdr">#'</span><span class="RktVal">0</span><span class="RktPn">]</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr></table></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">count-arrows</span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">0</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">count-arrows</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="hspace">&nbsp;</span><span class="RktSym">Bool</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">1</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">count-arrows</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="hspace">&nbsp;</span><span class="RktSym">Bool</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">2</span></p></td></tr><tr><td><span class="stt">&gt; </span><span class="RktPn">(</span><span class="RktSym">count-arrows</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="hspace">&nbsp;</span><span class="RktSym">Int</span><span class="hspace">&nbsp;</span><span class="RktSym">Bool</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><p><span class="RktRes">3</span></p></td></tr></table></blockquote><h5>14.3.2<tt>&nbsp;</tt><a name="(part._.Typing_.Rules_in_turnstile)"></a>Typing Rules in <span class="stt">turnstile</span></h5><p>Now we&rsquo;re finally ready to see how to we can implement the
rules of our type system using <span class="stt">turnstile</span>. We&rsquo;ll use its
<span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-typed-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-typed-syntax</a></span> macro to define each syntactic
form in our typed language as a macro that infers or checks
the type and expands into untyped Racket code. You can read
<span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-typed-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-typed-syntax</a></span> in two complementary ways:</p><ul><li><p>An embedded DSL for expressing bidirectional type
inference with rewriting, as in <a href="#%28part._erasure-rules%29" data-pltdoc="x">Getting Our Theory Closer to Practice</a>,
but in the style of <span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span>.</p></li><li><p>An extension to <span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span> for expressing
bidirectional type inference using syntax that resembles the
traditional notation that we saw on the blackboard.</p></li></ul><p>As a first example, let&rsquo;s see the rule for <span class="RktSym">ann</span>,
written in both forms:</p><blockquote class="SCentered"><p><img style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" src="pict_213.svg" type="image/svg+xml"/></p></blockquote><blockquote class="Rfilebox"><p class="Rfiletitle"><span class="Rfilename"><span class="stt">"stlc.rkt"</span></span></p><blockquote class="Rfilecontent"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">29</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-typed-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-typed-syntax</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">ann</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">30</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;</span><span class="hspace">&nbsp;</span><span class="RktCmt">to</span><span class="hspace">&nbsp;</span><span class="RktCmt">COMPUTE</span><span class="hspace">&nbsp;</span><span class="RktCmt">the</span><span class="hspace">&nbsp;</span><span class="RktCmt">type</span><span class="hspace">&nbsp;</span><span class="RktCmt">of</span><span class="hspace">&nbsp;</span><span class="RktCmt">&#8216;(ann</span><span class="hspace">&nbsp;</span><span class="RktCmt">e</span><span class="hspace">&nbsp;</span><span class="RktCmt">&#964;)&#8217;,</span><span class="hspace">&nbsp;</span><span class="RktCmt">.</span><span class="hspace">&nbsp;</span><span class="RktCmt">.</span><span class="hspace">&nbsp;</span><span class="RktCmt">.</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">31</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29.__%29%29" class="RktStxLink" data-pltdoc="x">_</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e:expr</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">&#964;:type</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">32</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">33</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;</span><span class="hspace">&nbsp;</span><span class="RktCmt">CHECK</span><span class="hspace">&nbsp;</span><span class="RktCmt">that</span><span class="hspace">&nbsp;</span><span class="RktCmt">&#8216;e&#8217;</span><span class="hspace">&nbsp;</span><span class="RktCmt">has</span><span class="hspace">&nbsp;</span><span class="RktCmt">type</span><span class="hspace">&nbsp;</span><span class="RktCmt">&#8216;&#964;&#8217;</span><span class="hspace">&nbsp;</span><span class="RktCmt">(normalized),</span><span class="hspace">&nbsp;</span><span class="RktCmt">calling</span><span class="hspace">&nbsp;</span><span class="RktCmt">its</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">34</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;</span><span class="hspace">&nbsp;</span><span class="RktCmt">expansion</span><span class="hspace">&nbsp;</span><span class="RktCmt">&#8216;e-&#8217;,</span><span class="hspace">&nbsp;</span><span class="RktCmt">.</span><span class="hspace">&nbsp;</span><span class="RktCmt">.</span><span class="hspace">&nbsp;</span><span class="RktCmt">.</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">35</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~8a~a2%29%29" class="RktStxLink" data-pltdoc="x">&#8866;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e-</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~87~90%29%29" class="RktStxLink" data-pltdoc="x">&#8656;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">&#964;.norm</span><span class="RktPn">]</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">36</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><span class="nobreak">----</span></span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">37</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktCmt">;</span><span class="hspace">&nbsp;</span><span class="RktCmt">then</span><span class="hspace">&nbsp;</span><span class="RktCmt">expand</span><span class="hspace">&nbsp;</span><span class="RktCmt">to</span><span class="hspace">&nbsp;</span><span class="RktCmt">&#8216;e-&#8217;</span><span class="hspace">&nbsp;</span><span class="RktCmt">and</span><span class="hspace">&nbsp;</span><span class="RktCmt">COMPUTE</span><span class="hspace">&nbsp;</span><span class="RktCmt">type</span><span class="hspace">&nbsp;</span><span class="RktCmt">&#8216;&#964;&#8217;</span><span class="hspace">&nbsp;</span><span class="RktCmt">(normalized).</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">38</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~8a~a2%29%29" class="RktStxLink" data-pltdoc="x">&#8866;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e-</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~87~92%29%29" class="RktStxLink" data-pltdoc="x">&#8658;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">&#964;.norm</span><span class="RktPn">]</span><span class="RktPn">]</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr></table></blockquote></blockquote><p>There are three main differences you should notice:</p><ol><li><p>The type environment <img style="vertical-align: -3.603515625px; margin: -3px -3px -3px -3px;" src="pict_214.svg" type="image/svg+xml"/> is implicit in <span class="stt">turnstile</span>
(though there&rsquo;s a way to add things to it for a premiss).</p></li><li><p><div class="SIntrapara">If a typed syntactic form requires multiple
type inference rules on paper, then each of those rules
becomes a case, &#224; la <span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span>, in the same
macro definition using <span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-typed-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-typed-syntax</a></span>.
This means that:
</div><div class="SIntrapara"><ul><li><p>If there are both compute-mode and check-mode rules
for the same syntactic form, all of them need to be cases in
the single macro that implements that form.</p></li><li><p>As with <span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span>, the cases are
considered in the order they are written.</p></li><li><p>When in check mode, compute-mode rules are also
considered to match, which means they should come after the
check-mode rules.</p></li><li><p>Racket wraps each literal <span class="RktSym">L</span> as
<span class="RktPn">(</span><span class="RktSym">#%datum</span><span class="stt"> </span><span class="RktPn">. </span><span class="RktSym">L</span><span class="RktPn">)</span>, so all literals (integers and
Booleans, in our case) need to be handled by an
implementation of <span class="RktSym">#%datum</span>.</p></li></ul></div></p></li><li><p>The two notations differ in where the
expression-to-be-typed appears. In the traditional notation,
<img style="vertical-align: -3.974609375px; margin: -3px -3px -3px -3px;" src="pict_215.svg" type="image/svg+xml"/> appears as part of the judgment in the
conclusion, beneath the horizontal line. By contrast, inputs
to a <span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-typed-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-typed-syntax</a></span> case appear as patterns at
the top of each case, leaving only outputs at the bottom. So
the expression-to-be-typed is a <span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Parsing_Syntax.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._syntax-parse%29%29" class="RktStxLink" data-pltdoc="x">syntax-parse</a></span>
pattern at the top of each case, and for check-mode cases,
the expected type also appears as a pattern at the top.</p></li></ol><p>Given all that, here&rsquo;s the basic shape to define a form with
one check-mode case followed by one infer-mode case:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-typed-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-typed-syntax</a></span><span class="hspace">&nbsp;</span><span class="RktSym">&#10216;form-name&#10217;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym">&#10216;typed-form-pattern&#10217;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~87~90%29%29" class="RktStxLink" data-pltdoc="x">&#8656;</a></span><span class="hspace">&nbsp;</span><span class="RktSym">&#10216;expected-type-pattern&#10217;</span><span class="hspace">&nbsp;&nbsp;</span><span class="RktCmt">;</span><span class="RktCmt">&nbsp;</span><span class="RktCmt">&#8592; expected type means check mode</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktSym">&#10216;premiss&#10217;</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktSym"><span class="nobreak">----</span></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~8a~a2%29%29" class="RktStxLink" data-pltdoc="x">&#8866;</a></span><span class="hspace">&nbsp;</span><span class="RktSym">&#10216;untyped-form-template&#10217;</span><span class="RktPn">]</span><span class="RktPn">]</span></td></tr><tr><td><span class="hspace">&nbsp;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym">&#10216;typed-form-pattern&#10217;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktSym">&#10216;premiss&#10217;</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktSym"><span class="nobreak">----</span></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktCmt">;</span><span class="RktCmt">&nbsp;</span><span class="RktCmt">computed type &#8595; means compute mode</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~8a~a2%29%29" class="RktStxLink" data-pltdoc="x">&#8866;</a></span><span class="hspace">&nbsp;</span><span class="RktSym">&#10216;untyped-form-template&#10217;</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~87~92%29%29" class="RktStxLink" data-pltdoc="x">&#8658;</a></span><span class="hspace">&nbsp;</span><span class="RktSym">&#10216;computed-type-template&#10217;</span><span class="RktPn">]</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr></table></blockquote><blockquote class="Figure"><blockquote class="Leftfigure"><blockquote class="FigureInside"><p>In order to type a <span class="stt">turnstile</span> rule (using your keyboard), you
need to be able to enter the special characters that <span class="stt">turnstile</span>
uses. DrRacket has a mechanism for entering special
characters by typing a particular sequence starting with
<span class="stt">\</span> and ending with Control-<span class="stt">\</span>. Here are the
sequences you&rsquo;ll need:</p><blockquote class="SCentered"><table cellspacing="0" cellpadding="0"><tr><td align="left"><p><span class="stt">&#8811;</span></p></td><td align="left"><p><span class="hspace">&nbsp;&nbsp;&nbsp;</span></p></td><td align="left"><p><span class="stt">\gg</span></p></td></tr><tr><td align="left"><p><span class="stt">&#8656;</span></p></td><td align="left"><p><span class="hspace">&nbsp;&nbsp;&nbsp;</span></p></td><td align="left"><p><span class="stt">\Leftarrow</span></p></td></tr><tr><td align="left"><p><span class="stt">&#8658;</span></p></td><td align="left"><p><span class="hspace">&nbsp;&nbsp;&nbsp;</span></p></td><td align="left"><p><span class="stt">\Rightarrow</span></p></td></tr><tr><td align="left"><p><span class="stt">&#8827;</span></p></td><td align="left"><p><span class="hspace">&nbsp;&nbsp;&nbsp;</span></p></td><td align="left"><p><span class="stt">\succ</span></p></td></tr><tr><td align="left"><p><span class="stt">&#8866;</span></p></td><td align="left"><p><span class="hspace">&nbsp;&nbsp;&nbsp;</span></p></td><td align="left"><p><span class="stt">\vdash</span></p></td></tr></table></blockquote><p>(Alternatively, see <a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28mod-path._turnstile%2Fno-unicode%29" class="RktModLink" data-pltdoc="x"><span class="RktSym">turnstile/no-unicode</span></a>.)</p></blockquote></blockquote><p class="Centertext"><span class="Legend"><span class="FigureTarget"><a name="(counter._(figure._lecture-unicode-help))" x-target-lift="Figure"></a>Figure&nbsp;5: </span>Unicode Text Entry</span></p></blockquote><p>As a final, larger example, let&rsquo;s consider how to type
<span class="RktSym">&#955;</span>. For
reference, here are the relevant blackboard rules:</p><p><div class="SIntrapara"><blockquote class="SCentered"><p><img style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" src="pict_216.svg" type="image/svg+xml"/></p></blockquote></div><div class="SIntrapara"><blockquote class="SCentered"><p><img style="vertical-align: -0.0px; margin: -3px -3px -3px -3px;" src="pict_217.svg" type="image/svg+xml"/></p></blockquote></div></p><p>And here&#8217;s the implementation using <span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-typed-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-typed-syntax</a></span>:</p><blockquote class="Rfilebox"><p class="Rfiletitle"><span class="Rfilename"><span class="stt">"stlc.rkt"</span></span></p><blockquote class="Rfilecontent"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">46</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-typed-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-typed-syntax</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">&#955;</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">47</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29.__%29%29" class="RktStxLink" data-pltdoc="x">_</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">x:id</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e:expr</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">48</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~87~90%29%29" class="RktStxLink" data-pltdoc="x">&#8656;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">~-&gt;</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">s</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">t</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">49</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">50</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">#:fail-when</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stxcmp.html#%28def._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._check-duplicate-identifier%29%29" class="RktValLink" data-pltdoc="x">check-duplicate-identifier</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/syntax/syntax-helpers.html#%28def._%28%28lib._syntax%2Fstx..rkt%29._stx-~3elist%29%29" class="RktValLink" data-pltdoc="x">stx-&gt;list</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._syntax%29%29" class="RktStxLink" data-pltdoc="x">#'</a></span><span class="RktPn">(</span><span class="RktSym">x</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">51</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktVal">"repeated</span><span class="hspace">&nbsp;</span><span class="RktVal">formal</span><span class="hspace">&nbsp;</span><span class="RktVal">parameter</span><span class="hspace">&nbsp;</span><span class="RktVal">name"</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">52</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">#:fail-unless</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._~3d%29%29" class="RktValLink" data-pltdoc="x">=</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28def._%28%28lib._turnstile%2Fmain..rkt%29._stx-length%29%29" class="RktValLink" data-pltdoc="x">stx-length</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._syntax%29%29" class="RktStxLink" data-pltdoc="x">#'</a></span><span class="RktPn">(</span><span class="RktSym">x</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28def._%28%28lib._turnstile%2Fmain..rkt%29._stx-length%29%29" class="RktValLink" data-pltdoc="x">stx-length</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._syntax%29%29" class="RktStxLink" data-pltdoc="x">#'</a></span><span class="RktPn">(</span><span class="RktSym">s</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">53</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktVal">"wrong</span><span class="hspace">&nbsp;</span><span class="RktVal">number</span><span class="hspace">&nbsp;</span><span class="RktVal">of</span><span class="hspace">&nbsp;</span><span class="RktVal">formal</span><span class="hspace">&nbsp;</span><span class="RktVal">parameters</span><span class="hspace">&nbsp;</span><span class="RktVal">for</span><span class="hspace">&nbsp;</span><span class="RktVal">expected</span><span class="hspace">&nbsp;</span><span class="RktVal">arrow</span><span class="hspace">&nbsp;</span><span class="RktVal">type"</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">54</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktPn">[</span><span class="RktSym">x</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">x-</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">:</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">s</span><span class="RktPn">]</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~8a~a2%29%29" class="RktStxLink" data-pltdoc="x">&#8866;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e-</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~87~90%29%29" class="RktStxLink" data-pltdoc="x">&#8656;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">t</span><span class="RktPn">]</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">55</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><span class="nobreak">----</span></span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">56</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~8a~a2%29%29" class="RktStxLink" data-pltdoc="x">&#8866;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/lambda.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._~ce~bb%29%29" class="RktStxLink" data-pltdoc="x">&#955;-</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">x-</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e-</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">]</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">57</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">58</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29.__%29%29" class="RktStxLink" data-pltdoc="x">_</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktPn">[</span><span class="RktSym">x:id</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">&#963;:type</span><span class="RktPn">]</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e:expr</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">59</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">60</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">#:fail-when</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stxcmp.html#%28def._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._check-duplicate-identifier%29%29" class="RktValLink" data-pltdoc="x">check-duplicate-identifier</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/syntax/syntax-helpers.html#%28def._%28%28lib._syntax%2Fstx..rkt%29._stx-~3elist%29%29" class="RktValLink" data-pltdoc="x">stx-&gt;list</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._syntax%29%29" class="RktStxLink" data-pltdoc="x">#'</a></span><span class="RktPn">(</span><span class="RktSym">x</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">61</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktVal">"repeated</span><span class="hspace">&nbsp;</span><span class="RktVal">formal</span><span class="hspace">&nbsp;</span><span class="RktVal">parameter</span><span class="hspace">&nbsp;</span><span class="RktVal">name"</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">62</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">#:with</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">s</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._syntax%29%29" class="RktStxLink" data-pltdoc="x">#'</a></span><span class="RktPn">(</span><span class="RktSym">&#963;.norm</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">63</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktPn">[</span><span class="RktSym">x</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">x-</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">:</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">s</span><span class="RktPn">]</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~8a~a2%29%29" class="RktStxLink" data-pltdoc="x">&#8866;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e-</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~87~92%29%29" class="RktStxLink" data-pltdoc="x">&#8658;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">t</span><span class="RktPn">]</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">64</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><span class="nobreak">----</span></span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">65</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~8a~a2%29%29" class="RktStxLink" data-pltdoc="x">&#8866;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/lambda.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._~ce~bb%29%29" class="RktStxLink" data-pltdoc="x">&#955;-</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym">x-</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">e-</span><span class="RktPn">)</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~87~92%29%29" class="RktStxLink" data-pltdoc="x">&#8658;</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">s</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">t</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">]</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr></table></blockquote></blockquote><p>Everything else you need to know about <span class="stt">turnstile</span> for the exercises
is used in the above macro, so let&rsquo;s consider it line by line:</p><ul><li><p>The form we&rsquo;re defining, <span class="RktSym">&#955;</span>, is on line 1. Note that
when expanding to Racket&rsquo;s untyped <span class="RktSym">&#955;</span>, we&rsquo;ll have to be
careful not to make compilation go into a infinite loop.</p></li><li><p>Line 2 gives the pattern for the first case, which matches an
unannotated <span class="RktSym">&#955;</span> because the formal parameters are
decorated with the syntax class <span class="RktSym"><a href="http://docs.racket-lang.org/syntax/Library_Syntax_Classes_and_Literal_Sets.html#%28form._%28%28lib._syntax%2Fparse..rkt%29._id%29%29" class="RktStxLink" data-pltdoc="x">id</a></span>.</p></li><li><p>Line 3 is a pattern for the expected type, which
matches only in check mode, and only when the expected type
is an arrow type. It binds pattern variable <span class="RktSym">s</span> to the expected
argument types, and pattern variable <span class="RktSym">t</span> to the
expected result type.</p></li><li><p>Lines 5 and 6 enforce the side condition that the
formal parameter names are distinct. The generated error
message will include the repeated name, because if
<span class="RktSym"><a href="http://docs.racket-lang.org/reference/stxcmp.html#%28def._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._check-duplicate-identifier%29%29" class="RktValLink" data-pltdoc="x">check-duplicate-identifier</a></span> finds a duplicate then
returns the duplicate, and when <span class="RktPn">#:fail-when</span>&rsquo;s
condition evaluates to a syntax object then it includes that
syntax object in its error message.</p></li><li><p>On lines 7 and 8 we enforce a second side condition, that
the number of formal parameters on the <span class="RktSym">&#955;</span> equals the
number of arguments of the expected type. Without this
check, line 9 will still fail when they don&rsquo;t match, but
with an very unfriendly message.</p></li><li><p>Line 9 expands the body of the <span class="RktSym">&#955;</span>,
expression <img style="vertical-align: -3.603515625px; margin: -3px -3px -3px -3px;" src="pict_218.svg" type="image/svg+xml"/>. To the left of the turnstile
(<span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~8a~a2%29%29" class="RktStxLink" data-pltdoc="x">&#8866;</a></span>), the syntax <span class="RktPn">[</span><span class="RktSym">x</span><span class="stt"> </span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span><span class="stt"> </span><span class="RktSym">x-</span><span class="stt"> </span><span class="RktSym">:</span><span class="stt"> </span><span class="RktSym">s</span><span class="RktPn">]</span><span class="stt"> </span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span> extends
the type environment for checking <img style="vertical-align: -3.603515625px; margin: -3px -3px -3px -3px;" src="pict_219.svg" type="image/svg+xml"/> to map each
formal parameter <span class="RktSym">x</span> to a fresh name <span class="RktSym">x-</span> and
its type <span class="RktSym">s</span>. (We don&rsquo;t need to generate the
<span class="RktSym">x-</span>s, because that&rsquo;s <span class="stt">turnstile</span>&rsquo;s job&#8212;<wbr></wbr><span class="RktSym">x-</span> in
that context is a pattern variable that <span class="stt">turnstile</span> binds to a
fresh name.)</p><p>To the right of the turnstile, the syntax <span class="RktSym">e</span><span class="stt"> </span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~89~ab%29%29" class="RktStxLink" data-pltdoc="x">&#8811;</a></span><span class="stt"> </span><span class="RktSym">e-</span><span class="stt"> </span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~87~90%29%29" class="RktStxLink" data-pltdoc="x">&#8656;</a></span><span class="stt"> </span><span class="RktSym">t</span>
expands <span class="RktSym">e</span> in check mode using <span class="RktSym">t</span>, binding the
result to pattern variable <img style="vertical-align: -3.974609375px; margin: -3px -3px -3px -3px;" src="pict_220.svg" type="image/svg+xml"/>.</p></li><li><p>The conclusion of the first case, on line 11, gives the expanded result,
which uses the renamed <span class="RktSym">x-</span>s as the formal parameters and the
rewritten <span class="RktSym">e-</span> as the body. This works because all the occurrences
of <span class="RktSym">x</span><span class="stt"> </span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span> have been replaced by <span class="RktSym">x-</span><span class="stt"> </span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span> in <span class="RktSym">e-</span>.</p><p>There&rsquo;s another subtlety here, which is that it expands to
<span class="RktSym"><a href="http://docs.racket-lang.org/reference/lambda.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._~ce~bb%29%29" class="RktStxLink" data-pltdoc="x">&#955;-</a></span> instead of <span class="RktSym">&#955;</span>. What&rsquo;s <span class="RktSym"><a href="http://docs.racket-lang.org/reference/lambda.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._~ce~bb%29%29" class="RktStxLink" data-pltdoc="x">&#955;-</a></span>?
It&rsquo;s actually Racket&rsquo;s ordinary <span class="RktSym">&#955;</span>, renamed by
<span class="stt">turnstile</span> to append a hyphen. We need something like this
because it wouldn&rsquo;t work to have our typed <span class="RktSym">&#955;</span> expand
into itself. Yesterday we avoided this problem by giving our
definitions a different name and renaming on provide, like
so:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._provide%29%29" class="RktStxLink" data-pltdoc="x">provide</a></span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._rename-out%29%29" class="RktStxLink" data-pltdoc="x">rename-out</a></span><span class="hspace">&nbsp;</span><span class="RktPn">[</span><span class="RktSym">my-&#955;</span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktSym">&#955;</span><span class="RktPn">]</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym">my-app</span><span class="hspace">&nbsp;</span><span class="RktSym">#%app</span><span class="RktPn">]</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-typed-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-typed-syntax</a></span><span class="hspace">&nbsp;</span><span class="RktSym">my-&#955;</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="hspace">&nbsp;</span><span class="RktSym">&#955;</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktCmt">;</span><span class="RktCmt">&nbsp;</span><span class="RktCmt">expands to Racket's &#8216;&#955;&#8217;</span></td></tr><tr><td><span class="hspace">&nbsp;</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._define-typed-syntax%29%29" class="RktStxLink" data-pltdoc="x">define-typed-syntax</a></span><span class="hspace">&nbsp;</span><span class="RktSym">my-app</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="hspace">&nbsp;</span><span class="RktSym">#%app</span><span class="hspace">&nbsp;</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span><span class="RktPn">)</span><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktCmt">;</span><span class="RktCmt">&nbsp;</span><span class="RktCmt">expands to Racket's &#8216;#%app&#8217;</span></td></tr></table></blockquote><p>Turnstile uses a different convention: it
re-<span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._provide%29%29" class="RktStxLink" data-pltdoc="x">provide</a></span>s every Racket binding suffixed by <span class="stt">-</span>, so you can avoid <span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._rename-out%29%29" class="RktStxLink" data-pltdoc="x">rename-out</a></span> when providing your
language&rsquo;s bindings.</p></li><li><p>The second case, starting on line 13, matches
<span class="RktSym">&#955;</span>s whose parameters have type annotations. Note that the
pattern variables for those types are a Greek letter, <span class="RktSym">&#963;</span>;
because this pattern is matched against source syntax, those types are
haven&rsquo;t been normalized.</p></li><li><p>Because there is no expected type before line 14, that means
this is an infer-mode case.</p></li><li><p>Lines 15 and 16 implement the same side condition
as lines 5 and 6.</p></li><li><p>The <span class="RktPn">#:with</span> pattern directive on line 17
binds <span class="RktSym">s</span><span class="stt"> </span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span> to the internal forms of the external types
<span class="RktSym">&#963;</span><span class="stt"> </span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29._......%29%29" class="RktStxLink" data-pltdoc="x">...</a></span>. (This isn&rsquo;t required&#8212;<wbr></wbr>we could just refer to
<span class="RktSym">&#963;.norm</span> on subsequent lines instead of <span class="RktSym">s</span>.)</p></li><li><p>Line 18 differs from line 9 in one character:
where the previous case used <span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~87~90%29%29" class="RktStxLink" data-pltdoc="x">&#8656;</a></span> to check the type of
body, this case uses <span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._~e2~87~92%29%29" class="RktStxLink" data-pltdoc="x">&#8658;</a></span> to compute the type of the
body. This makes sense, because without an expected type
coming into the rule, we can&rsquo;t know what type to expect for
the body.</p></li><li><p>The conclusion of the second case, on line 19, gives
the untyped expansion, just like the conclusion of the first
case. But unlike the first case, it also reports the
computed type. The first case has an expected type come in,
so no type goes out; the second case has no expected type
come in, to the computed type needs to go out.</p></li></ul><h5>14.3.3<tt>&nbsp;</tt><a name="(part._.Making_.Your_.Definitions_.Available)"></a>Making Your Definitions Available</h5><p>To make your language work, you need to <span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._provide%29%29" class="RktStxLink" data-pltdoc="x">provide</a></span> the necessary
bindings: syntax, types, and values. When making a <span class="stt">turnstile</span>-based language,
you provide your typed syntax in the way you&rsquo;ve already seen:</p><blockquote class="Rfilebox"><p class="Rfiletitle"><span class="Rfilename"><span class="stt">"stlc.rkt"</span></span></p><blockquote class="Rfilecontent"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._provide%29%29" class="RktStxLink" data-pltdoc="x">provide</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">ann</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">if</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">def</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">&#955;</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/let.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._let%29%29" class="RktStxLink" data-pltdoc="x">let</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">rec</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">#%app</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">#%datum</span><span class="RktMeta"></span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._rename-out%29%29" class="RktStxLink" data-pltdoc="x">rename-out</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym">&#955;</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">lambda</span><span class="RktPn">]</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr></table></blockquote></blockquote><p>To export types, you should use <span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._type-out%29%29" class="RktStxLink" data-pltdoc="x">type-out</a></span>, like so:</p><blockquote class="Rfilebox"><p class="Rfiletitle"><span class="Rfilename"><span class="stt">"stlc.rkt"</span></span></p><blockquote class="Rfilecontent"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">5</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._provide%29%29" class="RktStxLink" data-pltdoc="x">provide</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._type-out%29%29" class="RktStxLink" data-pltdoc="x">type-out</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Bool</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr></table></blockquote></blockquote><p>To export typed values (usually functions), use
<span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._typed-out%29%29" class="RktStxLink" data-pltdoc="x">typed-out</a></span>:</p><blockquote class="Rfilebox"><p class="Rfiletitle"><span class="Rfilename"><span class="stt">"stlc.rkt"</span></span></p><blockquote class="Rfilecontent"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="Smaller"><span class="Smaller"><span class="hspace">&nbsp;</span><span class="stt">6</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._provide%29%29" class="RktStxLink" data-pltdoc="x">provide</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/turnstile/The_Turnstile_Reference.html#%28form._%28%28lib._turnstile%2Fmain..rkt%29._typed-out%29%29" class="RktStxLink" data-pltdoc="x">typed-out</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/booleans.html#%28def._%28%28quote._~23~25kernel%29._not%29%29" class="RktValLink" data-pltdoc="x">not</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Bool</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Bool</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="hspace">&nbsp;</span><span class="stt">7</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2B%29%29" class="RktValLink" data-pltdoc="x">+</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="hspace">&nbsp;</span><span class="stt">8</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2A%29%29" class="RktValLink" data-pltdoc="x">*</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="hspace">&nbsp;</span><span class="stt">9</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._%2F%29%29" class="RktValLink" data-pltdoc="x">/</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">10</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/generic-numbers.html#%28def._%28%28quote._~23~25kernel%29._~3c~3d%29%29" class="RktValLink" data-pltdoc="x">&lt;=</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Bool</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">11</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">[</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/number-types.html#%28def._%28%28quote._~23~25kernel%29._zero~3f%29%29" class="RktValLink" data-pltdoc="x">zero?</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><span class="nobreak">-&gt;</span></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Int</span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">Bool</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr></table></blockquote></blockquote><p>And finally, we want to require and re-provide the testing
forms from <a href="http://docs.racket-lang.org/turnstile/Rackunit-Style_Test_Forms_for_Turnstile.html" class="RktModLink" data-pltdoc="x"><span class="RktSym">rackunit/turnstile</span></a> to our new
language:</p><blockquote class="Rfilebox"><p class="Rfiletitle"><span class="Rfilename"><span class="stt">"stlc.rkt"</span></span></p><blockquote class="Rfilecontent"><table cellspacing="0" cellpadding="0" class="RktBlk"><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">13</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._require%29%29" class="RktStxLink" data-pltdoc="x">require</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">rackunit/turnstile</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr><tr><td><span class="Smaller"><span class="Smaller"><span class="stt">14</span><span class="hspace">&nbsp;</span></span></span><span class="hspace">&nbsp;&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._provide%29%29" class="RktStxLink" data-pltdoc="x">provide</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktPn">(</span><span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._all-from-out%29%29" class="RktStxLink" data-pltdoc="x">all-from-out</a></span><span class="RktMeta"></span><span class="hspace">&nbsp;</span><span class="RktMeta"></span><span class="RktSym">rackunit/turnstile</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktMeta"></span></td></tr></table></blockquote></blockquote><p>Of course, we haven&rsquo;t implemented all the syntax in that
first <span class="RktSym"><a href="http://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._provide%29%29" class="RktStxLink" data-pltdoc="x">provide</a></span> yet, since that will be your job.</p><div class="navsetbottom"><span class="navleft"><div class="nosearchform"></div>&nbsp;&nbsp;</span><span class="navright">&nbsp;&nbsp;<a href="thu-mor-lecture.html" title="backward to &quot;13 Types and Type Checking&quot;" data-pltdoc="x">&larr; prev</a>&nbsp;&nbsp;<a href="index.html" title="up to &quot;Racket School 2019: 

The “How to Design Languages” Track&quot;" data-pltdoc="x">up</a>&nbsp;&nbsp;<a href="thu-aft-lab.html" title="forward to &quot;15 Lab My First Turnstile Language&quot;" data-pltdoc="x">next &rarr;</a></span>&nbsp;</div></div></div><div id="contextindicator">&nbsp;</div></body></html>
