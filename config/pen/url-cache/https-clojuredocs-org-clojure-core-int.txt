HTTP/1.1 200 OK
Date: Sat, 24 Sep 2022 06:24:31 GMT
Content-Type: text/html;charset=utf-8
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: ring-session=6prgh473pm0FPF2NkonB62vIpWlmrPDbYi27%2BLcB8GhdzIyLp%2BYRVDSfZOQxEQ4bXpJgsRoDmMj0RSczZGzJLqjuQirb6cqtNq%2F%2BHeRIiBg%3D--0kskD5pEKT9Msfa713tzCbAy0SApIX%2BuaYByfIunYxI%3D;Path=/;HttpOnly
CF-Cache-Status: DYNAMIC
Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=MnD9DCCpOIvruac%2BMUNXhwnp3Hi9lH1MpakL4rqoBUHDKO04R2q1TQaeLMkep06IVrxZIsKh60mN2LVzCOLmhRVTzSWA1HnVcZrTjG%2FFk7v54v6m3eMyIZyrVIJIEBy7M3GkLeo%2FgMhjUKSWAvE%3D"}],"group":"cf-nel","max_age":604800}
NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
Server: cloudflare
CF-RAY: 74f97001b91ca82f-SYD
alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400

<!DOCTYPE html>
<html><head><meta content="width=device-width, maximum-scale=1.0" name="viewport"><meta content="yes" name="apple-mobile-web-app-capable"><meta content="default" name="apple-mobile-web-app-status-bar-style"><meta content="ClojureDocs" name="apple-mobile-web-app-title"><meta content="XjzqkjEPtcgtLjhnqAvtnVSeveEccs-O_unFGGlbk4g" name="google-site-verification"><title>int - clojure.core | ClojureDocs - Community-Powered Clojure Documentation and Examples</title><link href="/opensearch.xml" rel="search" title="ClojureDocs" type="application/opensearchdescription+xml"><link href="/css/font-awesome.min.css?bbfef9385083d307ad2692c0cf99f611" rel="stylesheet"><link href="/css/bootstrap.min.css?385b964b68acb68d23cb43a5218fade9" rel="stylesheet"><link href="/css/app.css?9e9d4de52804fa9bff22ecaa7badf8f9" rel="stylesheet"><script>// <![CDATA[
window.PAGE_DATA="{:examples [{:updated-at 1661231771832, :created-at 1280208450000, :body \"user=> (int 1)\\n1\\n\\nuser=> (int 1M)\\n1\\n\\nuser=> (int 1.2)\\n1\\n\\nuser=> (int \\\\1)\\n49\\n\\nuser=> (int \\\\a)\\n97\\n\\n;; Strings cannot be cast to an int.\\nuser=> (int \\\"1\\\")\\nExecution error (ClassCastException) at user/eval175 (REPL:1).\\njava.lang.String cannot be cast to java.lang.Character\\n\\n;; Use Java interop instead\\n(Integer/parseInt \\\"1\\\")\\n;;=> 1\\n\\n;; Using JavaScript interop for ClojureScript\\n(js/parseInt \\\"5\\\")\\n;;=> 5\\n\\n(js/parseInt \\\"5.22\\\")\\n;;=> 5\", :editors [{:avatar-url \"https://avatars.githubusercontent.com/u/7194?v=2\", :account-source \"github\", :login \"zk\"} {:avatar-url \"https://avatars.githubusercontent.com/u/138993?v=3\", :account-source \"github\", :login \"Dimagog\"} {:avatar-url \"https://avatars.githubusercontent.com/u/138993?v=3\", :account-source \"github\", :login \"Dimagog\"} {:avatar-url \"https://www.gravatar.com/avatar/45b996a79abca465acaf6c0f10b0437?r=PG&default=identicon\", :account-source \"clojuredocs\", :login \"Ljos\"} {:login \"wdhowe\", :account-source \"github\", :avatar-url \"https://avatars0.githubusercontent.com/u/4631165?v=4\"} {:avatar-url \"https://avatars.githubusercontent.com/u/747125?v=4\", :account-source \"github\", :login \"metehan\"} {:login \"mathisto\", :account-source \"github\", :avatar-url \"https://avatars.githubusercontent.com/u/8226466?v=4\"}], :author {:avatar-url \"https://www.gravatar.com/avatar/1703a0c3ed358b787f4b1bf3b2799472?r=PG&default=identicon\", :account-source \"clojuredocs\", :login \"Jacolyte\"}, :var {:ns \"clojure.core\", :name \"int\", :library-url \"https://github.com/clojure/clojure\"}, :_id \"542692cec026201cdc326d78\", :user nil}], :var {:added \"1.0\", :ns \"clojure.core\", :name \"int\", :file \"clojure/core.clj\", :type \"function\", :keywords \"int int\", :column 1, :line 882, :arglists (\"x\"), :doc \"Coerce to int\", :library-url \"https://github.com/clojure/clojure\", :href \"/clojure.core/int\"}, :notes [{:author {:login \"jw-00000\", :account-source \"github\", :avatar-url \"https://avatars1.githubusercontent.com/u/2936?v=4\"}, :updated-at 1529869571125, :created-at 1529869571125, :body \"To convert a string containing a number to an integer, use Java's Integer/parseInt, e.g. `(Integer/parseInt \\\"-10\\\")`.\", :var {:library-url \"https://github.com/clojure/clojure\", :name \"int\", :ns \"clojure.core\"}, :_id \"5b2ff503e4b00ac801ed9e1e\", :can-delete? false, :can-edit? false}], :see-alsos [{:created-at 1333595304000, :author {:login \"Ljos\", :account-source \"clojuredocs\", :avatar-url \"https://www.gravatar.com/avatar/45b996a79abca465acaf6c0f10b0437?r=PG&default=identicon\"}, :to-var {:ns \"clojure.core\", :name \"char\", :library-url \"https://github.com/clojure/clojure\"}, :from-var {:ns \"clojure.core\", :name \"int\", :library-url \"https://github.com/clojure/clojure\"}, :_id \"542692ebf6e94c6970521d49\", :doc \"Coerce to char\", :can-delete? false, :user nil} {:from-var {:library-url \"https://github.com/clojure/clojure\", :name \"int\", :ns \"clojure.core\"}, :to-var {:library-url \"https://github.com/clojure/clojure\", :name \"long\", :ns \"clojure.core\"}, :author {:avatar-url \"https://avatars.githubusercontent.com/u/528360?v=3\", :account-source \"github\", :login \"BertrandDechoux\"}, :created-at 1342917185000, :_id \"542692ebf6e94c6970521d4a\", :doc \"Coerce to long\", :can-delete? false, :user nil} {:from-var {:library-url \"https://github.com/clojure/clojure\", :name \"int\", :ns \"clojure.core\"}, :to-var {:library-url \"https://github.com/clojure/clojure\", :name \"integer?\", :ns \"clojure.core\"}, :author {:avatar-url \"https://avatars.githubusercontent.com/u/528360?v=3\", :account-source \"github\", :login \"BertrandDechoux\"}, :created-at 1342917243000, :_id \"542692ebf6e94c6970521d4b\", :doc \"Returns true if n is an integer\", :can-delete? false, :user nil} {:from-var {:library-url \"https://github.com/clojure/clojure\", :name \"int\", :ns \"clojure.core\"}, :to-var {:library-url \"https://github.com/clojure/clojure\", :name \"ints\", :ns \"clojure.core\"}, :author {:avatar-url \"https://avatars.githubusercontent.com/u/528360?v=3\", :account-source \"github\", :login \"BertrandDechoux\"}, :created-at 1342917294000, :_id \"542692ebf6e94c6970521d4c\", :doc \"Casts to int[]\", :can-delete? false, :user nil} {:from-var {:library-url \"https://github.com/clojure/clojure\", :name \"int\", :ns \"clojure.core\"}, :to-var {:library-url \"https://github.com/clojure/clojure\", :name \"int-array\", :ns \"clojure.core\"}, :author {:avatar-url \"https://avatars.githubusercontent.com/u/528360?v=3\", :account-source \"github\", :login \"BertrandDechoux\"}, :created-at 1342917326000, :_id \"542692ebf6e94c6970521d4d\", :doc \"Creates an array of ints\", :can-delete? false, :user nil} {:from-var {:library-url \"https://github.com/clojure/clojure\", :name \"int\", :ns \"clojure.core\"}, :to-var {:library-url \"https://github.com/clojure/clojure\", :name \"short\", :ns \"clojure.core\"}, :author {:avatar-url \"https://avatars.githubusercontent.com/u/528360?v=3\", :account-source \"github\", :login \"BertrandDechoux\"}, :created-at 1342917681000, :_id \"542692ebf6e94c6970521d4e\", :doc \"Coerce to short\", :can-delete? false, :user nil}], :user nil}";
//]]></script></head><body class="var-page"><div class="mobile-nav-menu"><section><h4><i class="fa fa-rocket"></i>ClojureDocs</h4><ul class="navbar-nav mobile-navbar-nav nav"><li><a href="/core-library">Core Library<span class="clojure-version">(1.10.1)</span></a></li><li><a href="/quickref">Quick Reference</a></li><li><a href="https://github.com/login/oauth/authorize?client_id=d0242c22610efb54ebbe&amp;redirect_uri=http%3A%2F%2Fclojuredocs.org%2Fgh-callback%2Fclojure.core%2Fint&amp;scope="><i class="fa fa-github-square"></i>Log In</a></li></ul></section><section><h4>Nav</h4><ul class="navbar-nav mobile-navbar-nav nav"><li><a data-animate-buffer="70" data-animate-scroll="true" href="#">Top</a></li><li><a data-animate-buffer="70" data-animate-scroll="true" href="#examples">Examples <span class="examples-count"><span class="badge">1</span></span></a></li><li><a data-animate-buffer="70" data-animate-scroll="true" href="#see-also">See Also <span class="badge">6</span></a></li><li><a data-animate-buffer="70" data-animate-scroll="true" href="#notes">Notes <span class="badge">1</span></a></li></ul></section><section><h4>Namespaces</h4><ul class="navbar-nav mobile-navbar-nav nav"><li><a href="/clojure.core">clojure.core</a></li><li><a href="/clojure.core.async">clojure.core.async</a></li><li><a href="/clojure.core.logic">clojure.core.logic</a></li><li><a href="/clojure.core.logic.fd">clojure.core.logic.fd</a></li><li><a href="/clojure.core.logic.pldb">clojure.core.logic.pldb</a></li><li><a href="/clojure.core.protocols">clojure.core.protocols</a></li><li><a href="/clojure.core.reducers">clojure.core.reducers</a></li><li><a href="/clojure.core.server">clojure.core.server</a></li><li><a href="/clojure.data">clojure.data</a></li><li><a href="/clojure.datafy">clojure.datafy</a></li><li><a href="/clojure.edn">clojure.edn</a></li><li><a href="/clojure.inspector">clojure.inspector</a></li><li><a href="/clojure.instant">clojure.instant</a></li><li><a href="/clojure.java.browse">clojure.java.browse</a></li><li><a href="/clojure.java.io">clojure.java.io</a></li><li><a href="/clojure.java.javadoc">clojure.java.javadoc</a></li><li><a href="/clojure.java.shell">clojure.java.shell</a></li><li><a href="/clojure.main">clojure.main</a></li><li><a href="/clojure.pprint">clojure.pprint</a></li><li><a href="/clojure.reflect">clojure.reflect</a></li><li><a href="/clojure.repl">clojure.repl</a></li><li><a href="/clojure.set">clojure.set</a></li><li><a href="/clojure.spec.alpha">clojure.spec.alpha</a></li><li><a href="/clojure.stacktrace">clojure.stacktrace</a></li><li><a href="/clojure.string">clojure.string</a></li><li><a href="/clojure.template">clojure.template</a></li><li><a href="/clojure.test">clojure.test</a></li><li><a href="/clojure.test.junit">clojure.test.junit</a></li><li><a href="/clojure.test.tap">clojure.test.tap</a></li><li><a href="/clojure.walk">clojure.walk</a></li><li><a href="/clojure.xml">clojure.xml</a></li><li><a href="/clojure.zip">clojure.zip</a></li></ul></section></div><div class="mobile-nav-bar"><header class="navbar"><div class="container"><div class="row"><div class="col-md-10 col-md-offset-1"><a class="navbar-brand" href="/"><i class="fa fa-rocket"></i>ClojureDocs</a><button class="btn btn-default navbar-btn pull-right mobile-menu"><i class="fa fa-bars"></i></button><ul class="navbar-nav nav navbar-right desktop-navbar-nav"><li><a href="/core-library">Core Library</a></li><li><a href="/quickref">Quick Ref</a></li><li><a href="https://github.com/login/oauth/authorize?client_id=d0242c22610efb54ebbe&amp;redirect_uri=http%3A%2F%2Fclojuredocs.org%2Fgh-callback%2Fclojure.core%2Fint&amp;scope="><i class="fa fa-github-square"></i>Log In</a></li></ul><div class="nav-search-widget navbar-right navbar-form"><form autocomplete="off" class="search"><input autocomplete="off" class="placeholder form-control" name="query" placeholder="Looking for? (ctrl-s)" type="text"></form></div></div></div><div class="row"><div class="col-md-10 col-md-offset-1"><div class="ac-results-widget"></div></div></div></div></header></div><div class="sticky-wrapper mobile-push-wrapper"><div class="desktop-nav-bar"><header class="navbar"><div class="container"><div class="row"><div class="col-md-10 col-md-offset-1"><a class="navbar-brand" href="/"><i class="fa fa-rocket"></i>ClojureDocs</a><button class="btn btn-default navbar-btn pull-right mobile-menu"><i class="fa fa-bars"></i></button><ul class="navbar-nav nav navbar-right desktop-navbar-nav"><li><a href="/core-library">Core Library</a></li><li><a href="/quickref">Quick Ref</a></li><li><a href="https://github.com/login/oauth/authorize?client_id=d0242c22610efb54ebbe&amp;redirect_uri=http%3A%2F%2Fclojuredocs.org%2Fgh-callback%2Fclojure.core%2Fint&amp;scope="><i class="fa fa-github-square"></i>Log In</a></li></ul><div class="nav-search-widget navbar-right navbar-form"><form autocomplete="off" class="search"><input autocomplete="off" class="placeholder form-control" name="query" placeholder="Looking for? (ctrl-s)" type="text"></form></div></div></div><div class="row"><div class="col-md-10 col-md-offset-1"><div class="ac-results-widget"></div></div></div></div></header></div><div class="container"><div class="row"><div class="col-md-10 col-md-offset-1"><div><div class="row"><div class="col-sm-2 sidenav"><div class="desktop-side-nav" data-sticky-offset="10"><div class="var-page-nav"></div><div class="library-nav"><h5>Namespaces</h5><ul class="ns-tree"><li><span>clojure</span><ul><li><span class="current"><a href="/clojure.core">core</a></span><ul><li><span><a href="/clojure.core.async">async</a></span></li><li><span><a href="/clojure.core.logic">logic</a></span><ul><li><span><a href="/clojure.core.logic.fd">fd</a></span></li><li><span><a href="/clojure.core.logic.pldb">pldb</a></span></li></ul></li><li><span><a href="/clojure.core.protocols">protocols</a></span></li><li><span><a href="/clojure.core.reducers">reducers</a></span></li><li><span><a href="/clojure.core.server">server</a></span></li></ul></li><li><span><a href="/clojure.data">data</a></span></li><li><span><a href="/clojure.datafy">datafy</a></span></li><li><span><a href="/clojure.edn">edn</a></span></li><li><span><a href="/clojure.inspector">inspector</a></span></li><li><span><a href="/clojure.instant">instant</a></span></li><li><span>java</span><ul><li><span><a href="/clojure.java.browse">browse</a></span></li><li><span><a href="/clojure.java.io">io</a></span></li><li><span><a href="/clojure.java.javadoc">javadoc</a></span></li><li><span><a href="/clojure.java.shell">shell</a></span></li></ul></li><li><span><a href="/clojure.main">main</a></span></li><li><span><a href="/clojure.pprint">pprint</a></span></li><li><span><a href="/clojure.reflect">reflect</a></span></li><li><span><a href="/clojure.repl">repl</a></span></li><li><span><a href="/clojure.set">set</a></span></li><li><span>spec</span><ul><li><span><a href="/clojure.spec.alpha">alpha</a></span></li></ul></li><li><span><a href="/clojure.stacktrace">stacktrace</a></span></li><li><span><a href="/clojure.string">string</a></span></li><li><span><a href="/clojure.template">template</a></span></li><li><span><a href="/clojure.test">test</a></span><ul><li><span><a href="/clojure.test.junit">junit</a></span></li><li><span><a href="/clojure.test.tap">tap</a></span></li></ul></li><li><span><a href="/clojure.walk">walk</a></span></li><li><span><a href="/clojure.xml">xml</a></span></li><li><span><a href="/clojure.zip">zip</a></span></li></ul></li></ul></div></div></div><div class="col-sm-10"><div class="row var-header"><div class="col-sm-8"><h1 class="var-name">int</h1></div><div class="col-sm-4"><div class="var-meta"><h4><a href="/clojure.core">clojure.core</a></h4><span>Available since 1.0</span><span class="source-link"> (<a href="https://github.com/clojure/clojure/blob/clojure-1.10.1/src/clj/clojure/core.clj#L882">source</a>) </span></div></div><div class="col-sm-12"><section><ul class="arglists"><li class="arglist">(int x)</li></ul></section></div></div><section><div class="docstring"><pre>Coerce to int</pre><div class="copyright">&copy; Rich Hickey. All rights reserved. <a href="https://www.eclipse.org/legal/epl-v10.html">Eclipse Public License 1.0</a></div></div></section><section><div class="examples-widget" id="examples"></div></section><section><div class="see-alsos-widget" id="see-also"></div></section><section><div class="notes-widget" id="notes"></div></section></div></div></div></div></div></div><div class="sticky-push"></div></div><footer><div class="container"><div class="row"><div class="col-sm-12"><div class="divider">- ❦ -</div></div></div><div class="row"><div class="ctas"><div class="col-sm-6 left">Brought to you by <a href="https://zacharykim.com">Zachary Kim</a>. </div><div class="col-sm-6 right"><iframe allowtransparency="true" class="gh-starred-count" frameborder="0" height="20" scrolling="0" src="/github-btn.html?user=zk&amp;repo=clojuredocs&amp;type=watch&amp;count=true" width="80"></iframe><a class="twitter-share-button" data-text="Community-powered docs and examples for #Clojure" data-url="http://clojuredocs.org" data-via="heyzk" href="https://twitter.com/share">Tweet</a></div></div><script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script></div></div></footer><script src="/cljs/clojuredocs.js?9421f92fbece10f3ababd69dba14cf70"></script><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-17348828-1', 'auto');
  ga('send', 'pageview');</script><script>if(("standalone" in window.navigator) && window.navigator.standalone){
var noddy, remotes = false;

document.addEventListener('click', function(event) {

noddy = event.target;

while(noddy.nodeName !== "A" && noddy.nodeName !== "HTML") {
noddy = noddy.parentNode;
}

if('href' in noddy && noddy.href.indexOf('http') !== -1 && (noddy.href.indexOf(document.location.host) !== -1 || remotes))
{
event.preventDefault();
document.location.href = noddy.href;
}

},false);
}</script></body></html>
