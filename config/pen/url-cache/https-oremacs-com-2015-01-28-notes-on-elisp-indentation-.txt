HTTP/1.1 200 OK
Date: Thu, 08 Feb 2024 08:37:01 GMT
Content-Type: text/html; charset=utf-8
Transfer-Encoding: chunked
Connection: keep-alive
Last-Modified: Fri, 31 Dec 2021 17:37:45 GMT
Vary: Accept-Encoding
Access-Control-Allow-Origin: *
expires: Thu, 08 Feb 2024 08:47:01 GMT
Cache-Control: max-age=600
x-proxy-cache: MISS
X-GitHub-Request-Id: D3E8:55CF:7F062F:B18F88:65C492AD
CF-Cache-Status: DYNAMIC
Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=jmP2jBuVJG0Awqem2m2ypUgX%2FlpZDv8M1FDZegUAdJmaDcBxdk4o%2FpV6owIdRa8kQhZarmU4DtFYyGyFAZkjJt1rUA%2BSTKZgDTWpoUhqgFrTeWBZL2r6V2pMvemYU21Bk5k1aTSWGPHfRA%3D%3D"}],"group":"cf-nel","max_age":604800}
NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
Server: cloudflare
CF-RAY: 85228c58e8dca937-SYD
alt-svc: h3=":443"; ma=86400

<!DOCTYPE html>
<html lang="en-us">

  <head>
  <link href="https://gmpg.org/xfn/11" rel="profile">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="flattr:id" content="9yl9ry">

  <!-- Enable responsiveness on mobile devices-->
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">

  <title>
    
      A few notes on Elisp indentation &middot; (or emacs
    
  </title>

  <link rel="canonical" href="https://oremacs.com/2015/01/28/notes-on-elisp-indentation/" />

  <!-- CSS -->
  <link rel="stylesheet" href="/public/css/poole.css">
  <link rel="stylesheet" href="/public/css/syntax.css">
  <link rel="stylesheet" href="/public/css/lanyon.css">
  <link rel="stylesheet" href="/public/css/octicons.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=PT+Serif:400,400italic,700%7CPT+Sans:400">

  <!-- Scripts -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>

  <!-- Icons -->
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="/public/apple-touch-icon-precomposed.png">
  <link rel="shortcut icon" href="/public/favicon.ico">

  <!-- RSS -->
  <link rel="alternate" type="application/rss+xml" title="RSS" href="/atom.xml">
</head>


  <body class="layout-reverse theme-base-08">

    <!-- Target for toggling the sidebar `.sidebar-checkbox` is for regular
     styles, `#sidebar-checkbox` for behavior. -->
<input type="checkbox" class="sidebar-checkbox" id="sidebar-checkbox">

<!-- Toggleable sidebar -->
<div class="sidebar" id="sidebar">
  <!-- <div class="sidebar-item"> -->
  <!--   <p>unused</p> -->
  <!-- </div> -->

  <nav class="sidebar-nav">
    <a class="sidebar-nav-item" href="/">Home</a>
          <a class="sidebar-nav-item" href="/about/">About</a>
        
          <a class="sidebar-nav-item" href="/archive/">Archive</a>
        
          <a class="sidebar-nav-item" href="/donate/">Donate</a>
        <div id="github" class="sidebar-nav-item">
      <button type="button"
              class="btn btn-info"
              data-toggle="collapse"
              data-target="#github-projects">
        <span class="octicon octicon-mark-github"></span> My Emacs Projects
      </button>
      <div id="github-projects" class="collapse">
        <ul style="margin-bottom:0em;">
          <li>
            <a href="https://github.com/abo-abo/lispy">lispy</a>
            <p>vi-like Paredit</p>
          </li>
          <li>
            <a href="https://github.com/abo-abo/worf">worf</a>
            <p>vi-like bindings for org-mode</p>
          </li>
          <li>
            <a href="https://github.com/abo-abo/ace-window">ace-window</a>
            <p>switch windows with <code>ace-jump-mode</code></p>
          </li>
          <li>
            <a href="https://github.com/abo-abo/ace-link">ace-link</a>
            <p>follow links with <code>ace-jump-mode</code></p>
          </li>
          <li>
            <a href="https://github.com/abo-abo/function-args">function-args</a>
            <p>enhance <code>CEDET</code> for C++</p>
          </li>
          <li>
            <a href="https://github.com/abo-abo/helm-make">helm-make</a>
            <p>select a Makefile target with <code>helm</code></p>
          </li>
          <li>
            <a href="https://github.com/abo-abo/make-it-so">make-it-so</a>
            <p>transform files with Makefile recipes</p>
          </li>
          <li>
            <a href="https://github.com/abo-abo/org-download">org-download</a>
            <p>drag-and-drop images to <code>org-mode</code></p>
          </li>
          <li>
            <a href="https://github.com/abo-abo?tab=repositories">
              <span class="octicon octicon-octoface"></span>
              and more
            </a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <script async defer id="github-bjs" src="https://buttons.github.io/buttons.js"></script>

  <div class="sidebar-item">
    <p>
      <a rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/">
        <img alt="Creative Commons License"
             style="border-width:0;opacity: 0.3;"
             src="https://licensebuttons.net/l/by-sa/4.0/88x31.png"/>
      </a>
    </p>
  </div>
</div>


    <!-- Wrap is the content to shift when toggling the sidebar. We wrap the
         content to avoid any CSS collisions with our real content. -->
    <div class="wrap">
      <div class="masthead">
        <div class="container">
          <h3 class="masthead-title">
            <a href="/" title="Home">(or emacs</a>
            <small>irrelevant)</small>
          </h3>
        </div>
      </div>

      <div class="container content">
        <script>
if (window.location.host.indexOf('oremacs.com') > -1 &&
    window.location.protocol != "https:") {
    window.location.protocol = "https";
}
</script>

<div class="post">
  <h1 class="post-title">A few notes on Elisp indentation</h1>
  <span class="post-date">28 Jan 2015</span>
  <p>I sure do like to keep my Elisp code nice and indented.
But sometimes the indentation engine just won&#39;t listen.</p>

<h2 id="lisp-indent-function">lisp-indent-function</h2>

<p>By default, the indentation is handled as if:</p>
<div class="highlight"><pre><code class="language-elisp" data-lang="elisp"><span></span><span class="p">(</span><span class="k">setq</span> <span class="nv">lisp-indent-function</span> <span class="ss">&#39;lisp-indent-function</span><span class="p">)</span>
</code></pre></div>
<p>At least in one case, it looks horrible:</p>
<div class="highlight"><pre><code class="language-elisp" data-lang="elisp"><span></span><span class="p">(</span><span class="nb">cl-labels</span> <span class="p">((</span><span class="nv">square</span> <span class="p">(</span><span class="nv">x</span><span class="p">)</span>
                    <span class="p">(</span><span class="nf">*</span> <span class="nv">x</span> <span class="nv">x</span><span class="p">)))</span>
  <span class="p">(</span><span class="nf">mapcar</span> <span class="nf">#&#39;</span><span class="nv">square</span> <span class="o">&#39;</span><span class="p">(</span><span class="mi">0</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span><span class="p">)))</span>
<span class="c1">;; =&gt; (0 1 4 9 16 25)</span>
</code></pre></div>
<p>That&#39;s why I have:</p>
<div class="highlight"><pre><code class="language-elisp" data-lang="elisp"><span></span><span class="p">(</span><span class="k">setq</span> <span class="nv">lisp-indent-function</span> <span class="ss">&#39;common-lisp-indent-function</span><span class="p">)</span>
</code></pre></div>
<p>which leads to this indentation:</p>
<div class="highlight"><pre><code class="language-elisp" data-lang="elisp"><span></span><span class="p">(</span><span class="nb">cl-labels</span> <span class="p">((</span><span class="nv">square</span> <span class="p">(</span><span class="nv">x</span><span class="p">)</span>
              <span class="p">(</span><span class="nf">*</span> <span class="nv">x</span> <span class="nv">x</span><span class="p">)))</span>
  <span class="p">(</span><span class="nf">mapcar</span> <span class="nf">#&#39;</span><span class="nv">square</span> <span class="o">&#39;</span><span class="p">(</span><span class="mi">0</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span><span class="p">)))</span>
<span class="c1">;; =&gt; (0 1 4 9 16 25)</span>
</code></pre></div>
<p>Ah, much better. The indentation does change a bit in other places as
a result of this. To my experience, it can be fixed on a case-by-case
basis by declaring the indent level for the offending function or
macro.</p>

<h2 id="declaring-indent-level">Declaring indent level</h2>

<p>Here&#39;s how it looks like</p>
<div class="highlight"><pre><code class="language-elisp" data-lang="elisp"><span></span><span class="p">(</span><span class="nb">defmacro</span> <span class="nv">lispy-save-excursion</span> <span class="p">(</span><span class="kp">&amp;rest</span> <span class="nv">body</span><span class="p">)</span>
  <span class="s">&quot;More intuitive (</span><span class="ss">`save-excursion&#39;</span><span class="s"> BODY).&quot;</span>
  <span class="p">(</span><span class="nb">declare</span> <span class="p">(</span><span class="nv">indent</span> <span class="mi">0</span><span class="p">))</span>
  <span class="o">`</span><span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">out</span> <span class="p">(</span><span class="k">save-excursion</span>
                <span class="o">,@</span><span class="nv">body</span><span class="p">)))</span>
     <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nf">bolp</span><span class="p">)</span>
       <span class="p">(</span><span class="nv">back-to-indentation</span><span class="p">))</span>
     <span class="nv">out</span><span class="p">))</span>
</code></pre></div>
<p>By default, functions behave as if their <code>indent</code> was declared to <code>nil</code>.
Zero here means that we expect zero arguments on the same line, so that this indentation follows:</p>
<div class="highlight"><pre><code class="language-elisp" data-lang="elisp"><span></span><span class="p">(</span><span class="nv">lispy-save-excursion</span>
  <span class="p">(</span><span class="nv">lispy--out-forward</span> <span class="nv">arg</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">backward-list</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">indent-sexp</span><span class="p">))</span>
</code></pre></div>
<p>The indentation above is just like the one that the original <code>save-excursion</code> has.
Note that if I hadn&#39;t declared the indent, it would look like this:</p>
<div class="highlight"><pre><code class="language-elisp" data-lang="elisp"><span></span><span class="p">(</span><span class="nv">lispy-save-excursion</span>
 <span class="p">(</span><span class="nv">lispy--out-forward</span> <span class="nv">arg</span><span class="p">)</span>
 <span class="p">(</span><span class="nv">backward-list</span><span class="p">)</span>
 <span class="p">(</span><span class="nv">indent-sexp</span><span class="p">))</span>
</code></pre></div>
<p>The impact is much larger for statements that require an <code>indent</code> of 1:</p>

<p>Compare the proper thing:</p>
<div class="highlight"><pre><code class="language-elisp" data-lang="elisp"><span></span><span class="p">(</span><span class="nv">lispy-dotimes</span> <span class="nv">arg</span>
  <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nf">=</span> <span class="p">(</span><span class="nf">point</span><span class="p">)</span> <span class="p">(</span><span class="nf">point-max</span><span class="p">))</span>
    <span class="p">(</span><span class="ne">error</span> <span class="s">&quot;Reached end of buffer&quot;</span><span class="p">))</span>
  <span class="p">(</span><span class="nv">forward-list</span><span class="p">))</span>
</code></pre></div>
<p>to this horror:</p>
<div class="highlight"><pre><code class="language-elisp" data-lang="elisp"><span></span><span class="p">(</span><span class="nv">lispy-dotimes</span> <span class="nv">arg</span>
               <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nf">=</span> <span class="p">(</span><span class="nf">point</span><span class="p">)</span> <span class="p">(</span><span class="nf">point-max</span><span class="p">))</span>
                 <span class="p">(</span><span class="ne">error</span> <span class="s">&quot;Reached end of buffer&quot;</span><span class="p">))</span>
               <span class="p">(</span><span class="nv">forward-list</span><span class="p">))</span>
</code></pre></div>
<h2 id="outro">Outro</h2>

<p>I&#39;ve shown two things you can try if you find your Elisp indentation
annoying. If you know of more, let me know.</p>

</div>

<div id="disqus_thread"></div>
<script type="text/javascript">
  var disqus_shortname = 'oremacs'; // required: replace example with your forum shortname

  /* * * DON'T EDIT BELOW THIS LINE * * */
  (function() {
  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
  })();
</script>

<script>
  !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');
</script>
<noscript>
  Please enable JavaScript to view the
  <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a>
</noscript>

      </div>
    </div>

    <label for="sidebar-checkbox" class="sidebar-toggle"></label>

    <script>
      (function(document) {
        var toggle = document.querySelector('.sidebar-toggle');
        var sidebar = document.querySelector('#sidebar');
        var checkbox = document.querySelector('#sidebar-checkbox');

        document.addEventListener('click', function(e) {
          var target = e.target;

          if(!checkbox.checked ||
             sidebar.contains(target) ||
             (target === checkbox || target === toggle)) return;

          checkbox.checked = false;
        }, false);
      })(document);
    </script>
  </body>
</html>
