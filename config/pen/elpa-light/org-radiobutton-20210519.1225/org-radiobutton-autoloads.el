;;; org-radiobutton-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from org-radiobutton.el

(autoload 'org-radiobutton-mode "org-radiobutton" "\
Minor mode that ensures radiobutton property on radio lists.

A radio list is an org mode list with a :radio attribute.  To
specify the attribute use the #+attr_org: cookie above the list,
for example:

#+attr_org: :radio
#+name: service-to-query
- [X] staging
- [ ] production

Hitting C-c C-c on such a list will deselect the current
selection and select the one under the cursor.  This can be used
as input for other org source blocks, for example:

#+BEGIN_SRC elisp :var service=(org-radiobutton-value \"service-to-query\")
(format \"Will query the %s database\" service)
#+END_SRC

#+RESULTS:
: Will query the staging database

This is a minor mode.  If called interactively, toggle the
`Org-Radiobutton mode' mode.  If the prefix argument is positive,
enable the mode,  and if it is zero or negative, disable the
mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `org-radiobutton-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(put 'global-org-radiobutton-mode 'globalized-minor-mode t)
(defvar global-org-radiobutton-mode nil "\
Non-nil if Global Org-Radiobutton mode is enabled.
See the `global-org-radiobutton-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `global-org-radiobutton-mode'.")
(custom-autoload 'global-org-radiobutton-mode "org-radiobutton" nil)
(autoload 'global-org-radiobutton-mode "org-radiobutton" "\
Toggle Org-Radiobutton mode in all buffers.
With prefix ARG, enable Global Org-Radiobutton mode if ARG is positive;
otherwise, disable it.

If called from Lisp, toggle the mode if ARG is `toggle'.
Enable the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

Org-Radiobutton mode is enabled in all buffers where
`turn-on-org-radiobutton-mode-if-desired' would do it.

See `org-radiobutton-mode' for more information on Org-Radiobutton mode.

(fn &optional ARG)" t)
(register-definition-prefixes "org-radiobutton" '("org-radiobutton-" "turn-on-org-radiobutton-mode-if-desired"))

;;; End of scraped data

(provide 'org-radiobutton-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; org-radiobutton-autoloads.el ends here
