;;; gnu-apl-mode-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from gnu-apl-documentation.el

(register-definition-prefixes "gnu-apl-documentation" '("*gnu-apl-" "gnu-apl-"))


;;; Generated autoloads from gnu-apl-editor.el

(register-definition-prefixes "gnu-apl-editor" '("gnu-apl-"))


;;; Generated autoloads from gnu-apl-finnapl.el

(register-definition-prefixes "gnu-apl-finnapl" '("*gnu-apl-" "gnu-apl-"))


;;; Generated autoloads from gnu-apl-follow.el

(register-definition-prefixes "gnu-apl-follow" '("gnu-apl-"))


;;; Generated autoloads from gnu-apl-input.el

(register-definition-prefixes "gnu-apl-input" '("gnu-apl-"))


;;; Generated autoloads from gnu-apl-interactive.el

(register-definition-prefixes "gnu-apl-interactive" '("*gnu-apl-" "gnu-apl-"))


;;; Generated autoloads from gnu-apl-mode.el

(let ((loads (get 'gnu-apl 'custom-loads))) (if (member '"gnu-apl-mode" loads) nil (put 'gnu-apl 'custom-loads (cons '"gnu-apl-mode" loads)) (put 'languages 'custom-loads (cons 'gnu-apl (get 'languages 'custom-loads)))))
(autoload 'gnu-apl-mode "gnu-apl-mode" "\
Major mode for editing GNU APL files.

(fn)" t)
(autoload 'gnu-apl "gnu-apl-mode" "\
Start the GNU APL interpreter in a buffer.
APL-EXECUTABLE is the path to the apl program (defaults
to ‘gnu-apl-executable’).

(fn APL-EXECUTABLE)" t)
(add-to-list 'auto-mode-alist '("\\.apl\\'" . gnu-apl-mode))
(add-to-list 'interpreter-mode-alist '("apl" . gnu-apl-mode))
(register-definition-prefixes "gnu-apl-mode" '("company-gnu-apl" "gnu-apl-"))


;;; Generated autoloads from gnu-apl-network.el

(register-definition-prefixes "gnu-apl-network" '("*gnu-apl-" "gnu-apl--"))


;;; Generated autoloads from gnu-apl-osx-workaround.el

(register-definition-prefixes "gnu-apl-osx-workaround" '("gnu-apl-update-fontset-character"))


;;; Generated autoloads from gnu-apl-plot.el

(register-definition-prefixes "gnu-apl-plot" '("gnu-apl-"))


;;; Generated autoloads from gnu-apl-refdocs-bsd-license.el

(register-definition-prefixes "gnu-apl-refdocs-bsd-license" '("gnu-apl--symbol-doc"))


;;; Generated autoloads from gnu-apl-spreadsheet.el

(register-definition-prefixes "gnu-apl-spreadsheet" '("gnu-apl-"))


;;; Generated autoloads from gnu-apl-symbols.el

(register-definition-prefixes "gnu-apl-symbols" '("gnu-apl--symbols"))


;;; Generated autoloads from gnu-apl-util.el

(register-definition-prefixes "gnu-apl-util" '("gnu-apl--"))

;;; End of scraped data

(provide 'gnu-apl-mode-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; gnu-apl-mode-autoloads.el ends here
