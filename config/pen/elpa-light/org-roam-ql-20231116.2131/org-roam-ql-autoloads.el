;;; org-roam-ql-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from org-roam-ql.el

(autoload 'org-roam-ql-nodes "org-roam-ql" "\
Convert SOURCE-OR-QUERY to org-roam-nodes.
if SORT-FN is provided, the returned values will be sorted with it.

SOURCE-OR-QUERY can be one of the following:
- A org-roam-ql query.
- A `buffer-name' of a `org-roam-mode' buffer.
- A list of params that can be passed to `org-roam-db-query'.  Expected
  to have the form (QUERY ARG1 ARG2 ARG3...).  `org-roam-db-query' will
  called with the list or parameters as: (org-roam-db-query QUERY ARG1
  ARG2 ARG3...).  The first element in each row in the result from the
  query is expected to have the ID of a corresponding node, which will
  be conerted to a org-roam-node.  QUERY can be a complete query.  If
  the query is going to be of the form [:select [id] :from nodes
  :where (= todo \"TODO\")], you can omit the part till after
  :where i.e., pass only [(= todo \"TODO\")] and the rest will get
  appended in the front.
- A list of org-roam-nodes or an org-roam-node.
- An org-roam-query.
- A function that returns a list of org-roam-nodes.

SORT-FN can be a function that takes two org-roam-nodes, and
compatible with `seq-sort'.  Or it can be any regsitered sort
functions.

(fn SOURCE-OR-QUERY &optional SORT-FN)")
(autoload 'org-roam-ql-search "org-roam-ql" "\
Basically what `org-ql-search does', but for org-roam-nodes.
See `org-roam-ql-nodes' for what SOURCE-OR-QUERY can be.  TITLE is a title
to associate with the view.  DISPLAY-IN is expected to be a symbol,
either `'org-ql' or `'org-roam'.  If its `org-ql', the results from the
SOURCE-OR-QUERY will be displayed in `org-ql's agenda buffer.  If its
`org-roam', will be displayed in a org-roam-ql buffer.  SORT-FN is
used for sorting the results.  It can be a string name of a slot or a
predicate function which can be used to sort the nodes.  See
`org-roam-nodes' for more info on this

(fn SOURCE-OR-QUERY &optional TITLE SORT-FN)" t)
(autoload 'org-roam-ql--nodes-files "org-roam-ql" "\
Return the list of files from the list of NODES.

(fn NODES)")
(autoload 'org-roam-ql-defpred "org-roam-ql" "\
Create a org-roam-ql predicate with the NAME.
DOCSTRING is the docstring of the predicate.
The COMPARISON-FUNCTION is a function that returns non-nil if this
predicate doesn't fail for a given org-roam-node.  The first value
passed to this function would be the value from calling the
EXTRACTION-FUNCTION with the respective node, and the remainder of the
arguments from the predicate itself.

(fn NAME DOCSTRING EXTRACTION-FUNCTION COMPARISON-FUNCTION)" nil t)
(autoload 'org-roam-ql-agenda-buffer-from-roam-buffer "org-roam-ql" "\
Convert a roam buffer to agenda buffer." t)
(autoload 'org-roam-ql-refresh-buffer "org-roam-ql" "\
Refresh org-roam-ql buffer (agenda/org-roam)." t)
(register-definition-prefixes "org-roam-ql" '("org-"))

;;; End of scraped data

(provide 'org-roam-ql-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; org-roam-ql-autoloads.el ends here
