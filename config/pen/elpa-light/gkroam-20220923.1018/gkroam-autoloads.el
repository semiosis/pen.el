;;; gkroam-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from gkroam.el

(autoload 'gkroam-show-unlinked "gkroam" "\
Show unlinked references of current page in a side window." t)
(autoload 'gkroam-link-unlinked "gkroam" "\
Transform unlinked references in LINE-NUMBER line
to linked references for TITLE page.

(fn TITLE LINE-NUMBER)" t)
(autoload 'gkroam-cache-all-pages "gkroam" "\
Cache all gkroam pages' title and filename.")
(autoload 'gkroam-cache-all-headline-links "gkroam" "\
Cache all pages's gkroam headline links.")
(autoload 'gkroam-clear-reference-caches "gkroam" "\
Clear gkroam linked and unlinked references caches." t)
(autoload 'gkroam-rebuild-caches "gkroam" "\
Rebuild gkroam page and headline caches." t)
(autoload 'gkroam-find "gkroam" "\
Create a new gkroam page or open an exist one in current window, titled with TITLE.

(fn &optional TITLE)" t)
(autoload 'gkroam-daily "gkroam" "\
Create or open gkroam daily notes." t)
(autoload 'gkroam-insert "gkroam" "\
Insert a gkroam page link at point.
With optional arguments, use TITLE and ALIAS to format link.
If WITHOUT-HEADLINE is non-nil, don't format headline in link.

(fn &optional TITLE ALIAS WITHOUT-HEADLINE)" t)
(autoload 'gkroam-new-at-point "gkroam" "\
Insert a file link and create a new file according to text at point.
If WITHOUT-HEADLINE is non-nil, don't format headline in link.

(fn &optional WITHOUT-HEADLINE)" t)
(autoload 'gkroam-new-from-region "gkroam" "\
Insert a file link and create a new file according to a selected region.
If BEG and END are non-nil, the region is between beg and end.
If WITHOUT-HEADLINE is non-nil, don't format headline in link.

(fn &optional BEG END WITHOUT-HEADLINE)" t)
(autoload 'gkroam-dwim "gkroam" "\
Smartly create a new file or insert a link.
If in a region, read the text in region as file title.
If a word at point, read the text at point as file title.
Otherwise, use gkroam-find.  Finally, insert a file link
at point or in region." t)
(autoload 'gkroam-index "gkroam" "\
Show gkroam index buffer." t)
(autoload 'gkroam-mentions-mode "gkroam" "\
Minor mode for special key bindings in a gkroam mentions buffer.

Turning on this mode runs the normal hook `gkroam-mentions-mode-hook'.

This is a minor mode.  If called interactively, toggle the
`Gkroam-Mentions mode' mode.  If the prefix argument is positive,
enable the mode,  and if it is zero or negative, disable the
mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `gkroam-mentions-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(autoload 'gkroam-update "gkroam" "\
Update current gkroam buffer's reference." t)
(autoload 'gkroam-update-all "gkroam" "\
Update all pages' linked references if have." t)
(autoload 'gkroam-delete "gkroam" "\
Delete gkroam pages.
If optional argument TITLE-LST is non-nil,
delete those pages with title in TITLE-LST.

(fn &optional TITLE-LST)" t)
(autoload 'gkroam-link-edit "gkroam" "\
Edit gkroam link in minibuffer." t)
(autoload 'gkroam-prettify-mode "gkroam" "\
Minor mode for prettifying page.

This is a minor mode.  If called interactively, toggle the
`Gkroam-Prettify mode' mode.  If the prefix argument is positive,
enable the mode,  and if it is zero or negative, disable the
mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `gkroam-prettify-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(autoload 'gkroam-toggle-brackets "gkroam" "\
Determine whether to show brackets in page link." t)
(autoload 'gkroam-toggle-prettify "gkroam" "\
Toggle gkroam page prettification." t)
(defvar gkroam-mode nil "\
Non-nil if Gkroam mode is enabled.
See the `gkroam-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `gkroam-mode'.")
(custom-autoload 'gkroam-mode "gkroam" nil)
(autoload 'gkroam-mode "gkroam" "\
Minor mode for gkroam.

This is a global minor mode.  If called interactively, toggle the
`Gkroam mode' mode.  If the prefix argument is positive, enable
the mode,  and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `(default-value \\='gkroam-mode)'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "gkroam" '("gkroam-"))

;;; End of scraped data

(provide 'gkroam-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; gkroam-autoloads.el ends here
