;;; mu4e-conversation-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from mu4e-conversation.el

(put 'global-mu4e-conversation-mode 'globalized-minor-mode t)
(defvar global-mu4e-conversation-mode nil "\
Non-nil if Global Mu4e-Conversation mode is enabled.
See the `global-mu4e-conversation-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `global-mu4e-conversation-mode'.")
(custom-autoload 'global-mu4e-conversation-mode "mu4e-conversation" nil)
(autoload 'global-mu4e-conversation-mode "mu4e-conversation" "\
Toggle Mu4e-Conversation mode in all buffers.
With prefix ARG, enable Global Mu4e-Conversation mode if ARG is
positive; otherwise, disable it.

If called from Lisp, toggle the mode if ARG is `toggle'.
Enable the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

Mu4e-Conversation mode is enabled in all buffers where
`mu4e-conversation--turn-on' would do it.

See `mu4e-conversation-mode' for more information on Mu4e-Conversation
mode.

(fn &optional ARG)" t)
(autoload 'mu4e-conversation "mu4e-conversation" "\


(fn &optional MSG)" t)
(register-definition-prefixes "mu4e-conversation" '("mu4e-conversation-"))

;;; End of scraped data

(provide 'mu4e-conversation-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; mu4e-conversation-autoloads.el ends here
