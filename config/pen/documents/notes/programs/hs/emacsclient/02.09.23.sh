cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Exodus 15:1\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(find-file \"/volumes/home/shane/notes/ws/bible-studies/christs-return.org\")" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(pen-eval-for-host \"/tmp/eval-output-pen-emacsd-1-4fb9d7d4-4970-11ee-88ed-3f4673b49f56.txt\" \"~/.pen/pool/available/pen-emacsd-1\" (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (pps (progn (idefun colorof) (colorof \"sunrise\")))))" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(pen-eval-for-host \"/tmp/eval-output-pen-emacsd-1-56909a52-4970-11ee-a540-7f2b2cb839c0.txt\" \"~/.pen/pool/available/pen-emacsd-1\" (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (pps (progn (idefun color-of) (color-of \"strawberry\")))))" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(progn (get-buffer-create \"*scratch*\")(pen-banner)(pen-set-faces)(switch-to-buffer \"*scratch*\") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (comint-quick \"nlsh -appname nlq -shell /bin/bash \\\"-norl\\\"\" user-home-directory \"nlq: \" t)))" "#" "<==" "pen-emacsclient"
cd /root;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(pen-eval-for-host \"/tmp/eval-output-pen-emacsd-1-63aab74a-4970-11ee-9b09-2f5fe6fc4383.txt\" \"~/.pen/pool/available/pen-emacsd-1\" (json-encode-list (pen-batch (mapcar 'identity (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (pf-instruct-an-ai-to-do-something/1 \"Show latest version of node\" :no-select-result t :prompt-hist-id nil :include-prompt nil :no-gen nil :variadic-var nil :override-prompt nil :inject-gen-start nil))))))" "#" "<==" "pen-emacsclient"
cd /root;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-emacsclient"
cd /root;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(pen-eval-for-host \"/tmp/eval-output-pen-emacsd-1-70e8c442-4970-11ee-9cd6-0be7cdcd57f8.txt\" \"~/.pen/pool/available/pen-emacsd-1\" (json-encode-list (pen-batch (mapcar 'identity (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (pf-instruct-an-ai-to-do-something/1 \"Show french word for hello\" :no-select-result t :prompt-hist-id nil :include-prompt nil :no-gen nil :variadic-var nil :override-prompt nil :inject-gen-start nil))))))" "#" "<==" "pen-emacsclient"
cd /root;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-emacsclient"
cd /root;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(pen-eval-for-host \"/tmp/eval-output-pen-emacsd-1-79a76822-4970-11ee-94b2-a396ab13ad89.txt\" \"~/.pen/pool/available/pen-emacsd-1\" (json-encode-list (pen-batch (mapcar 'identity (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (pf-instruct-an-ai-to-do-something/1 \"Show maori greeting\" :no-select-result t :prompt-hist-id nil :include-prompt nil :no-gen nil :variadic-var nil :override-prompt nil :inject-gen-start nil))))))" "#" "<==" "pen-emacsclient"
cd /root;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-emacsclient"
cd /root;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Hebrews 1:1\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
