cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.pen/documents/devotionals/sermon/abner-kingmaker-part-one;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.pen/documents/devotionals/sermon/abner-kingmaker-part-one;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.pen/documents/devotionals/sermon/abner-kingmaker-part-one;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/.pen/documents/devotionals/sermon/abner-kingmaker-part-one/clean.txt\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")(goto-line 1)(move-to-column 0)))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Psalm 107:27-30\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(pen-eval-for-host \"/tmp/eval-output-pen-emacsd-1-7f3d90bc-4151-11ee-b5ee-27e10ee4d503.txt\" \"~/.pen/pool/available/pen-emacsd-1\" (pen-list2str (pen-batch (pen-single-generation (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens 300) (force-temperature nil) (force-stop-sequence nil)) (pf-imagine-a-man-page/1 \"urldecode\" :no-select-result t :prompt-hist-id nil :include-prompt nil :no-gen nil :variadic-var nil :override-prompt nil :inject-gen-start nil))))))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(pen-eval-for-host \"/tmp/eval-output-pen-emacsd-1-8bcdb514-4151-11ee-9102-535d45e1e032.txt\" \"~/.pen/pool/available/pen-emacsd-1\" (pen-update (pen-list2str (pen-batch (pen-single-generation (pen-force ((do-pen-update t) (pen-force-engine nil) (max-generated-tokens 300) (force-temperature nil) (force-stop-sequence nil)) (pf-imagine-a-man-page/1 \"urldecode\" :no-select-result t :prompt-hist-id nil :include-prompt nil :no-gen nil :variadic-var nil :override-prompt nil :inject-gen-start nil)))))))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.a5Zwwff\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Genesis 32:30\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "#" "<==" "pen-emacsclient"
cd /volumes/home/shane;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /volumes/home/shane;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /volumes/home/shane;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/volumes/home/shane/notes.org\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")(goto-line 8)(move-to-column 3)))" "#" "<==" "pen-e"
cd 'emacsclient' '-s' '/root/.emacs.d/server/DEFAULT' '-a' '' '-t' '-e' '(progn (get-buffer-create "*scratch*")(pen-banner)(pen-set-faces)(switch-to-buffer "*scratch*") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (progn (pen-term (pen-nsfa "\"pen-cterm-ssh\" \"-ssh-to-host\" \"y\" \"-cwd\" \"/root/.emacs.d/host/pen.el/scripts\" \"-cmd\" \"tmwr \\\\"bash\\\\"\" \"-user\" \"shane\"") t "pen-cterm-ssh" "cterm-tmwr-bash" nil ))))' '#' '<==' 'pen-emacsclient';  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(progn (get-buffer-create \"*scratch*\")(pen-banner)(pen-set-faces)(switch-to-buffer \"*scratch*\") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (progn (pen-term (pen-nsfa \"\\\"pen-cterm-ssh\\\" \\\"-ssh-to-host\\\" \\\"y\\\" \\\"-cwd\\\" \\\"/root/.emacs.d/host/pen.el/scripts\\\" \\\"-cmd\\\" \\\"tmwr \\\\\\\\\"bash\\\\\\\\\"\\\" \\\"-user\\\" \\\"shane\\\"\") t \"pen-cterm-ssh\" \"cterm-tmwr-bash\" nil ))))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(dired \"/volumes/home/shane/var/smulliga/source/git/galdor/tungsten\")" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Psalm 138:8\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Matthew 6:27\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(dired \"/volumes/home/shane/var/smulliga/source/git/jdh8/pons\")" "#" "<==" "pen-emacsclient"
cd /volumes/home/shane/var/smulliga/source/git/jdh8/pons/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /volumes/home/shane/var/smulliga/source/git/jdh8/pons/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /volumes/home/shane/var/smulliga/source/git/jdh8/pons/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(woman \"man\")(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.o92grPY\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(setq eww-no-external-handler t)(let ((force-eww t)) (eww \"https://www.thegospelcoalition.org/article/how-i-gleaned-hope-from-the-darkest-psalm/\"))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.pen/glossaries;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/.pen/glossaries;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.pen/glossaries;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.pen/glossaries;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-search \"Holy One of Israel\" \"NASB\" \"phrase\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /volumes/home/shane/var/smulliga/source/git/jdh8/pons/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /volumes/home/shane/var/smulliga/source/git/jdh8/pons/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /volumes/home/shane/var/smulliga/source/git/jdh8/pons/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(setq eww-no-external-handler nil)(let ((force-eww t)) (eww \"google.com\"))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Hebrews 10\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.pen/glossaries;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/.pen/glossaries;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.pen/glossaries;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.pen/glossaries;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"John 16:7-11\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"John 3:18\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
