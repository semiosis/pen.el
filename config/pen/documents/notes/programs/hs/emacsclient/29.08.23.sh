cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Ephesians 6\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(progn (get-buffer-create \"*scratch*\")(pen-banner)(pen-set-faces)(switch-to-buffer \"*scratch*\") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (comint-quick \"nlsh -appname nlsh -shell /bin/bash \\\"-norl\\\" \\\"Debian\\\"\" user-home-directory \"Debian: \" t)))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(setq eww-no-external-handler nil)(let ((force-eww t)) (eww \"https://www.patheos.com/blogs/keithgiles/2019/01/love-is-a-person/\"))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd 'emacsclient' '-s' '/root/.emacs.d/server/DEFAULT' '-a' '' '-t' '-e' '(progn (get-buffer-create "*scratch*")(pen-banner)(pen-set-faces)(switch-to-buffer "*scratch*") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (progn (pen-term (pen-nsfa "\"pen-cterm-ssh\" \"-ssh-to-host\" \"n\" \"-cwd\" \"/root/notes\" \"-cmd\" \"tmwr \\\\"bash\\\\"\" \"-user\" \"shane\"") t "pen-cterm-ssh" "cterm-tmwr-bash" nil ))))' '#' '<==' 'pen-emacsclient';  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(progn (get-buffer-create \"*scratch*\")(pen-banner)(pen-set-faces)(switch-to-buffer \"*scratch*\") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (progn (pen-term (pen-nsfa \"\\\"pen-cterm-ssh\\\" \\\"-ssh-to-host\\\" \\\"n\\\" \\\"-cwd\\\" \\\"/root/notes\\\" \\\"-cmd\\\" \\\"tmwr \\\\\\\\\"bash\\\\\\\\\"\\\" \\\"-user\\\" \\\"shane\\\"\") t \"pen-cterm-ssh\" \"cterm-tmwr-bash\" nil ))))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.MMirpXg\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/src\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
