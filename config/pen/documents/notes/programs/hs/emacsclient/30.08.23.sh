cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.kdYkLDi\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/src\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/.pen/documents/notes/lambda-emacs.el\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")(goto-line 1)(move-to-column 0)))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/.emacs.d/host/pen.el/scripts/lambda-emacs.el\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")(goto-line 1)(move-to-column 0)))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(runscript \"/root/.emacs.d/host/pen.el/scripts/emacs-script-test4\" )(delete-frame)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(runscript \"/root/.emacs.d/host/pen.el/scripts/emacs-script-test4\" )(delete-frame)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.tiZeOnT\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Ephesians 6\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Ephesians 6\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Ephesians 6\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Ephesians 6\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/.emacs.d/host/pen.el/scripts/lambda-emacs.el\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")(goto-line 1)(move-to-column 0)))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (find-file \"/tmp/3fOSJqeqIi\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Luke 17\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Luke 17\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Luke 17\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Acts 16\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/elpa/lsp-ui-20211009.1545;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/elpa/lsp-ui-20211009.1545;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/elpa/lsp-ui-20211009.1545;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (ignore-errors (package-install 'mini-frame))(pen-revert-and-quit-emacsclient-without-killing-server)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/.emacs.d/host/pen.el/src/pen-mini-frame.el\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Acts 16\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/.emacs.d/host/pen.el/src/pen-imenu.el\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/repos/bubbletea;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/repos/bubbletea;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/repos/bubbletea;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/repos/bubbletea/logging.go\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/dump/tmp/scratchgEFkTo.txt\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")(goto-line 9)(move-to-column 0)))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/dump/tmp/scratchgEFkTo.el\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")(goto-line 9)(move-to-column 0)))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Deuteronomy 27\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Exodus 20:3\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Jeremiah 17:5-6\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Zechariah 5\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Joshua 6:26\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/.pen/documents/notes/directories.org\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/.pen/documents/notes/directories.org\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.UJgtDPC\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.cSObuQv\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/docs;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/docs;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/docs;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.NmP1MzQ\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/docs\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.jEE0zpz\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/src\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.EWZmY3B\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/src\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.oKV38UN\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/src\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "#" "<==" "pen-emacsclient"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/metaverses/metaverses;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(find-file \"/root/.emacs.d/host/metaverses/metaverses/mad-teaparty.verse\")" "#" "<==" "pen-emacsclient"
cd 'emacsclient' '-s' '/root/.emacs.d/server/DEFAULT' '-a' '' '-t' '-e' '(progn (get-buffer-create "*scratch*")(pen-banner)(pen-set-faces)(switch-to-buffer "*scratch*") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (progn (pen-term (pen-nsfa "\"pen-cterm-ssh\" \"-ssh-to-host\" \"n\" \"-cwd\" \"/root/.emacs.d/host/pen.el/src\" \"-cmd\" \"tmwr \\\\"pen-v\\\\" \\\\"+10:10\\\\" \\\\"/root/.emacs.d/host/pen.el/src/pen-overlay-doc.el\\\\"\" \"-user\" \"shane\"") t "pen-cterm-ssh" "cterm-tmwr-pen-v-10-10-root-emacs-d" nil ))))' '#' '<==' 'pen-emacsclient';  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(progn (get-buffer-create \"*scratch*\")(pen-banner)(pen-set-faces)(switch-to-buffer \"*scratch*\") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (progn (pen-term (pen-nsfa \"\\\"pen-cterm-ssh\\\" \\\"-ssh-to-host\\\" \\\"n\\\" \\\"-cwd\\\" \\\"/root/.emacs.d/host/pen.el/src\\\" \\\"-cmd\\\" \\\"tmwr \\\\\\\\\"pen-v\\\\\\\\\" \\\\\\\\\"+10:10\\\\\\\\\" \\\\\\\\\"/root/.emacs.d/host/pen.el/src/pen-overlay-doc.el\\\\\\\\\"\\\" \\\"-user\\\" \\\"shane\\\"\") t \"pen-cterm-ssh\" \"cterm-tmwr-pen-v-10-10-root-emacs-d\" nil ))))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.sM4gEJA\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/src\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.h93Wx43\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/src\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(dired-cmd \"dired-ls\" \"/root/.emacs.d/host/pen.el/scripts\" \"--dired -alh\")(dired-git-info-mode 0)(dired-hide-details-mode 1)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.Xc3VGKk\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.bmm4OdQ\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.4CtHGQp\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.tKv6FsE\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.kepKF5J\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "/root/.pen/documents/notes/1" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "/root/.pen/documents/notes/1" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "/root/.pen/documents/notes/1" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "/root/.pen/documents/notes/1" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.taNS9OQ\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "--version" "#" "<==" "emacs"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "--version" "#" "<==" "emacs"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.K0C4T0G\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/src\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.dhCLkUv\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/src\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.TE1HIaW\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/src\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "--version" "#" "<==" "emacs"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.IBBE5QW\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "--version" "#" "<==" "emacs"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "2" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "2" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "2" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "2" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "2" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "2" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "2" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.d5hzVM1\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "--version" "#" "<==" "emacs"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (progn (find-file \"/tmp/emacs-stdin-.ekHUcVZ\" )(set-visited-file-name nil)(rename-buffer \"*stdin*\"  t)(message (str (frame-terminal)))(ignore-errors (cd \"/root/.emacs.d/host/pen.el/scripts\")(grep-mode)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(progn (get-buffer-create \"*scratch*\")(pen-banner)(pen-set-faces)(switch-to-buffer \"*scratch*\") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (comint-quick \"nlsh -appname nlsh -shell /bin/bash \\\"-norl\\\" \\\"Ubuntu\\\"\" user-home-directory \"Ubuntu: \" t)))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-nta" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "--version" "#" "<==" "emacs"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(progn (try (delete-frame)))(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(progn (get-buffer-create \"*scratch*\")(pen-banner)(pen-set-faces)(switch-to-buffer \"*scratch*\") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (comint-quick \"nlsh -appname nlsc -shell zsh \\\"-norl\\\"\" user-home-directory \"Debian GNU/Linux 10 (zsh): \" t)))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(pen-eval-for-host \"/tmp/eval-output-DEFAULT-50c4f560-4721-11ee-85ea-0fefd4b372f3.txt\" \"~/.pen/pool/available/DEFAULT\" (pen-update (pen-list2str (pen-batch (pen-single-generation (pen-force ((do-pen-update t) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (pf-nlsh/2 \"Windows 95\" \"shutdown computer\" :no-select-result t :prompt-hist-id nil :include-prompt nil :no-gen nil :variadic-var nil :override-prompt nil :inject-gen-start nil)))))))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(pen-eval-for-host \"/tmp/eval-output-DEFAULT-0372db46-4722-11ee-a4e9-3b6e9de91057.txt\" \"~/.pen/pool/available/DEFAULT\" (json-encode-list (pen-batch (mapcar 'identity (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (pf-nlsh/2 \"Debian GNU/Linux 10 (zsh)\" \"install vim\" :no-select-result t :prompt-hist-id nil :include-prompt nil :no-gen nil :variadic-var nil :override-prompt nil :inject-gen-start nil))))))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "/root/.pen/documents/notes/pen-emacsd-2" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "/root/.pen/documents/notes/pen-emacsd-2" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-2" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/scripts;  "emacsclient" "--version" "#" "<==" "emacs"
cd /root/notes;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(pen-eval-for-host \"/tmp/eval-output-pen-emacsd-1-489136f0-4722-11ee-8527-479f18ccdbd7.txt\" \"~/.pen/pool/available/pen-emacsd-1\" (json-encode-list (pen-batch (mapcar 'identity (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (pf-nlsh/2 \"Debian GNU/Linux 10 (zsh)\" \"install vim\" :no-select-result t :prompt-hist-id nil :include-prompt nil :no-gen nil :variadic-var nil :override-prompt nil :inject-gen-start nil))))))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(pen-eval-for-host \"/tmp/eval-output-pen-emacsd-1-4fce9df4-4722-11ee-b19b-2b834c2af389.txt\" \"~/.pen/pool/available/pen-emacsd-1\" (json-encode-list (pen-batch (mapcar 'identity (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (pf-nlsh/2 \"Debian GNU/Linux 10 (zsh)\" \"install emacs\" :no-select-result t :prompt-hist-id nil :include-prompt nil :no-gen nil :variadic-var nil :override-prompt nil :inject-gen-start nil))))))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(pen-eval-for-host \"/tmp/eval-output-pen-emacsd-1-b7d3348c-4722-11ee-ae87-5753f9a7c209.txt\" \"~/.pen/pool/available/pen-emacsd-1\" (json-encode-list (pen-batch (mapcar 'identity (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (pf-nlsh/2 \"Ubuntu 20.04\" \"install vim\" :no-select-result t :prompt-hist-id nil :include-prompt nil :no-gen nil :variadic-var nil :override-prompt nil :inject-gen-start nil))))))" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-t" "-a" "" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/.emacs.d/host/prompts;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "#" "<==" "pen-e"
cd /root/notes;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/pen-emacsd-1" "-e" "(progn (ignore-errors (get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (read-string \"KILL_FRAME\")(kill-frame))" "#" "<==" "pen-emacsclient"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (message (str (frame-terminal)))(funcall-interactively 'bible-open nil nil \"NASB\" \"Luke 12\")(recenter-top-bottom)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "false" "-e" "t" "-s" "/root/.emacs.d/server/DEFAULT" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-a" "" "-t" "-s" "/root/.emacs.d/server/DEFAULT" "-e" "(progn (ignore-errors (find-file \"/root/.emacs.d/host/pen.el/src/pen-mouse.el\")(sit-for 0.2)(run-mode-hooks major-mode)(get-buffer-create \"*scratch*\")))" "#" "<==" "pen-e"
cd /root/.emacs.d/host/pen.el/src;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-c" "-a" "" "#" "<==" "pen-emacsclient"
cd 'emacsclient' '-s' '/root/.emacs.d/server/DEFAULT' '-a' '' '-t' '-e' '(progn (get-buffer-create "*scratch*")(pen-banner)(pen-set-faces)(switch-to-buffer "*scratch*") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (progn (pen-term (pen-nsfa "\"pen-cterm-ssh\" \"-ssh-to-host\" \"n\" \"-cwd\" \"/root/notes\" \"-cmd\" \"tmwr \\\\"tmux-attach-window\\\\" \\\\"@2\\\\"\" \"-user\" \"shane\"") t "pen-cterm-ssh" "cterm-tmwr-tmux-attach-window-2" nil ))))' '#' '<==' 'pen-emacsclient';  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "-e" "(progn (get-buffer-create \"*scratch*\")(pen-banner)(pen-set-faces)(switch-to-buffer \"*scratch*\") (pen-force ((do-pen-update nil) (pen-force-engine nil) (max-generated-tokens nil) (force-temperature nil) (force-stop-sequence nil)) (progn (pen-term (pen-nsfa \"\\\"pen-cterm-ssh\\\" \\\"-ssh-to-host\\\" \\\"n\\\" \\\"-cwd\\\" \\\"/root/notes\\\" \\\"-cmd\\\" \\\"tmwr \\\\\\\\\"tmux-attach-window\\\\\\\\\" \\\\\\\\\"@2\\\\\\\\\"\\\" \\\"-user\\\" \\\"shane\\\"\") t \"pen-cterm-ssh\" \"cterm-tmwr-tmux-attach-window-2\" nil ))))" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/dump/root/.emacs.d/host/pen.el/src;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
cd /root/notes;  "emacsclient" "-s" "/root/.emacs.d/server/DEFAULT" "-a" "" "-t" "#" "<==" "pen-emacsclient"
