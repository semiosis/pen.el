export DUMP="$HOME/dump"
export REPOS="$HOME/repos"
export MYGIT="$HOME/repos"
export NOTES="/root/notes"

unset EMACSD_BUILTIN
test -d "/root/.emacs.d" && : "${EMACSD_BUILTIN:="/root/.emacs.d"}"
export EMACSD_BUILTIN

unset EMACSD
test -d "/root/.emacs.d/host" && : "${EMACSD:="/root/.emacs.d/host"}"
test -d "/root/.emacs.d" && : "${EMACSD:="/root/.emacs.d"}"
export EMACSD

unset VIMCONFIG
test -d "/root/.vim/host" && : "${VIMCONFIG:="/root/.vim/host"}"
test -d "/root/.vim" && : "${VIMCONFIG:="/root/.vim"}"
export VIMCONFIG

unset VIMSNIPPETS
test -d "$EMACSD/pen.el/config/vim-bundles/vim-snippets/snippets" && : "${VIMSNIPPETS:="$EMACSD/pen.el/config/vim-bundles/vim-snippets/snippets"}"
export VIMSNIPPETS

export GOPATH="$HOME/go"
export GOBIN="$HOME/go/bin"
unset TMPDIR
test -d "/root/.pen/tmp" && : "${TMPDIR:="/root/.pen/tmp"}"
test -d "/tmp" && : "${TMPDIR:="/tmp"}"
export TMPDIR
export PENCONF="$HOME/.pen"
export GLOSSARIES="$PENCONF/glossaries"
test -d "$EMACSD/host/pen.el" && : "${PENELD:="$EMACSD/host/pen.el"}"
test -d "$EMACSD/pen.el" && : "${PENELD:="$EMACSD/pen.el"}"
export PENELD
export PEN_SCRIPTS="$PENELD/scripts"
export PROMPTSD="$EMACSD/prompts"
export BROWSER="eww -x"
export MIRRORD="$HOME/text-mirror"

test -d "/root/.emacs.d/host/prompts" && : "${PEN_PROMPTS_DIR:="/root/.emacs.d/host/prompts"}"
test -d "/root/.emacs.d/prompts" && : "${PEN_PROMPTS_DIR:="/root/.emacs.d/prompts"}"
export PEN_PROMPTS_DIR

test -d "/root/.emacs.d/host/prompts/prompts" && : "${PROMPTS:="/root/.emacs.d/host/prompts/prompts"}"
test -d "/root/.emacs.d/prompts/prompts" && : "${PROMPTS:="/root/.emacs.d/prompts/prompts"}"
export PROMPTS

test -d "/root/.emacs.d/host/pen.el" && : "${PENEL_DIR:="/root/.emacs.d/host/pen.el"}"
test -d "/root/.emacs.d/pen.el" && : "${PENEL_DIR:="/root/.emacs.d/pen.el"}"
export PENEL_DIR

test -d "/root/.emacs.d/host/engines" && : "${PEN_ENGINES_DIR:="/root/.emacs.d/host/engines"}"
test -d "/root/.emacs.d/engines" && : "${PEN_ENGINES_DIR:="/root/.emacs.d/engines"}"
export PEN_ENGINES_DIR

test -d "/root/.emacs.d/host/openai-api.el" && : "${OPENAI_API_EL_DIR:="/root/.emacs.d/host/openai-api.el"}"
test -d "/root/.emacs.d/openai-api.el" && : "${OPENAI_API_EL_DIR:="/root/.emacs.d/openai-api.el"}"
export OPENAI_API_EL_DIR

test -d "/root/.emacs.d/host/engines/engines" && : "${ENGINES:="/root/.emacs.d/host/engines/engines"}"
test -d "/root/.emacs.d/engines/engines" && : "${ENGINES:="/root/.emacs.d/engines/engines"}"
export ENGINES

test -d "/root/.emacs.d/host/pensieve" && : "${PENSIEVE_DIR:="/root/.emacs.d/host/pensieve"}"
test -d "/root/.emacs.d/pensieve" && : "${PENSIEVE_DIR:="/root/.emacs.d/pensieve"}"
export PENSIEVE_DIR
export PENSIEVE="$PENSIEVE_DIR"

test -d "/root/.emacs.d/host/rhizome" && : "${RHIZOME_DIR:="/root/.emacs.d/host/rhizome"}"
test -d "/root/.emacs.d/rhizome" && : "${RHIZOME_DIR:="/root/.emacs.d/rhizome"}"
export RHIZOME_DIR
export RHIZOME="$RHIZOME_DIR"

agi() {
    apt install -y "$@"
}

pyf() {
    pip3 install "$@"
}

# I think PATH got too big or something and the tmux nested sessions broke
PATH=$PATH:/usr/local/go/bin
PATH=$PATH:~/.local/bin
PATH=$PATH:/root/.roswell/bin
PATH=$PATH:/usr/games
# uniqnosort
export PATH="$(printf -- "%s" "$PATH" | sed 's/:/\n/g' | awk '!seen[$0] {print} {++seen[$0]}' | sed -z "s/\n/:/g" | sed "s/:$//")"

# I actually *do* want this to be set, so I know if I need to create a new tmux or not for, cosm, say
# unset TMUX

term_setup_fp="$EMACSD/pen.el/scripts/setup-term.sh"
term_setup_host_fp="$EMACSD/host/pen.el/scripts/setup-term.sh"

if [ -f "$term_setup_host_fp" ]; then
    . "$term_setup_host_fp"
elif [ -f "$term_setup_fp" ]; then
    . "$term_setup_fp"
fi

# nvm can't be in setup-term.sh or shellrc, nvm made emacs dog slow
if ! test -n "$PEN_DAEMON"; then
    . ~/.cargo/env

    # nvm is just too slow. I don't even want it in eterm
    # For nvm/npm/node
    # export NVM_DIR="$HOME/.nvm"
    # [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
fi

# For debugging
export PS4='+	"$(basename $0)"	${LINENO}	 '
