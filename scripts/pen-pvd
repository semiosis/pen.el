#!/bin/bash

. $SCRIPTS/lib/hs

# https://www.visidata.org/install/

# https://jsvine.github.io/intro-to-visidata

# Run a command like M-x
# https://www.visidata.org/docs/plugins/
# Use "space" - it's like spacemacs.

# Delete a column
# https://github.com/saulpw/visidata/issues/1366
# As you noted you can use - (hyphen) to hide the column. This is good enough
# for most of my use cases, but to actually delete the column you'll need to
# open the columns sheet SHIFT+C and press delete (d) on the column you want to
# remove +1

# I should be able to cat into vd
# There should be no errors. vd might already be ok.

# It still doesn't treat piped input particularly well I should extend
# vd

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -nh) {
        shift
        set -- --header=0 "$@"
    }
    ;;

    -h|--help) {
        do_help=y
        shift
    }
    ;;

    -csv) {
        iscsv=y
        shift
    }
    ;;

    *) break;
esac; done

if test "$do_help" = y; then
    export GY_CMD="visidata --help"
    visidata --help | pavs
    exit "$?"
fi

is_tty() {
    # If stout is a tty
    [[ -t 1 ]]
}

# : "${BLACK_AND_WHITE:="y"}"

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -2) {
        # precmd="TERM=xterm-2color "
        # precmd="export TERM=screen-2color; "
        export TERM=screen-2color
        # precmd="TERM=vt100 "

        BLACK_AND_WHITE=y
        shift
    }
    ;;

    -nobw) {
        BLACK_AND_WHITE=n
        shift
    }
    ;;

    -open-plugins) {
        mode=open-plugins
        shift
    }
    ;;

    *) break;
esac; done

if test "$BLACK_AND_WHITE" = "y"; then
    export TERM=screen-2color
else
    :
fi

case "$mode" in
    open-plugins) {
        x -sh visidata -s ' open-plugins' -c m -i
        exit "$?"
    }
    ;;

    *)
esac

is_tty() { [ -t 1 ] && ! test "$TERM" = "dumb"; }

# test:
# ext_freq_cmdlog_out.vdj | v

is_stdout_pipe() {
    # If stout is a pipe
    [[ -p /dev/stdout ]]
}

if is_tty && ! test "$IN_UNBUFFER" = y && ! is_stdout_pipe; then
    eval `resize`
fi

. $SCRIPTS/lib/stdin_exists

if stdin_exists; then
    if test "$iscsv" = "y"; then
        infp="$(tf csv)"
    else
        infp="$(tf tsv)"
    fi

    set -- "$infp" "$@"
    exec <&2
fi

export EDITOR=fpvd-editor

visidata "$@"

# if is_tty; then
#     visidata "$@"
# else
#     cat
# fi
