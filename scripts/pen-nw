#!/bin/bash
export TTY

sn="$(basename "$0")"

export TMUX
unset CWD

declare -a tmargs

is_stdout_pipe() {
    # If stout is a pipe
    [[ -p /dev/stdout ]]
}
is_stdout_pipe
ispipe="$?"

if test "$ispipe" -eq 0; then
    tmargs+=(-w)
fi

. $SCRIPTS/lib/stdin_exists

if stdin_exists && test "$ispipe" -eq 0; then
    # echo hi | pen-tm -sout -vipe sps "vipe" | v
    CMD="$(cmd "$@")"
    : ${CMD:="$(cmd "$@")"}
    sn="$(p "$sn" | sed 's/pen-//')"
    pen-tm -sout -vipe "$sn" "$CMD" | cat
    exit "$?"
fi

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -E) {
        shift

        CMD="$1"

        # This is better because this works echo hi | sps -E "cat | v"
        "$sn" sh -c "$CMD"

        exit $?
    }
    ;;

    -t) {
        TARGET="$2"
        shift
        shift
    }
    ;;

    -w) {
        tmargs+=("$opt")
        shift
    }
    ;;

    -iftty) {
        iftty=y
        shift
    }
    ;;

    -tmarg) {
        tmargs+=("$2")
        shift
        shift
    }
    ;;

    -yn) {
        DOYN=y
        shift
    }
    ;;

    *) break;
esac; done

export TARGET

is_tty() { [ -t 1 ] && ! test "$TERM" = "dumb"; }

if test "$iftty" = "y" && is_tty; then
    "$@"
    exit "$?"
fi

: "${CMD:="$(0</dev/null cmd "$@" | pen-mnm | cut -c 1-30 | slugify | sed 's/^-//;s/-$//')"}"

pp="$(ps -o comm= $PPID)"

# ls -la /proc/$$/fd | tv &>/dev/null

# This is also used as tmargs
arr=()
if stdin_exists && \
    ! test "$pp" = emacs; then
    arr=( -S "${arr[@]}" )
else
    arr=( -d "${arr[@]}" )
fi

arr=( -tout "${arr[@]}" )

CMD_B="$(cmd-nice-posix "${arr[@]}")"
: ${CMD_B:="$(cmd-nice-posix "$@")"}

if test "$DOYN" && ! pen-yn "do $(aqf "$@")?"; then
    exit
fi

sn="$(p "$sn" | sed 's/^pen-//')"

cmd1 pen-tm -export "PEN_GUI TMUX" "${arr[@]}" "$sn" -n "$CMD_B" -args "$@" | pen-ds lastsps &>/dev/null
pen-tm -export "PEN_GUI TMUX" "${arr[@]}" "${tmargs[@]}" "$sn" -n "$CMD" -args "$@"
