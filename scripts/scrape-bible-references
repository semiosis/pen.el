#!/bin/bash
export TTY

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -b) {
        books_only=y
        shift
    }
    ;;

    -vc) {
        verses_or_chapters_only=y
        shift
    }
    ;;

    -c) {
        chapters_only=y
        shift
    }
    ;;

    -v) {
        verses_only=y
        shift
    }
    ;;

    -c) {
        chapters_only=y
        shift
    }
    ;;

    *) break;
esac; done

# TODO Start by generating all the desired regexes for all
# bible references.

# $EMACSD/config/my-bible-mode.el
# $DUMP/tmp/scratch0Ppvf4.txt

# sed -n 's/.*\(Psalms\?\)\( [0-9]\+\)\?\(:[0-9]\+\)\?.*/\1\2\3/p' | uniqnosort

# cat $PENEL_DIR/src/pen-avy.el | scrape-bible-references

# I need to combine a lot of seds
# use sed's -f script.sed

# The most efficient way to do this is probably with perl, but oh well.
# I have to make this very efficient

# list-bible-book-titles
IFS= read -r -d '' booktitles <<HEREDOC
Genesis
Gen
Ge
Gn
Exodus
Ex
Exod
Exo
Leviticus
Lev
Le
Lv
Numbers
Num
Nu
Nm
Nb
Deuteronomy
Deut
De
Dt
Joshua
Josh
Jos
Jsh
Judges
Judg
Jdg
Jg
Jdgs
Ruth
Rth
Ru
I Samuel
1 Samuel
1 Sam
1 Sm
1 Sa
I Sam
I Sa
1Sam
1Sa
1S
1st Samuel
1st Sam
First Samuel
First Sam
II Samuel
2 Samuel
2 Sam
2 Sm
2 Sa
II Sam
II Sa
2Sam
2Sa
2S
2nd Samuel
2nd Sam
First Samuel
First Sam
I Kings
1 Kings
1 Kgs
1 Ki
1Kgs
1Kin
1Ki
1K
1st Kings
1st Kgs
First Kings
First Kgs
II Kings
2 Kings
2 Kgs
2 Ki
2Kgs
2Kin
2Ki
2K
2nd Kings
2nd Kgs
Second Kings
Second Kgs
I Chronicles
1 Chronicles
1 Chron
1 Chr
1 Ch
1Chron
1Chr
I Chron
I Chr
I Ch
1st Chronicles
1st Chron
First Chronicles
First Chron
II Chronicles
2 Chronicles
2 Chron
2 Chr
2 Ch
2Chron
2Chr
II Chron
II Chr
II Ch
2nd Chronicles
2nd Chron
Second Chronicles
Second Chron
Ezra
Ezr
Ez
Nehemiah
Neh
Ne
Esther
Est
Esth
Es
Job
Jb
Psalms
Ps
Psalm
Pslm
Psa
Psm
Pss
Proverbs
Prov
Pro
Prv
Pr
Ecclesiastes
Eccles
Eccle
Ecc
Ec
Qoh
Song of Solomon
Song
Song of Songs
SOS
So
Canticle of Canticles
Canticles
Cant
Isaiah
Isa
Is
Jeremiah
Je
Jr
Lamentations
Lam
La
Ezekiel
Ezek
Eze
Ezk
Daniel
Dan
Da
Dn
Hosea
Hos
Ho
Joel
Jl
Amos
Am
Obadiah
Obad
Ob
Jonah
Jnh
Jon
Micah
Mic
Mc
Nahum
Nah
Na
Habakkuk
Hab
Hb
Zephaniah
Zeph
Zep
Zp
Haggai
Hag
Hg
Zechariah
Zech
Zec
Zc
Malachi
Mal
Ml
Matthew
Matt
Mt
Mark
Mrk
Mar
Mk
Mr
Luke
Luk
Lk
John
Joh
Jhn
Jn
Acts
Act
Ac
Romans
Rom
Ro
Rm
I Corinthians
1 Corinthians
1 Cor
1 Co
I Cor
I Co
1Cor
1Co
1Corinthians
1st Corinthians
First Corinthians
II Corinthians
2 Corinthians
2 Cor
2 Co
II Cor
II Co
2Cor
2Co
2Corinthians
2nd Corinthians
Second Corinthians
Galatians
Gal
Ga
Ephesians
Eph
Ephes
Philippians
Phil
Php
Pp
Colossians
Col
Co
I Thessalonians
1 Thess
1 Thes
1 Th
1 Thessalonians
I Thess
I Thes
I Th
1Thessalonians
1Thess
1Thes
1Th
1st Thessalonians
1st Thess
First Thessalonians
First Thess
II Thessalonians
2 Thess
2 Thes
2 Th
2 Thessalonians
II Thess
II Thes
II Th
2Thessalonians
2Thess
2Thes
2Th
2nd Thessalonians
2nd Thess
Second Thessalonians
Second Thess
I Timothy
1 Timothy
1 Tim
1 Ti
I Timothy
I Tim
I Ti
1Timothy
1Tim
1Ti
1st Timothy
1st Tim
First Timothy
First Time
II Timothy
2 Timothy
2 Tim
2 Ti
II Timothy
II Tim
II Ti
2Timothy
2Tim
2Ti
2nd Timothy
2nd Tim
Second Timothy
Second Time
Titus
Tit
ti
Philemon
Philem
Phm
Pm
Hebrews
Heb
James
Jas
Jm
I Peter
1 Peter
1 Pet
1 Pe
1 Pt
1 P
I Pet
I Pt
I Pe
1Peter
1Pet
1Pe
1Pt
1P
I Peter
1st Peter
First Peter
II Peter
2 Peter
2 Pet
2 Pe
2 Pt
2 P
II Pet
II Pt
II Pe
2Peter
2Pet
2Pe
2Pt
2P
II Peter
2nd Peter
Second Peter
I John
1 John
1 Jhn
1 Jn
1 J
1John
1Jhn
1Joh
1Jn
1Jo
1st John
First John
II John
2 John
2 Jhn
2 Jn
2 J
2John
2Jhn
2Joh
2Jn
2Jo
2nd John
Second John
III John
3 John
3 Jhn
3 Jn
3 J
3John
3Jhn
3Joh
3Jn
3Jo
3rd John
Third John
Jude
Jud
Jd
Revelation of John
Revelation
Rev
Re
HEREDOC

# Thankfully there is a multiple of 10 number of books

input_fp="$(cat | c ascify | tf txt)"
{
    
    printf -- "%s" "$booktitles" | while IFS=$'\n' read -r title; do
        #read -r title2
        #read -r title3
        #read -r title4
        #read -r title5
        #read -r title6
        #read -r title7
        #read -r title8
        #read -r title9

        # But there might be more than one verse on the same line
        # But it's unlikely, so keep it like this.
        # Otherwise, I can reduce it to one title,
        # and it will be slower, but more accurate
        # cat "$input_fp" | sed -n "s/.*\\b\\($title\\|$title2\\|$title3\\|$title4\\|$title5\\|$title6\\|$title7\\|$title8\\|$title9\?\\)\\b.*/\\1/p"
        # cat "$input_fp" | sed -n "s/.*\\b\\($title\\|$title2\\|$title3\\|$title4\\|$title5\\|$title6\\|$title7\\|$title8\\|$title9\?\\)\\b\\( [0-9]\+\\)\?.*/\\1\\2/pI"
        # cat "$input_fp" | sed -n "s/.*\\b\\($title\\|$title2\\|$title3\\|$title4\\|$title5\\|$title6\\|$title7\\|$title8\\|$title9\?\\)\\b\\( [0-9]\+\\)\?\\(:[0-9]\+\\)\\?.*/\\1\\2\\3/pI"

        # This is slow but it works
        # cat "$input_fp" | awk 1 | sed -n "s/.*\\b\\($title\\)\\b.*/\\1/p"
        # cat "$input_fp" | awk 1 | sed -n "s/.*\\b\\($title\\)\\b\\( [0-9]\+\\).*/\\1\\2/pI"

        # Mark 6:1-13Psalms 119:73-80Proverbs 17:27-28

        cat "$input_fp" | awk 1 | 
            sed 's/\([0-9]\)\([A-Za-z]\)/\1\r\2/g' |
            sed -n "s/.*\\b\\($title\\)\\b\\(\\.\\)\\?\\( \?[0-9][0-9-]*\\)\\?\\(:[0-9][0-9-]*\\)\\?.*/\\1\\2\\3\\4/p" |
            sed '/^$/d'
    done
} | sed -e 's/\.$//' | {
    if test "$verses_only" = "y"; then
        grep :
    else
        cat
    fi
} | {
    if test "$verses_or_chapters_only" = "y"; then
        grep -P "[0-9]$"
    else
        cat
    fi
} | {
    if test "$chapters_only" = "y"; then
        grep -P "[0-9]$" | sed 's/:.*//'
    else
        cat
    fi
} | {
    if test "$books_only" = "y"; then
        sed 's/ \?[0-9].*//'
    else
        cat
    fi
} | uniqnosort | sed '/^..$/d'
rm "$input_fp"
