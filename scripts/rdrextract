#!/bin/bash
export TTY

# Remember to provide -u

# curl https://www.clojure-toolbox.com/ | rdrview -M
# TODO Ensure that it is readerable

# Pipe html in, get html out

stdin_exists() {
    {
    ! [ -t 0 ] && \
    ! test "$(readlink /proc/$$/fd/0)" = /dev/null  && \
    ! test "$(readlink /proc/$$/fd/0)" = "$(readlink /proc/$$/fd/1)"
    # stdin may be redirected to the tty, but  will continue to say false (due to a bash bug)
    # So test to make sure 0 does not point to 1
    } &>/dev/null
}

if test "$#" -gt 0 && ! stdin_exists; then
    if test -f "$1"; then
        exec < <(cat "$1")
    fi
fi

input_fp="$(pen-tf thing || echo /dev/null)"
trap "rm \"$input_fp\" 2>/dev/null" 0

exec 0</dev/null

# cat "$input_fp" | pen-tv &>/dev/null

title="(READER) $(cat "$input_fp" | rdrview -M | sed -n '/^Title:/{s/^\(Title: \)\(.*\)/\2/p;q}')"
readerable="$(cat "$input_fp" | rdrview -M | sed -n '/^Readerable:/{s/^\(Readerable: \)\(.*\)/\2/p;q}')"

if test "$readerable" = "No"; then
    cat "$input_fp" | sed 's/<title>/&(UNREADERABLE) /'
    exit 0
fi

IFS= read -r -d '' head <<HEREDOC
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>$title</title>
</head>
<body>
HEREDOC

printf -- "%s" "$head"

cat "$input_fp" | rdrview -H "$@"

IFS= read -r -d '' foot <<HEREDOC
</body>
</html>
HEREDOC

printf -- "%s" "$foot"
