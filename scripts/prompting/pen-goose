#!/bin/bash

: "${GOOSE_API_KEY:="$PEN_LM_KEY"}"

if test -s $HOME/.pen/goose_api_key; then
    : "${GOOSE_API_KEY:="$(cat $HOME/.pen/goose_api_key)"}"
fi

test -n "$GOOSE_API_KEY" || {
    echo "GOOSE_API_KEY not given to script"
    exit 1
}

export GOOSE_API_KEY

export PEN_PROMPT
export PEN_MODEL
export PEN_MIN_TOKENS
export PEN_MAX_TOKENS
export PEN_MIN_GENERATED_TOKENS
export PEN_MAX_GENERATED_TOKENS
export PEN_ENGINE_MIN_TOKENS
export PEN_ENGINE_MAX_TOKENS
export PEN_ENGINE_MAX_GENERATED_TOKENS
export PEN_TEMPERATURE
export PEN_TOP_P
export PEN_TOP_K
export PEN_STOP_SEQUENCE
export PEN_N_COMPLETIONS
export PEN_PRESENCE_PENALTY
export PEN_FREQUENCY_PENALTY

: "${PEN_N_COMPLETIONS:="4"}"
: "${PEN_PRESENCE_PENALTY:="0"}"
: "${PEN_FREQUENCY_PENALTY:="0"}"

sedstop="$(printf -- "%s" "$PEN_STOP_SEQUENCE" | sed -z 's/\\/\\\\/g')"

# No more than 1 currenty supported
# export PEN_N_COMPLETIONS=1

if test -n "$PEN_N_COMPLETIONS" && test "$PEN_N_COMPLETIONS" -gt 1; then
    if test "$PEN_N_COMPLETIONS" -gt 4; then
        PEN_N_COMPLETIONS=2

        # the mechanism of using multiple prompts might work for a paid
        # account, but not for the free one
        PEN_N_COMPLETIONS=1
    fi

    FINAL_PEN_PROMPT="$(printf -- "%s" "$PEN_PROMPT" | pen-q-jq | awk 1)"
    FINAL_PEN_PROMPT="[$(printf -- "%s\n" "$FINAL_PEN_PROMPT" | pen-str repeat-string "$PEN_N_COMPLETIONS" | pen-str join ',')]"
else
    # FINAL_PEN_PROMPT="$(cmd-nice-jq "$PEN_PROMPT")"
    FINAL_PEN_PROMPT="$(printf -- "%s" "$PEN_PROMPT" | pen-q-jq)"
fi

pen_goose() {
    if printf -- "%s\n" "$PEN_FLAGS" | grep -q -P '<goose-begin-newline>'; then
        echo
    fi

    # cmd-nice-jq is very slow. Find a faster, reliable solution.
    # Or use python

    # \"maxTokens\": $PEN_ENGINE_MAX_GENERATED_TOKENS,

    # Since Goose uses the OpenAi API, I can just look at the http requests in the openai client to find the parameters

    # \"n\": $PEN_N_COMPLETIONS,
    curl "https://api.goose.ai/v1/engines/$PEN_MODEL/completions" \
         -H 'Content-Type: application/json' \
         -H "Authorization: Bearer $GOOSE_API_KEY" \
         -X POST \
         -d "{\"prompt\": $FINAL_PEN_PROMPT,
              \"max_tokens\": $PEN_MAX_GENERATED_TOKENS,
              \"stop\": [$(cmd-nice-jq "$PEN_STOP_SEQUENCE")],
              \"top_p\": $PEN_TOP_P,
              \"top_k\": $PEN_TOP_K,
              \"temperature\": $PEN_TEMPERATURE,
              \"presence_penalty\": $PEN_PRESENCE_PENALTY,
              \"frequency_penalty\": $PEN_FREQUENCY_PENALTY
             }"
}

pen_goose "$@" | pen-log goose-temp &>/dev/null

{
if test "$PEN_N_COMPLETIONS" = 1; then
    printf -- "%s" "$PEN_PROMPT"
    cat ~/.pen/temp/goose-temp.txt | jq -r ".choices[$((i - 1))].text"
else
    for i in $(seq 1 "$PEN_N_COMPLETIONS"); do
        echo "===== Completion $i ====="
        {
        printf -- "%s" "$PEN_PROMPT"
        cat ~/.pen/temp/goose-temp.txt | jq -r ".choices[$((i - 1))].text"
        } | awk 1
    done | pen-log goose
fi
} 