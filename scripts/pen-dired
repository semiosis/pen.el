#!/bin/bash

( hs "$(basename "$0")" "$@" "#" "<==" "$(ps -o comm= $PPID)" 0</dev/null ) &>/dev/null

aqf() { aqf-nice "$@"; }

# cd /; find $NOTES/ws/lisp -type f -name '*.lisp' | dired
# cd $MYGIT/mullikine/systemd-services.el; dired .

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -g) {
        dogit=y
        shift
    }
    ;;

    -glimpse) {
        shift
        dired_dir=/
        cd "/"
        exec < <(glimpse -l "$@")
        shift "$#"
    }
    ;;

    -locate) {
        shift
        dired_dir=/
        cd "/"
        exec < <(locate "$@")
        shift "$#"
    }
    ;;

    -find) {
        shift
        dired_dir="$1"
        dired_dir="$(realpath "$dired_dir")"
        shift
        cd "$dired_dir"
        exec < <(find . "$@")
        shift "$#"
    }
    ;;

    -*) {
        paras+=" $opt"
        shift
    }
    ;;

    *) break;
esac; done

if test "$(pwd)" = "$SCRIPTS"; then
    0</dev/null ns "The scripts git repo is huge. Disable dired git info."
    dogit=n
fi

stdin_exists() {
    ! [ -t 0 ] && ! test "$(readlink /proc/$$/fd/0)" = /dev/null
}

: ${dired_dir:="$(pwd)"}

if stdin_exists; then
    joined_list="$(sed 's/^\.\///' | sed "s=${dired_dir}/==" | lines-to-args)"
    # dired_ls_cmd="shift 3; cd \"\$1\"; shift; dired-ls-d --dired -alh -- $joined_list"
    dired_ls_cmd="shift 2; dired-ls-d --dired -alh -- $joined_list"
    # dired_ls_cmd="dired-ls-d $joined_list"
    dired_cmd="$(nsfa -E "$dired_ls_cmd")"
fi

exec <&1

# eval "dired-ls --dired -alhd -- $joined_list"

if test "$#" -gt 0; then
    last_arg="${@: -1}"
    dired_dir="$last_arg"; : ${dired_dir:="$(pwd)"}
    test "$#" -gt 0 && set -- "${@:1:$(($#-1))}" # shift last arg
fi

# This can only be used retroactively
# (dired-sort-other "-alR")

: "${paras:="--dired -alh"}"
: ${dired_cmd:="dired-ls"}

test -d "$dired_dir" || {
    echo "Dir doesn't exist" 1>&2
    exit 1
}

if test "$dogit" = "y"; then
    e -e "(dired-cmd $(aqf "$dired_cmd" "$dired_dir" "$paras"))(dired-git-info-mode 1)(dired-hide-details-mode 0)"
else
    e -e "(dired-cmd $(aqf "$dired_cmd" "$dired_dir" "$paras"))(dired-git-info-mode 0)(dired-hide-details-mode 1)"
fi
