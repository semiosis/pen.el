#!/bin/bash
export TTY
# shopt -s nullglob # use for 'for' loops but not for 'ls', 'grep'

( hs "$(basename "$0")" "$@" "#" "<==" "$(ps -o comm= $PPID)" 0</dev/null ) &>/dev/null

sn="$(basename -- "$0")"

is_tty() { [ -t 1 ] && ! test "$TERM" = "dumb"; }

case "$sn" in
    bible-book) {
        if is_tty; then
            book="$(list-bible-books | mfz -num -nv)"
            if test -z "$book"; then
                exit
            fi
        else
            book=Genesis
        fi
    }
    ;;

    *)
        book="$sn"
esac

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -v) {
        version="$2"
        shift
        shift
    }
    ;;

    -f) {
        FAST=y
        shift
    }
    ;;

    -noemacs) {
        export NOEMACS=y
        shift
    }
    ;;

    *) break;
esac; done

: "${version:="nasb"}"

maybe_version="$(cmd-nice "$book" "$@" | bible-get-module-from-ref -df "$version")"
if test "$FAST" = "y"; then
    ref="$(cmd-nice "$book" "$@")"
else
    ref="$(cmd-nice "$book" "$@" | scrape-bible-references | pen-sort line-length-desc | head -n 1)"
fi
if test -n "$maybe_version"; then
    version="$maybe_version"
fi

# query="$@"
# 
# if test -n "$query"; then
#     if ! printf -- "%s\n" "$query" | grep -q -P ':'; then
#         query="$query:1"
#     fi
# fi

# "$version" "$book" "$query"

# "$version" "$book" "$@"

ebible -m "$version" "$ref"
