#!/bin/bash
export TTY

# A string preprocessor/postprocessor library for pen.el
# With an emphasis on character transformations, rather than strings.

sn="$(basename "$0")"
case "$sn" in
    *) {
        opt="$1"
        shift
    }
    ;;
esac

case "$opt" in
    lll|longest-line-length) {
        awk ' { if ( length > x ) { x = length } }END{ print x }'
    } ;;

    remove-n-fields) {
        python "import sys;[sys.stdout.write(' '.join(line.split(' ')[$1:])) for line in sys.stdin]"
    } ;;
    
    py-sub) {
        pattern="$1"
        substitution="$2"
        python "import sys,re;[sys.stdout.write(re.sub('$pattern', '$substitution', line)) for line in sys.stdin]"
    } ;;

    afp|awk-field-pipe) {
        gawk -F, 'BEGIN{OFS=","; cmd="l2u"} { for(i = 1; i <= NF; i++) { printf "%s\n", $i |& cmd; cmd |& getline \$i; }; } { print; system("") }END{close(cmd)}'
    } ;;

    avp|awk-variable-pipe) {
        pattern="$1"
        shift

        CMD="$(cmd "$@")"

        gawk -v cmd="$CMD" "/$pattern/ { print \$0 |& cmd; cmd |& getline; } { print; system(\"\") }"
    } ;;

    s-u|strip-utf|strip-unicode) {
        iconv -c -f utf-8 -t ascii
    } ;;

    ascify|asciify) {
        sed -e 's/▄/ /g' \
            -e 's/[┌┐┘└│├─┤┬┴┼]/ /g' \
            -e 's/\s\+$//g' ` # remove trailing whitespace ` | \
        sed -e 's/ / /g' \
         -e 's/…/.../g' \
         -e 's/ﬀ/ff/g' \
         -e 's/ﬃ/ffi/g' \
         -e 's/ﬁ/fi/g' \
         -e 's/ﬂ/fl/g' \
         -e 's/©/(c)/g' \
         -e 's/[“”]/"/g' \
         -e "s/[‘’]/'/g" \
         -e "s/[−–—­]/-/g" |
         deunicode | unicode-to-ascii
         # c strip-unicode || ns "c strip-unicode probably failed"
    } ;;

    anum|alphanum|alphanumeric) {
        sed 's/[^a-zA-Z0-9]\+/ /g'
    } ;;

    nosymbol) {
        sed 's/[^a-zA-Z0-9_-]\+/ /g'
    } ;;

    context-chars) {
        sed 's/[^a-zA-Z0-9_. -]\+/ /g'
    } ;;

    char-frequency) {
        awk -f $HOME/var/smulliga/source/git/acmeism/RosettaCodeData/Task/Letter-frequency/AWK/letter-frequency.awk
    } ;;

    lc|lower-case) {
        tr '[:upper:]' '[:lower:]'
    } ;;

    uc|upper-case) {
        tr '[:lower:]' '[:upper:]'
    } ;;

    tc|title-case) {
        sed -e 's/.*/\L&/' -e 's/[[:graph:]]*/\u&/g'
    } ;;

    no-special-chars) { # Turn special characters into regular ascii ones
        sed 's/[“”]/"/g' | sed "s/[‘’]/'/g"
    } ;;

    *) 
esac
