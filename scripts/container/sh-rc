#!/bin/bash
export TTY

unset TTY

clear
# exec 1> >(pen-mnm)

# I should turn this entire script into an elisp hydra.
# Although that would require that emacs has been started already.

read -r -d '' options <<HEREDOC
.  EDIT
Z  zsh
z  zsh
^  selected.el
s  .ssh/config
;  .shellrc
K  .racketrc
a  .shell_aliases
q  ~/.pen/pen.yaml
Q  ~/.pen/efm-langserver-config.yaml
b  bash
0  my-context-functions.el
9  my-func-lists.el
B  irbrc (ruby)
e  emacs
c  scope.sh
w  my-spacemacs.el
|  my-aliases.el
A  auto-mode-load.el
D  adehome/.aderc
)  autofiles.txt
I  setup.sh
n  my-ux.el
#  my-rc.el
m  .strings.sh
M  my-music.el
N  my-engine.el
i  irssi
[  init.sh
# Q  bigqueryrc
v  vim
V  vscode extensions
x  xmonad
X  xmobar
h  my-hydra.el
t  tmux
r  ranger rc
R  rifle
S  syntax.vim
'  .spacemacs
%  chinese.vim
C  .clojurerc
=  chans.txt
p  python full
E  my-misc.el
4  bash-library.sh
@  .shell_environment
P  packages.txt
f  filters.sh
l  $MYGIT/semiosis/pen-efm-config/config.yaml
u  utils.el
U  utils.2.el
o  org-config.el
O  shane-minor-mode.el
T  pen-tm
+  rat/ratrc
g  .gitconfig
G  $HOME/notes/ws/google/searches.org
F  config-files.txt
H  $HOME/.zsh_history
k  $HOME/.ghci + $HOME/.ghci.hs
# Y  $HOME/.pentadactylrc
y  $HOME/notes/ws/python/shanepy/shanepy.py
Y  $HOME/notes/ws/python/shanepy/mynlp.py
1  $VIMSNIPPETS/codelingo.snippets
5  $MYGIT/spacemacs/.lsp-session-v1
W  $MYGIT/config/weechat/weechat.conf
*  $HOME/.clisprc
:  $MYGIT/mullikine/shane-prolog/shane.pl
L  $HOME/.plrc
>  $HOME/.pen/pen.yaml
\`  .profile
\~  $HOME/.Xresources
HEREDOC

echo "$0" | udl | hls green
echo "$options" | hls dgrey

read -n1 d; test "$d" = "" && read -n1 d
# clear

case "$d" in
    .) cmd="vs $0" ;;
    Z|z) cmd="vs $HOME/.zshrc" ;;
    \^) cmd="pin $MYGIT/config/emacs/config/my-selected.el" ;;
    a) cmd="vs $HOME/.shell_aliases" ;;
    q) cmd="vs ~/.pen/pen.yaml" ;;
    Q) cmd="vs ~/.pen/efm-langserver-config.yaml" ;;
    b) cmd="vs $HOME/.bashrc" ;;
    0) cmd="orspe $EMACSD/config/my-context-functions.el" ;;
    9) cmd="orspe $EMACSD/config/my-func-lists.el" ;;
    B) cmd="pin $HOME/.irbrc" ;;
    F) cmd="vs $NOTES/config-files.txt" ;;
    e) cmd="pin $HOME/.emacs" ;;
    E) cmd="pin $MYGIT/config/emacs/config/my-misc.el" ;;
    4) cmd="v $SCRIPTS/libraries/bash-library.sh" ;;
    \@) cmd="vs $HOME/.shell_environment" ;;
    c) cmd="vs scope.sh" ;;
    w) cmd="pin $MYGIT/config/emacs/config/my-spacemacs.el" ;;
    \|) cmd="pin $MYGIT/config/emacs/config/my-aliases.el" ;;
    A) cmd="pin $EMACSD/config/auto-mode-load.el" ;;
    D) cmd="pin $NOTES/programs/adehome/.aderc" ;;
    \)) cmd="vs $HOME/notes/programs/tm/autofiles.txt" ;;
    I) cmd="vs $EMACSD/pen.el/scripts/setup.sh" ;;
    n) cmd="pin $MYGIT/config/emacs/config/my-ux.el" ;;
    \#) cmd="pin $MYGIT/config/emacs/config/my-rc.el" ;;
    i) cmd="vs $HOME/.irssi/config" ;;
    \[) cmd="vs $HOME/scripts/init.sh" ;;
    t) cmd="vs $HOME/.tmux.conf" ;;
    S) cmd="vs $HOME/notes/syntax.vim" ;;
    \') cmd="vs $HOME/.spacemacs" ;;
    %) cmd="vs $HOME/notes/chinese.vim" ;;
    C) cmd="vs $HOME/.clojurerc" ;;
    =) cmd="vs $HOME/notes/im/channels.txt" ;;
    v) cmd="v $HOME/.vimrc" ;;
    V) cmd="vs $DUMP/programs/vscode/packages.txt" ;;
    s) cmd="vs $HOME/.ssh/config" ;;
    \;) cmd="vs $HOME/.shellrc" ;;
    K) cmd="vs $HOME/.racketrc" ;;
    N) cmd="vs $HOME/source/git/config/emacs/config/my-engine.el" ;;
    m) cmd="vs $HOME/.strings.sh" ;;
    M) cmd="pin $EMACSD/config/my-music.el" ;;
    x) cmd="pin $HOME/.xmonad/xmonad.hs" ;;
    X) cmd="pin $HOME/.xmobarrc" ;;
    u) cmd="pin $EMACSD/config/my-utils.el" ;;
    U) cmd="pin $EMACSD/config/my-utils.2.el" ;;
    r) cmd="vs $HOME/.config/ranger/rc.conf" ;; # much better in vs
    R) cmd="rifle $HOME/.config/ranger/rifle.conf" ;;
    h) cmd="pin $EMACSD/config/my-hydra.el" ;;
    p) cmd="pin $HOME/notes/ws/python/rc/pythonrc.full.py" ;;
    P) cmd="vs $EMACSD/packages.txt" ;;
    # Q) cmd="vs $HOME/.bigqueryrc" ;;
    o) cmd="pin $EMACSD/config/org-config.el" ;;
    O) cmd="pin $MYGIT/config/emacs/config/shane-minor-mode.el" ;;
    g) cmd="vs $HOME/.gitconfig" ;;
    G) cmd="vs $HOME/notes/ws/google/searches.org" ;;
    T) cmd="vs $HOME/scripts/tm" ;;
    \+) cmd="vs $HOME/.config/rat/ratrc" ;;
    f) cmd="v $PENELD/config/filters/filters.sh" ;;
    l) cmd="pin $MYGIT/semiosis/pen-efm-config/config.yaml" ;;
    H) cmd="vs $HOME/.zsh_history" ;;
    k) cmd="vs -o $HOME/.ghci.hs $HOME/.ghci" ;;
    # Y) cmd="vs $HOME/.pentadactylrc" ;;
    y) cmd="pin $HOME/notes/ws/python/shanepy/shanepy.py" ;;
    Y) cmd="pin $HOME/notes/ws/python/shanepy/mynlp.py" ;;
    1) cmd="vs $VIMSNIPPETS/codelingo.snippets" ;;
    5) cmd="vs $MYGIT/spacemacs/.lsp-session-v1" ;;
    W) cmd="vs $MYGIT/config/weechat/weechat.conf" ;;
    \*) cmd="pin $HOME/.clisprc" ;;
    \:) cmd="pin $MYGIT/mullikine/shane-prolog/shane.pl" ;;
    L) cmd="pin $HOME/.plrc" ;;
    \>) cmd="vs +G $HOME/.pen/pen.yaml" ;;
    \`) cmd="vs $HOME/.profile" ;;
    \~) cmd="vs ~/.Xresources" ;;

esac
echo
echo "$cmd" | hls nearblack

# exec <`tm-tty`
# exec 1> /dev/tty
eval "$cmd"
