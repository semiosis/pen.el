#!/bin/bash

# pen-nsfa - new script from args

# This will return the path to a new script in
# the =tmp= directory which when executed will
# execute =echo hi=.
#
# =pen-nsfa= is used by =comint-quick=, which
# will is used to create =comint= modes for, for example, =nlsh=.
#
# See =nlsh-os=.

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    -E) {
        DO_EXEC=y
        shift
    }
    ;;

    *) break;
esac; done

: ${CWD:="$(pwd)"}

if test "$DO_EXEC" = "y"; then
    CMD="$1"
else
    CMD="$(cmd "$@")"
fi

slug="$(echo "$CMD--$CWD" | tr -d '\n' | slugify | cut -c -40)"

tf_new_script="/tmp/nsfa-$slug.sh"
rm -f "$tf_new_script"

# stty stop and undef are used to prevent C-s from hanging the program.
IFS= read -r -d '' scriptcode <<HEREDOC
#!/bin/bash
$(test -n "$PEN_NO_TM" && printf -- "%s\n" "export PEN_NO_TM=\"$PEN_NO_TM\"")
$(test -n "$PEN_USE_GUI" && printf -- "%s\n" "export PEN_USE_GUI=\"$PEN_USE_GUI\"")
$(test -n "$TMUX" && printf -- "%s\n" "export TMUX=\"$TMUX\"")
stty stop undef 2>/dev/null; stty start undef 2>/dev/null;
HEREDOC

printf -- "%s\n" "$scriptcode" >> "$tf_new_script"
export PATH=$HOME/scripts:$HOME/scripts/container:$PATH

CWD="$(printf -- "%s" "$CWD" | sed "s=^~=$HOME=")"
if test -n "$CWD" && test -d "$CWD"; then
    printf -- "%s\n" "export CWD=$(cmd-nice "$CWD")" | awk 1 >> "$tf_new_script"
    cmd cd "$CWD" | awk 1 >> "$tf_new_script"
fi

printf -- "%s\n" "$CMD \"\$@\"" >> "$tf_new_script"
chmod a+x "$tf_new_script"
echo -n "$tf_new_script"
