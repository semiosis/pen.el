#!/bin/bash

unset TMUX

# sct "$(pen-rc .screen_temperature)"

exec 2>/dev/null
unset TTY

stdin_exists() {
    {
    ! [ -t 0 ] && \
    ! test "$(readlink /proc/$$/fd/0)" = /dev/null  && \
    ! test "$(readlink /proc/$$/fd/0)" = "$(readlink /proc/$$/fd/1)"
    # stdin may be redirected to the tty, but  will continue to say false (due to a bash bug)
    # So test to make sure 0 does not point to 1
    } &>/dev/null
}

if stdin_exists; then
    input_fp="$(cat | tf txt)"
fi

exec <&1

: "${DISPLAY:=":0"}"
export DISPLAY

# Example:
# pen-xt pen-tm pen-ns overview $NOTES/scratch "e $NOTES/scratch/overview.org"

xrdb -merge ~/.Xresources; xrdb -load ~/.Xresources

DETACH=n
FONT_SIZE=8
FONT_SIZE=6
# FONT_SIZE=12
# FONT_SIZE=10
# FONT_SIZE=13
FONT_SIZE=26

use_term="$(pen-rc .use_term)"
: "${use_term:="xterm"}"
: "${use_term:="alacritty"}"
: "${use_term:="gnome"}"
while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    -d) {
        DETACH=y
        shift
    }
    ;;

    -b) {
        {
            if pen-rc-test my_monitor; then
                FONT_SIZE="$(pen-rc .xterm_font_size_my_monitor)"

                ## FONT_SIZE=9
            else
                FONT_SIZE="$(pen-rc .xterm_font_size)"
            fi
        }
        shift
    }
    ;;

    -xt) {
        use_term=xterm
        shift
    }
    ;;

    -h) {
        FONT_SIZE=13
        shift
    }
    ;;

    -hidden) {
        HIDDEN=y
        shift
    }
    ;;

    -E) {
        DO_EXEC=y
        shift
    }
    ;;

    *) break;
esac; done

if test "$DO_EXEC" = "y"; then
    CMD="$1"
else
    if test "$(hostname)" = "megn"; then
        CMD="$(pen-cmd "$@")"
    else
        if test "$#" -gt 0; then
            CMD="$(pen-nsfa "$@")"
        fi
    fi
fi

if [ -z "$CMD" ]; then
    CMD=bash
fi

if test -n "$input_fp"; then
    CMD="cat $(cmd-nice-posix "$input_fp") | $CMD"
fi

if test "$HIDDEN" = "y"; then
    if display-p; then
        DETACH=y
    else
        eval "$CMD"
        exit "$?"
    fi
fi

export SHELL=/bin/bash 

CMD="export WINDOWID; cd "$(pwd)"; $CMD"

if test "$use_term" = "gnome"; then
    CMD="bash -c $(pen-cmd "$CMD")"
fi

if false && ismacbook && ! pen-rc-test my_monitor; then
    FONT_SIZE="$(echo "(${FONT_SIZE} * $(pen-rc .macbook_dpi_scale_factor))/1" | bc)"
fi

is_stdout_pipe() {
    # If stout is a pipe
    [[ -p /dev/stdout ]]
}

is_stdout_pipe
ispipe="$?"

if test "$ispipe" -eq 0 && ! test "$DETACH" = "y"; then
    output_fp="$(0</dev/null tf txt)"
    CMD="$CMD > $output_fp"
fi

run_term() {
    case "$use_term" in
        gnome) {
            gnome-terminal --hide-menubar -e "$CMD"
        }
        ;;

        urxvt) {
            urxvt -e ". $HOME/.xterm-sh-rc; $CMD" & disown
        }
        ;;

        alacritty) {
            sed -i "s/^  size: .*/  size: $FONT_SIZE/" ~/.config/alacritty/alacritty.yml
            alacritty -e "$(pen-nsfa -E ". $HOME/.xterm-sh-rc; $CMD")"
        }
        ;;

        *|xterm) {
            /usr/bin/xterm -ls -fs "$FONT_SIZE" -e ". $HOME/.xterm-sh-rc; $CMD"
        }
        ;;

    esac
}

if test "$DETACH" = "y"; then
    set -m
    run_term & disown
else
    run_term

    if test "$ispipe" -eq 0; then
        cat "$output_fp"
    fi
fi
