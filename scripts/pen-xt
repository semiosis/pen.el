#!/bin/bash

unset TMUX
unset PEN_TMUX
unset TMUX_PANE

# sct "$(pen-rc .screen_temperature)"

# export PS4='+	"$(basename $0)"	${LINENO}	 '
# set -xv

exec 2>/dev/null
unset TTY

. $SCRIPTS/lib/stdin_exists

# For some reason, xt thinks it gets stdin when run like this
# notty xt vim

if stdin_exists; then
    input_fp="$(cat | tf txt)"
fi


# exec <&1 # Don't do it this or j:pen-start-in-xterm will break
 # vim +/"STDIN_EXISTS=y" "$PENELD/scripts/pen-nsfa"
exec <`tm-tty` `# see etty`

: "${DISPLAY:=":0"}"
export DISPLAY

# Example:
# pen-xt pen-tm pen-ns overview $NOTES/scratch "e $NOTES/scratch/overview.org"

xrdb -merge ~/.Xresources; xrdb -load ~/.Xresources

DETACH=n
FONT_SIZE=8
FONT_SIZE=6
# FONT_SIZE=12
# FONT_SIZE=10
# FONT_SIZE=13
FONT_SIZE=20
# FONT_SIZE=26
# FONT_SIZE=36

light_mode=n

use_term="$(pen-rc .use_term)"
: "${use_term:="xterm"}"
: "${use_term:="alacritty"}"
: "${use_term:="gnome"}"
while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    -d) {
        DETACH=y
        shift
    }
    ;;

    -li) {
        light_mode=y
        shift
    }
    ;;

    -nvt) {
        use_nvt=y
        shift
    }
    ;;

    -2) {
        # Disable colours
        BLACK_AND_WHITE=y
        shift
    }
    ;;

    -b) {
        {
            if pen-rc-test my_monitor; then
                FONT_SIZE="$(pen-rc .xterm_font_size_my_monitor)"

                ## FONT_SIZE=9
            else
                FONT_SIZE="$(pen-rc .xterm_font_size)"
            fi
            : "${FONT_SIZE:="26"}"
            # : "${FONT_SIZE:="36"}"
        }
        shift
    }
    ;;

    -xt) {
        use_term=xterm
        shift
    }
    ;;

    -rv) {
        use_term=xterm
        reverse_video=y
        shift
    }
    ;;

    -h) {
        FONT_SIZE=13
        shift
    }
    ;;

    -hidden) {
        HIDDEN=y
        shift
    }
    ;;

    -E) {
        DO_EXEC=y
        shift
    }
    ;;

    *) break;
esac; done

if test "$DO_EXEC" = "y"; then
    CMD="$1"
else
    if test "$(hostname)" = "megn"; then
        CMD="$(pen-cmd "$@")"
    else
        if test "$#" -gt 0; then
            CMD="$(pen-nsfa "$@")"
        fi
    fi
fi

if [ -z "$CMD" ]; then
    CMD=bash
fi

if test -n "$input_fp"; then
    CMD="cat $(cmd-nice-posix "$input_fp") | $CMD"
fi

if test "$HIDDEN" = "y"; then
    if display-p; then
        DETACH=y
    else
        eval "$CMD"
        exit "$?"
    fi
fi

export SHELL=/bin/bash

CMD="export WINDOWID; cd "$(pwd)"; $CMD"

if test "$use_term" = "gnome"; then
    CMD="bash -c $(pen-cmd "$CMD")"
fi

if false && ismacbook && ! pen-rc-test my_monitor; then
    FONT_SIZE="$(echo "(${FONT_SIZE} * $(pen-rc .macbook_dpi_scale_factor))/1" | bc)"
fi

is_stdout_pipe() {
    # If stout is a pipe
    [[ -p /dev/stdout ]]
}

is_stdout_pipe
ispipe="$?"

if test "$ispipe" -eq 0 && ! test "$DETACH" = "y"; then
    output_fp="$(0</dev/null tf txt)"
    CMD="$CMD > $output_fp"
fi

run_term() {
    case "$use_term" in
        gnome) {
            gnome-terminal --hide-menubar -e "$CMD"
        }
        ;;

        urxvt) {
            urxvt -e ". $HOME/.xterm-sh-rc; $CMD" & disown
        }
        ;;

        alacritty) {
            sed -i "s/^  size: .*/  size: $FONT_SIZE/" ~/.config/alacritty/alacritty.yml
            alacritty -e "$(pen-nsfa -E ". $HOME/.xterm-sh-rc; $CMD")"
        }
        ;;

        *|xterm) {
            fargs=()

            if test "$reverse_video" = "y"; then
                fargs+=(-rv)
            fi

            if test "$light_mode" = "y"; then
                # force light background
                # v +/"! blue on paper" "$HOME/.Xresources"
                fargs+=(-bg "#f7e7d7" -fg "#444477")
            else
                # dark background
                # fargs+=(-bg "#000000" -fg "#ffffff")
                fargs+=(-bg "#111118" -fg "#ffffff")
            fi

            if test "$BLACK_AND_WHITE" = "y"; then
                CMD="bw $CMD"
            fi

            if test "$use_nvt" = "y"; then
                if test "$BLACK_AND_WHITE" = "y"; then
                    CMD="nvt -2 $CMD"
                else
                    CMD="nvt $CMD"
                fi
            fi

            xterm "${fargs[@]}" -ls -fs "$FONT_SIZE" -fa "xterm*faceName: Monospace:style=Bold:antialias=true:pixelsize=$FONT_SIZE" -e ". $HOME/.xterm-sh-rc; $CMD"
        }
        ;;

    esac
}

if test "$DETACH" = "y"; then
    set -m
    run_term & disown
else
    run_term

    if test "$ispipe" -eq 0; then
        cat "$output_fp"
    fi
fi
