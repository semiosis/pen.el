#!/bin/bash
export TTY

( hs "$(basename "$0")" "$@" "#" "<==" "$(ps -o comm= $PPID)" 0</dev/null ) &>/dev/null

# Start a process inside emacs

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    -E) {
        DO_EXEC=y
        shift
    }
    ;;

    *) break;
esac; done

if test "$DO_EXEC" = "y"; then
    CMD="$1"
else
    CMD="$(cmd-nice-posix "$@")"
fi

stdin_exists() {
    {
    ! [ -t 0 ] && \
    ! test "$(readlink /proc/$$/fd/0)" = /dev/null  && \
    ! test "$(readlink /proc/$$/fd/0)" = "$(readlink /proc/$$/fd/1)"
    # stdin may be redirected to the tty, but  will continue to say false (due to a bash bug)
    # So test to make sure 0 does not point to 1
    } &>/dev/null
}

# TODO Make stdin go into snfa
# if stdin_exists || printf -- "%s\n" "$CMD" | grep -q -P ' '; then
#     CMD="$(nsfa "$CMD")"
# 
#     exec <&1
# fi

is_tty() { [ -t 1 ] && ! test "$TERM" = "dumb"; }

if is_tty; then
    cmd-nice x -sh "$(cmd sp -e "(pen-start-process $(cmd-nice-posix "$CMD"))")" -e "When done with this frame" -sl 0.5 -m '<' -sl 0.5 -m '>' -i
else
    cmd-nice sp -e "(pen-start-process $(cmd-nice-posix "$CMD"))" +ofq "(current-buffer-name)" | cat
fi
