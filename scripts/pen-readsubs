#!/bin/bash
export TTY

sn="$(basename "$0")"

( hs "$(basename "$0")" "$@" "#" "<==" "$(ps -o comm= $PPID)" 0</dev/null ) &>/dev/null

export UPDATE

if test "$#" -eq 0; then
    url="$(pen-xc)"
    echo "reopening: $url" | hls green 1>&2
    "$sn" "$url" # Run it again so we get the history
    exit $?
fi

test "$#" -gt 0 || { echo "No url supplied" | hls red 1>&2; exit 1; }

url="$1"
test -n "$url" || { echo "Empty url" | hls red 1>&2; exit 1; }

url="$(p "$url" | xurls)"
url="$(p "$url" | sed 's/?t=*//')"

test -n "$url" || { echo "url: $url\nNot a youtube url" | hls red 1>&2; exit 1; }

if ! test "$CI_CACHED" = "y"; then ocif "$sn" "$@" | pavs; exit "$?"; fi

transcript_dir="$DUMP$NOTES/ws/youtube/transcripts"
subs_dir="$DUMP$NOTES/ws/youtube/subs"

# cd "$subs_dir"

youtube-get-subtitles "$url"
exit "$?"

# clean-subs is used in yt-subs.sh

raw="$(
    oci yt-subs.sh "$url" |
        grep -i -P "\\.(en|fr).*\\." |
        head -n 1 | awk 1 |
        while IFS=$'\n' read -r line; do
            # echo "$line" 1>&2
            cat "$line"
        done
)"

if test -n "$raw"; then
    printf -- "%s" "$raw" |
        tr -s '\n' ' ' |
        sed 's/^\s\+//' |
        htmldecode | pen-pretty-paragraph | {
            if test "$sn" = "readsubs"; then
                cat
            else
                pen-tf txt
            fi
        } | pen-pavs
fi
