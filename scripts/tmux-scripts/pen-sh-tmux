#!/bin/bash
export TTY

clear
# exec 1> >(pen-mnm)

# I should turn this entire script into an elisp hydra.
# Although that would require that emacs has been started already.

# This can't work because the menu prints before it runs. The menu must appear elsewhere
fzf_cmd_last_output() {
    sel="$(fqa 'first-column-field-1-space' | sed 's/#.*//' )"

    echo

    if [ -n "$sel" ]; then
        printf -- "%s\n" "Running: $sel Â»" 1>&2
        pen-tm -f get-last-output 'Â»' | eval "$sel"
    fi
}

# S  pen-tm -f -d spv
# p  sps slmenu
read -r -d '' options <<HEREDOC
.  EDIT
1  tmux select-layout even-horizontal
2  tmux select-layout even-vertical
3  tmux select-layout main-horizontal
4  tmux select-layout main-vertical
5  tmux select-layout tiled
b  pen-tm breakp
p  slmenu
P  slmenu | xa orspvs
d  mkdw (make-docker-wrapper)
N  nw -n notifications pen-watch-notifications 
e  mkew (make-etui-wrapper)
v  pen-tm capture vim (TODO)
m  pen-tm ttystudio-gif
r  pen-tm asciinema
k  pen-tm em-click
c  pen-tm asciinema
C  pen-tm asciinema-local
y  tm-attach-localhost-and-record
q  pen-tm ttyrec-auto
a  tmux attach
O  tmux move-window -t localhost: # Good for eterm tmux
l  tm-attach-localhost
L  cd $NOTES; tmux attach -t localhost2: || tmux new -c $NOTES -s localhost2 zsh
i  tmux attach -t init: || tmux new -c $NOTES -s init zsh
S  tmux -L shane attach || tmux new -L shane -c $NOTES zsh
f  pen-tm goto-fzf
s  pen-tm -f -d sph
h  pen-tm -f -d spv
g  sh-tmux-sel
Y  pen-tm copy-current-line
nw cd $NOTES; tmux attach || tmux new -c $NOTES -s notes zsh
T  tat # tmux touchbar attach
,  fzf_cmd_last_output
HEREDOC

echo "$0" | udl | hls green
echo "$options" | pen-mnm | hls dgrey

read -n1 d; test "$d" = "" && read -n1 d
# clear

case "$d" in
    .) cmd="pen-v $0" ;;
    1) cmd="( sleep 0.5; tmux select-layout even-horizontal ) &" ;;
    2) cmd="( sleep 0.5; tmux select-layout even-vertical ) &" ;;
    3) cmd="( sleep 0.5; tmux select-layout main-horizontal ) &" ;;
    4) cmd="( sleep 0.5; tmux select-layout main-vertical ) &" ;;
    5) cmd="( sleep 0.5; tmux select-layout tiled ) &" ;;

    # these must run after the menu window has closed
    b) cmd="tmux run -b $(cmd-nice-posix "pen-tm breakp")" ;;
    # p) cmd="sps slmenu" ;;
    p) cmd="slmenu" ;;
    P) cmd="slmenu | xa orspvs" ;;
    d) cmd="mkdw" ;;
    N) cmd="nw -n notifications pen-watch-notifications" ;;
    e) cmd="mkew" ;;
    m) cmd="tmux run -b $(cmd-nice-posix "pen-tm ttystudio-gif")" ;;
    r) cmd="tmux run -b $(cmd-nice-posix "pen-tm asciinema")" ;;
    k) cmd="pen-tm em-click-bg" ;;
    c) cmd="tmux run -b $(cmd-nice-posix "pen-tm asciinema")" ;;
    C) cmd="tmux run -b $(cmd-nice-posix "pen-tm asciinema-local")" ;;
    q) cmd="tmux run -b $(cmd-nice-posix "pen-tm ttyrec-auto")" ;;
    y) cmd="tm-attach-localhost-and-record" ;;
    a) cmd="tmux attach" ;;
    O) cmd="tmux move-window -t localhost:" ;;
    l) cmd="tm-attach-localhost" ;;
    L) cmd="cd $NOTES; tmux attach -t localhost2: || tmux new -c $NOTES -s localhost2 zsh" ;;
    i) cmd="cd $NOTES; tmux attach -t init: || tmux new -c $NOTES -s init zsh" ;;
    S) cmd="tmux -L shane attach || tmux new -L shane -c $NOTES zsh" ;;
    f) cmd="tmux run -b $(cmd-nice-posix "pen-tm find-window-from-session -no-activate")" ;;
    g) cmd="sh-tmux-sel" ;;
    Y) cmd="tmux run -b $(cmd-nice-posix "pen-tm copy-current-line")" ;;
    s) cmd="pen-tm -f -d sph" ;;
    # S) cmd="pen-tm -f -d spv" ;;
    h) cmd="pen-tm -f -d spv" ;;
    T) cmd="tat" ;;
    n|w) cmd="cd $NOTES; tmux attach || tmux new -c $NOTES -s notes zsh" ;;
esac
echo
echo "$cmd" | hls nearblack

# exec <`tm-tty`
# exec 1> /dev/tty
eval "$cmd"