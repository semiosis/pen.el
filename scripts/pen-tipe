#!/bin/bash
export TTY

unset EDITOR
# For pen-tvipe, the editor is special.
# It must be vipe, pen-eipe, etc.

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -wintype) {
        WINTYPE="$2"
        shift
        shift
    }
    ;;

    -cl) {
        VIPE_CLEAR=y
        shift
    }
    ;;

    -e) {
        USE_EMACS=y
        shift
    }
    ;;

    -help) {
        PEN_HELP="$2"
        shift
        shift
    }
    ;;

    -ov) {
        PEN_OVERLAY="$2"
        shift
        shift
    }
    ;;

    -pov) {
        PEN_PREOVERLAY="$2"
        shift
        shift
    }
    ;;

    -data) {
        PEN_EIPE_DATA="$2"
        shift
        shift
    }
    ;;

    *) break;
esac; done
: "${WINTYPE:="sps"}"

export VIPE_CLEAR
export PEN_PROMPT
export PEN_HELP
export PEN_OVERLAY
export PEN_PREOVERLAY
export PEN_EIPE_DATA

if test "$#" = 1 && test -n "$1"; then
    EDITOR="$1"
elif test "$#" -gt 1 && test -n "$1"; then
    CMD="$(cmd "$@")"
    EDITOR="$CMD"
fi

if test "$USE_EMACS" = "y"; then
    : "${EDITOR:="pen-eipe"}"
fi

: "${EDITOR:="vipe"}"

# This is hanging for pen-eipe when emacs is started with run.sh
# Therefore, pen-eipe is simply not finishing.
# Well, actually pen-eipe *does* finish.

echo Waiting for output from promptee... | hls purple 1>&2
if pen-tm session-exists human; then
    echo Sending prompt to hidden terminal... | hls red 1>&2
    pen-tm -export "PEN_PROMPT PEN_HELP PEN_OVERLAY PEN_PREOVERLAY PEN_EIPE_DATA" -sout -vipe "$WINTYPE" -t human: "$EDITOR" | cat
else
    pen-tm -export "PEN_PROMPT PEN_HELP PEN_OVERLAY PEN_PREOVERLAY PEN_EIPE_DATA" -sout -vipe "$WINTYPE" "$EDITOR" | cat
fi

# pen-tm -w -sout -vipe spv "$EDITOR" | cat

# echo end | pen-tv &>/dev/null
