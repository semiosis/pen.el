#!/bin/bash
export TTY

# ( hs "$(basename "$0")" "$@" "#" "<==" "$(ps -o comm= $PPID)" 0</dev/null ) &>/dev/null

. $PENELD/scripts/utils.sh

: "${show_module:="y"}"
while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -m) {
        module="$2"
        shift
        shift
    }
    ;;

    -pp) {
        pretty=y
        shift
    }
    ;;

    -nsm) {
        # no show meta
        show_module=n
        shift
    }
    ;;

    *) break;
esac; done

: "${module:="NASB"}"

# scrape-bible-references | 

if ! stdin_exists; then
    if test "$#" -eq 1 && test -f "$1"; then
        exec < <(cat "$1")
    elif test "$#" -gt 0; then
        CMD="$(cmd "$@")"
        exec < <(printf -- "%s\n" "$CMD")
    else
        echo "bible-show-verses: No input" | hls red 1>&2
        exit "$#"
    fi
fi

raw="$(s join ";" | xargs "diatheke" "-b" "$module" "-o" "w" "-f" "plain" "-k")"
mod="$(printf -- "%s\n" "$raw" | sed -n '$p')"
raw="$(printf -- "%s\n" "$raw" | sed '$d')"

: "${COLS:="50"}"

unset COLUMNS
{
if test "$pretty" = "y"; then
    if is_tty; then
        eval `resize`
        LINES=$(tput lines)
        COLUMNS=$(tput cols)

        if test "$COLUMNS" -lt "$COLS"; then
            COLS="$COLUMNS"
        fi
    fi
fi
} 2>/dev/null

join_multi_liners() {
    sed "/[0-9]:/!s/^/JOIN/" | sed -z "s/\s*\nJOIN/ /g"
}

{
    printf -- "%s\n" "$raw"
} |
    # James 2:25e:  <- This was problematic
    join_multi_liners | sed -z 's/\([0-9]:\) *\n/\1 /g' | sed 's/^\s*//' | {
    if test "$pretty" = "y"; then
        awk1 | while IFS=$'\n' read -r line; do
        (
            exec 0</dev/null
            printf -- "%s\n" "$line" | sed 's/\([0-9]\): .*/\1/' | udl
            printf -- "%s\n" "$line" | sed 's/.*\([0-9]\): //' | fold -w "$COLS" -s
            echo
        )
        done
    else
        cat
    fi
    if test "$show_module" = "y"; then
        echo "$mod"
    fi
} | erase-trailing-whitespace | in-tty -upo pen-pavs
