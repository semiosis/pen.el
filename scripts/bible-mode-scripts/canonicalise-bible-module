#!/bin/bash
export TTY
# shopt -s nullglob # use for 'for' loops but not for 'ls', 'grep'

# ( hs "$(basename "$0")" "$@" "#" "<==" "$(ps -o comm= $PPID)" 0</dev/null ) &>/dev/null

sn="$(basename -- "$0")"

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -b|-book) {
        book="$2"
        shift
        shift
    }
    ;;

    *) break;
esac; done

stdin_exists() {
    {
    ! [ -t 0 ] && \
    ! test "$(readlink /proc/$$/fd/0)" = /dev/null  && \
    ! test "$(readlink /proc/$$/fd/0)" = "$(readlink /proc/$$/fd/1)"
    # stdin may be redirected to the tty, but  will continue to say false (due to a bash bug)
    # So test to make sure 0 does not point to 1
    } &>/dev/null
}

if stdin_exists; then
    awk 1 | while IFS=$'\n' read -r module; do
        0</dev/null "$sn" "$module"
    done
    exit "$?"
fi

module="$@"

module="$(p "$module" | tr '[:upper:]' '[:lower:]')"
case "$module" in
    nasb) {
        module=NASB
    }
    ;;

    rlt) {
        module=RLT
    }
    ;;

    asv) {
        module=ASV
    }
    ;;

    maori) {
        module=Maori
    }
    ;;

    murdock) {
        module=Murdock
    }
    ;;

    irish|gaelic) {
        case "$book" in
            Mark) { module=ScotsGaelic; } ;;
            Matthew|John) { module=ManxGaelic; } ;;
            *|Luke) { module=IriODomhnuill; } ;;
        esac
    }
    ;;

    kjv) {
        module=KJV
    }
    ;;

    bsb) {
        module=engbsb2020eb
    }
    ;;

    *) {
        module=NASB
    }
    ;;

esac

echo "$module"
