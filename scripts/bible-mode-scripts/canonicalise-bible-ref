#!/bin/bash
export TTY

sn="$(basename -- "$0")"

# For debugging
export PS4='+	"$(basename $0)"	${LINENO}	 '
# set -xv

# # Automatically cache
# if ! test "$INSIDE_CI" = "y"; then cif "$sn" "$@"; exit "$?"; fi

# Instead of caching canonicalise-bible-book-title, cache canonicalise-bible-book-title
# It's better to do that.

. $SCRIPTS/lib/hs

ref="$@"

if ! inside-docker-p; then
    in-pen "$sn" "$@"
    exit "$?"
fi

. $SCRIPTS/lib/stdin_exists

# Ps.33.6
# Ps.136.5-Ps.136.8

if stdin_exists; then
    awk 1 | sed -e 's/\([a-z]\)\.\([0-9]\)/\1 \2/g' -e 's/\./:/g' | while read line; do
        # echo "$line" 1>&2
        if printf -- "%s\n" "$line" | grep -q -P '[0-9]$'; then
            # separate book title from chapter:verse
            booktitle="$(printf -- "%s" "$line" | sed 's/[. ][0-9].*//')"
            chapverse="$(printf -- "%s" "$line" | sed -n 's/.*[. ]\([0-9].*\)/\1/p')"
            {
                ocif canonicalise-bible-book-title "$booktitle"
                if test -n "$chapverse"; then
                    echo -n " $chapverse"
                fi
            } | awk 1
        else
            ocif canonicalise-bible-book-title "$line" | awk 1
        fi
    done
else
    test -n "$ref" || { echo "canonicalise-bible-ref: No ref" | hls red 1>&2; exit 1; }
    ocif canonicalise-bible-book-title "$ref"
fi
