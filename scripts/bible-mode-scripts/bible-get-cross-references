#!/bin/bash
export TTY
# shopt -s nullglob # use for 'for' loops but not for 'ls', 'grep'

. $SCRIPTS/lib/hs

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -ol) {
        mode="org-links"
        shift
    }
    ;;

    -olol) {
        mode="org-links-oneliners"
        shift
    }
    ;;

    *) break;
esac; done

# Jer.10.14

. $SCRIPTS/lib/stdin_exists

if stdin_exists; then
    set -- "$(cat)" "$@"
fi

ref="$@"
test -n "$ref" || exit 1

ref="$(printf -- "%s" "$ref" | cif -nd canonicalise-bible-ref)"

book="$(printf -- "%s" "$ref" | cut -d : -f 1 | sed 's/ [^ ]\+$//' | crossref-canonicalise-ref)"
chap="$(printf -- "%s" "$ref" | cut -d : -f 1 | sed 's/.* //')"
verse="$(printf -- "%s" "$ref" | cut -d : -f 2)"

ref="${book}.${chap}.${verse}"

sqlite3 $HOME/.pen/refs.db 'select `To Verse` from refstable where `From Verse` = "'$ref'" and `Votes` > 0 order by cast(`Votes` as unsigned) desc' | {
    case "$mode" in
        ol|org-links) {
            bible-canonicalise-cross-reference | sed 's/^\(.*\).*$/[[sh:tpop nem \1][\1]]/'
        }
        ;;

        olol|org-links-oneliners) {
            bible-canonicalise-cross-reference | bible-show-verses -m "NASB" -pp
            # | sed 's/^\(.*\).*$/[[sh:tpop nem \1][\1]]/'
        }
        ;;

        *) {
            cat
        }
        ;;
    esac
} | pavs
