#!/bin/bash
export TTY

# Also consider:
# echo hi | tns v

. $SCRIPTS/lib/stdin_exists

if stdin_exists; then
    input_fp="$(cat | tf txt)"
fi

exec <&1

PRINTOUT=y

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -E) {
        DO_EXEC=y
        shift
    }
    ;;

    # Print output after exiting
    -nopr) {
        PRINTOUT=n
        shift
    }
    ;;

    -pak|-pakf) {
        do_pak=y
        shift
    }
    ;;

    *) break;
esac; done

if test "$DO_EXEC" = "y"; then
    CMD="$1"
else
    CMD="$(cmd-nice-posix "$@")"
fi

if test -n "$input_fp"; then
    CMD="cat $(cmd-nice-posix "$input_fp") | $CMD"
fi

if test "$PRINTOUT" = "y"; then
    tf_paneprintout="$(ux tf paneprintout || echo /dev/null)"
    trap "rm \"$tf_paneprintout\" 2>/dev/null" 0
    CMD="$CMD; tm capp > \"$tf_paneprintout\""
fi

if test "$do_pak" = "y"; then
    CMD="$CMD; pak"
fi

# CMD="$(resize | tr -d '\n')$CMD"
# eval `resize`

if test "$TERM" = "dumb"; then
    eval "$CMD"
else
    unset TMUX

    slug="$(printf -- "%s\n" "$@" | tr '\n' ' ' | sed 's/ $//' | slugify | cut -c -20)"
    h="$(sha "$(pwd)")"
    n="tmwr-$slug-$h"

    cmd tmux new -s "$n" -n "$slug" "$CMD" > /tmp/tmlog.txt
    tmux attach -t "$n" 2>/dev/null || tmux new -s "$n" -n "$slug" "$CMD"
fi

test -f "$tf_paneprintout" && cat "$tf_paneprintout" | hls spacegrey
