#!/bin/bash
export TTY

sn="$(basename "$0")"

export LINES

WINCMD="sph -p 80%"
# WINCMD="spv -p 30%"

fargs=()

pattern=
while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    -E) {
        CMD="$2"
        shift
        shift
    }
    ;;

    -nv) {
        NEOVIM=y
        shift
    }
    ;;

    -sph) {
        WINCMD="sph -p 80%"
        shift
    }
    ;;

    -spv) {
        WINCMD="spv -p 20%"
        shift
    }
    ;;

    -|-in) {
        STDIN_EXISTS=y
        shift
    }
    ;;

    ## This does not work
    ++*) { # pattern
        pattern="$(printf -- "%s" "$opt" | sed 's/^++//' | chomp)"

        vimpat+="+/\(\\<$pattern\\>\( -[^ ]\+\)* [^-]\)\@<=."

        # vimopts_end+=" -c startinsert "
        # vimopts_end+=" -c StartAppend "
        fargs+=("-c" "call StartAppend()")
        shift
    }
    ;;

    +/*) { # pattern
        pattern="$(printf -- "%s" "$opt" | sed 's=^+/==' | chomp)"

        vimpat+="+/$pattern"

        # vimopts_end+=" -c StartAppend "
        fargs+=("-c" "call StartAppend()")

        shift
    }
    ;;

    *) break;
esac; done

. $PENELD/scripts/utils.sh

stdin_exists && STDIN_EXISTS=y

tf_stdin="$(pen-ux tf stdin txt 0</dev/null || echo /dev/null)"

if test "$STDIN_EXISTS" = "y"; then
    cat > "$tf_stdin"
fi

exec 0</dev/null

: ${CMD:="$(cmd "$@")"}
: "${CMD:="cat | less -rS"}"

printf -- "%s\n" "$CMD" | pen-ds -s rtcmd_init

if test "$STDIN_EXISTS" = "y"; then
    CMD="cat $(cmd "$tf_stdin") | $CMD"
fi

qfd() {
    pen-esc "\"\$" | sed 's/^.*$/"&"/'
}

cmdparas="$(echo -e -n "$CMD" | qfd | pen-esc '`')"

printf -- "%s\n" "$cmdparas" | pen-ds -s rtcmd_cmd_fpparas

CREATED_PANE_ID="$(eval "pen-tm -f -d $WINCMD $(test "$NEOVIM" = "y" && p "-nvt") -pakf -safe -d -P $cmdparas" | pen-scrape '%[0-9]+')"

TMUX= eval "pen-tm -f -d spv -pakf -safe -d -t '$CREATED_PANE_ID' $cmdparas"

exec <`pen-tm-tty` `# see etty`

# TODO Finish this: /root/.emacs.d/host/pen.el/scripts/rted

pid=$$
rtcmd_cmd_fp="$TMPDIR/rtcmd-$pid.txt"

# Put the command into rtcmd_cmd_fp, but also pass it directly to tmux to run
# The reason the rtcmd_cmd_fp is stored in a file is so it can be called upon by other potential rtcmds.
respawn_command="tee \"$rtcmd_cmd_fp\" | pen-tm -f -S -tout rsp $(test "$NEOVIM" = "y" && p "-nv") -xargs -pakf -safe -t '$CREATED_PANE_ID'"

# See:
# sp +/"RTCmdSetup(cmd)" "$EMACSD_BUILTIN/host/pen.el/config/nvimrc"

# When this vim is edited, the buffer contents are piped the respawn command
echo -e "$CMD" | pen-v "$vimpat" -ft sh -rt "$respawn_command" -pc "set ls=0" "${fargs[@]}"