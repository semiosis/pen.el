#!/usr/bin/env -S emacs --quick --script

;; https://gist.github.com/Kreyren/a12e3618525477c3dd5fb16c3de45bf3

;; grepfilter-transform "$bytepos_fp" "$input_fp"

;; Run the transform once per match
;; Run the transform ON the byteps_fp
;; Generate a sed replacement script?

(defun str (thing)
  "Converts object or string to an unformatted string."

  (if thing
      (if (stringp thing)
          (substring-no-properties thing)
        (progn
          (setq thing (format "%s" thing))
          (set-text-properties 0 (length thing) nil thing)
          thing))
    ""))

(defun bible-get-chapter-title (book chapter)
 (interactive (list (read-string "Book: ")
                    (read-string "Chapter: ")))
 (with-temp-buffer
   (ignore-errors (insert-file-contents "/root/.pen/documents/notes/ws/peniel/Bible-chapter-titles.txt"))
   (search-forward-regexp (concat "^" book))
   (search-forward-regexp (concat "\\b" (str chapter) "[,.]"))
   (beginning-of-line)
   (search-forward-regexp "\\. ")
   (let ((start (point))
         (end (progn
                (end-of-line)
                (point))))
     (buffer-substring start end))))

(let ((matches-fp (car argv))
      (bytepos-fp (cadr argv))
      (transformed-fp (caadr argv))))
;; Output
(message "%s"
         (bible-get-chapter-title matches-fp bytepos-fp transformed-fp))
