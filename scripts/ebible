#!/bin/bash
export TTY

( hs "$(basename "$0")" "$@" "#" "<==" "$(ps -o comm= $PPID)" 0</dev/null ) &>/dev/null

sn="$(basename -- "$0")"

if ! inside-docker-p && docker-running-p; then
    is_tty() { [ -t 1 ] && ! test "$TERM" = "dumb"; }

    if is_tty; then
        in-pen in-tm "$sn" "$@"
    else
        in-pen "$sn" "$@"
    fi

    exit "$?"
fi

module="$(0</dev/null canonicalise-bible-module "$sn")"
: "${module:="NASB"}"

format=plain
while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -ttp) {
        USE_TTP=y
        shift
    }
    ;;

    -s) {
        SEARCH=y
        shift
    }
    ;;

    -c) {
        format=internal
        CONCORDANCE=y
        shift
    }
    ;;

    -nem) {
        NOEMACS=y
        shift
    }
    ;;

    -m) {
        module="$2"
        shift
        shift
    }
    ;;

    -nottp) {
        USE_TTP=n
        shift
    }
    ;;

    *) break;
esac; done

: "${USE_TTP:="y"}"

is_tty() { [ -t 1 ] && ! test "$TERM" = "dumb"; }

doublespacemax () {
    sed 's/\s\+$//' | sed ':a;N;$!ba;s/\n\n\+/\n\n/g'
}

if test "$SEARCH" = "y"; then
    bible-search -m "$module" -g "$@"
    exit "$?"
fi

ref="$@"
: "${maybemod:="$(printf -- "%s\n" "$ref" | sed -n '/(.*)/s/.*(\([^)]\+\)).*/\1/p')"}"
if test -n "$maybemod"; then
    module="$maybemod"
    ref="$(printf -- "%s\n" "$ref" | sed 's/ *(.*//')"
else
    : "${maybemod:="$(printf -- "%s\n" "$ref" | sed -n '/[0-9] [a-zA-Z]\+$/s/.* \([a-zA-Z]\+\)$/\1/p')"}"
    if test -n "$maybemod"; then
        module="$maybemod"
        ref="$(printf -- "%s\n" "$ref" | sed 's/ *[a-zA-Z]\+$//')"
    fi
fi

if is_tty && ! test "$NOEMACS" = y; then
    if test "$1"; then
        sp -cip bible-open =nil =nil "$module" "$ref"
    else
        sp -cip bible-open =nil =nil "$module"
    fi
else
    {
    echo "$ref" | openbible-canonicalise-ref | udl
    {
    in-pen "diatheke" "-b" "$module" "-o" "w" "-f" "$format" "-k" "$ref" | sed 's/^.* [0-9]\+:[0-9]\+: *//' | pen-s remove-trailing-whitespace | sed '/^$/d' |
        if test "$CONCORDANCE" = "y"; then
            sed -e 's/<w savlm="strong:\([^"]*\)">\([^<]*\)<\/w>/\2 \1/g' -e 's/\bstrong://g'|
            sed 's/<[^>]*>//g' |
            patm -r "G[0-9]+[a-z]?" "echo -n ✓; strongs-get-word | tr '[:lower:]' '[:upper:]'" |
            sed 's/\( ✓\)\+\([^(]\)/\2/g' | sed 's/✓//g'
        else
            cat
        fi
    } | {
        if test "$USE_TTP" = "y"; then
            ttp
        else
            cat
        fi
    }
    } | sed '$s/\( *\)\(([^)]\+)\)$/\n\n\n\2/' | doublespacemax | pa -E colvs
    # | pen-s remove-trailing-whitespace | pen-s join ' ' | sed 's/[0-9]: /&\n/g' | sed '/^$/d' | awk 'NR%2==0' | pavs
fi
