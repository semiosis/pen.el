#!sbcl-ql --script
;; #!sbcl --script

;; quicklisp after being set up in ros sbcl is admittedly slow,
;; but I'm sure I will have these scripts running much faster
;; later on.

;; (write-string "Hello, World!")

;; (ql:quickload "unix-opts")
;; 
;; (opts:define-opts
;;     (:name :help
;;        :description "print this help text"
;;        :short #\h
;;        :long "help")
;;     (:name :nb
;;        :description "here we want a number argument"
;;        :short #\n
;;        :long "nb"
;;        :arg-parser #'parse-integer) ;; <- takes an argument
;;     (:name :info
;;        :description "info"
;;        :short #\i
;;        :long "info"))

(defvar bible-mode-book-chapters
  '(("Genesis" 50)
    ("Exodus" 40)
    ("Leviticus" 27)
    ("Numbers" 36)
    ("Deuteronomy" 34)
    ("Joshua" 24)
    ("Judges" 21)
    ("Ruth" 4)
    ("I Samuel" 31)
    ("II Samuel" 24)
    ("I Kings" 22)
    ("II Kings" 25)
    ("I Chronicles" 29)
    ("II Chronicles" 36)
    ("Ezra" 10)
    ("Nehemiah" 13)
    ("Esther" 10)
    ("Job" 42)
    ("Psalms" 150)
    ("Proverbs" 31)
    ("Ecclesiastes" 12)
    ("Song of Solomon" 8)
    ("Isaiah" 66)
    ("Jeremiah" 52)
    ("Lamentations" 5)
    ("Ezekiel" 48)
    ("Daniel" 12)
    ("Hosea" 14)
    ("Joel" 3)
    ("Amos" 9)
    ("Obadiah" 1)
    ("Jonah" 4)
    ("Micah" 7)
    ("Nahum" 3)
    ("Habakkuk" 3)
    ("Zephaniah" 3)
    ("Haggai" 2)
    ("Zechariah" 14)
    ("Malachi" 4)
    ("Matthew" 28)
    ("Mark" 16)
    ("Luke" 24)
    ("John" 21)
    ("Acts" 28)
    ("Romans" 16)
    ("I Corinthians" 16)
    ("II Corinthians" 13)
    ("Galatians" 6)
    ("Ephesians" 6)
    ("Philippians" 4)
    ("Colossians" 4)
    ("I Thessalonians" 5)
    ("II Thessalonians" 3)
    ("I Timothy" 6)
    ("II Timothy" 4)
    ("Titus" 3)
    ("Philemon" 1)
    ("Hebrews" 13)
    ("James" 5)
    ("I Peter" 5)
    ("II Peter" 3)
    ("I John" 5)
    ("II John" 1)
    ("III John" 1)
    ("Jude" 1)
    ("Revelation of John" 22)))

;; (write-string (format t "~&~S~&" *posix-argv*))

(let ((bookname
        (if *posix-argv*
            (write-string
             (string-trim
              '(#\space
                #\newline)
              (format nil "~&~S~&" (car *posix-argv*)))))))

  (if bookname
      bible-mode-book-chapters))

;; bookname=$1""
;; test -n "$bookname" || exit 1
