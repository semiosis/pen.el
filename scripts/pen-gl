#!/bin/bash
export TTY

query="$@"

# ddgr can't go above 25
nresults=25

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -n) {
        nresults="$2"
        shift
        shift
    }
    ;;

    -tor) {
        USETOR=y
        shift
    }
    ;;

    -notty) {
        NOTTY=y
        shift
    }
    ;;

    -loop) {
        LOOPTIME="$2"
        shift
        shift
    }
    ;;

    -u) {
        UPDATE=y
        shift
    }
    ;;

    *) break;
esac; done

export UPDATE

search_with_googler() {
    # echo googler 1>&2
    # cmd1 ocif python $REPOS/googler/googler "$@" 1>&2
    # ocif python $REPOS/googler/googler "$@" 2>/dev/null

    if test "$USETOR" = "y"; then
        ocif my-torify pen-python $MYGIT/jarun/googler/googler "$@"
    else
        ocif $MYGIT/jarun/googler/googler "$@"
    fi
}

# duck duck go
search_with_ddg() {
    if test "$USETOR" = "y"; then
        ocif my-torify ddgr "$@"
    else
        ocif ddgr "$@"
    fi

    # echo ddgr 1>&2
    # cmd1 ocif ddgr "$@" 1>&2
    # 1 ocif ddgr "$@" 2>/dev/null

    # This package is dead
    # py i google-search

    # This one should work
    # py i google-search-results

    # But it requires this:
    # https://serpapi.com/

    # read -r -d '' PYCODE <<HEREDOC
    # try:
    #     from googlesearch import search
    # except ImportError:
    #     print("No module named 'google' found")
    #
    # # to search
    # query = "$query"
    #
    # for j in search(query, tld="co.in", num=$nresults, stop=1, pause=2):
    #     print(j)
    # HEREDOC

    # python -c "$PYCODE"
    # python3.7 -c "$PYCODE"
}

search() {
    results="$(search_with_googler -n "$nresults" --json "$@" | jq -r '.[].url')"
    byc="$(printf -- "%s" "$results" | wc -c)"

    if ! test "$byc" -gt 0; then
        results="$(search_with_ddg -n "$nresults" --json "$@" | jq -r '.[].url')"
        byc="$(printf -- "%s" "$results" | wc -c)"
    fi

    if test "$byc" -gt 0; then
        printf -- "%s\n" "$results"
    fi
}

if test -n "$LOOPTIME"; then
    while :; do
        search "$@"
        sleep "$LOOPTIME"
        echo
    done
else
    {
        search "$@"
        # pen-oci emacs-google-scrape-backend "$@"
    } | head -n "$nresults" | pen-ds last-gr | {
        hc "$(basename "$0")" "$@" "#" "<==" "$(ps -o comm= $PPID)"
    } | {
        if test "$NOTTY" = "y"; then
            cat
        else
            in-tty -upo pager -v
        fi
    }
fi
