#!/bin/bash
export TTY

stdin_exists() {
    {
    ! [ -t 0 ] && \
    ! test "$(readlink /proc/$$/fd/0)" = /dev/null  && \
    ! test "$(readlink /proc/$$/fd/0)" = "$(readlink /proc/$$/fd/1)"
    # stdin may be redirected to the tty, but  will continue to say false (due to a bash bug)
    # So test to make sure 0 does not point to 1
    } &>/dev/null
}

# Don't detach by default because most of the time I will open a TUI
# : "${detach:="y"}"

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -d) {
        detach=y
        shift
    }
    ;;

    -nd) {
        detach=
        shift
    }
    ;;

    *) break;
esac; done

exec 3>&0

if ! stdin_exists; then
    exec < <(list-executables|awk 1|uniqnosort)
fi

if test -z "$LINES"; then
    eval `resize`
fi

result="$(
    if test "$LINES" -gt "5" || ! command -v slmenu; then
        pen-fzf "$@"
    else
        /usr/local/bin/slmenu $LINES "$@"
    fi
)"

is_tty() { [ -t 1 ] && ! test "$TERM" = "dumb"; }

exec 0>&3

is_stdout_pipe() {
    # If stout is a pipe
    [[ -p /dev/stdout ]]
}

if is_stdout_pipe; then
    printf -- "%s\n" "$result"
elif is_tty; then
    if test "$detach" = "y"; then
        # DO NOT unset TMUX.
        test -n "$result" && tmux run -b "unbuffer $result > /dev/null"
    else
        test -n "$result" && eval "$result"
    fi
else
    printf -- "%s\n" "$result"
fi
