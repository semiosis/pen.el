#!/bin/bash
export TTY

( hs "$(basename "$0")" "$@" "#" "<==" "$(ps -o comm= $PPID)" 0</dev/null ) &>/dev/null

# TODO Make it so the info script also has a query mode
# v +/"m4) {" "$PENELD/scripts/container/man"
# How to do that?
# j:Info-find-file

# This is awful
info_exists() {
    content="$(ocif timeout 0.2 /usr/bin/info -o /dev/stdout "$@" 2>/dev/null)"
    test -n "$content"
}

info_at_top() {
    /usr/bin/info -n '(dir)Top' -o /dev/stdout | sed -n 's/^\* '$1': \([^.]\+\)\..*/\1/p' 2>/dev/null
}

sn="$(basename -- "$0")"

. $PENEL_DIR/scripts/utils.sh

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -q) {
        # Query if a tut exists
        query=y
        shift
    }
    ;;

    *) break;
esac; done

if test "$query" = "y"; then
    info_exists "$@"
    ret="$?"

    # if test "$ret" = 0; then
    #     echo "Info for ${opt} exists." | hls blue 1>&2
    # fi

    exit "$ret"
fi

# agi info
if ! in-pen-p; then
    if test "$has_stdout" = y; then
        ocif in-pen "$sn" "$@" | pavs
    else
        in-pen in-tm "$sn" "$@"
    fi
    exit "$?"
fi

: "${bin:="/usr/bin/info"}"

query="$@"

if test "$has_stdout" = y; then
    "$bin" "$query" -o - | pavs
elif test "$sn" = binfo; then
    nvc "$bin" "$query"
else
    if printf -- "%s\n" "$query" | grep -q -P '^[^(]+$'; then
        query="$(info_at_top "$query")"
    fi
    einfo "$query"
fi
# if test -f "$bin"; then
#     nvc "$bin" "$query"
# else
#     einfo "$query"
# fi
