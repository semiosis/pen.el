#!/usr/bin/env python3
#coding=utf-8

import os
import sys
import urllib
import urllib2
from BeautifulSoup import BeautifulSoup
import logging
import urlparse

logger = logging.getLogger('console')
logger.setLevel(logging.DEBUG)
logger.addHandler(logging.StreamHandler())

#to console
def output(str):
    print str.encode('utf-8')

#too simple...sometime naive
def is_valid_url(url):
    if url.startswith('http://') or url.startswith('https://'):
        return True
    else:
        return False

def parse(url, rules):
    # read page content
    fp =  urllib.urlopen(url)
    page_content = fp.read()
    # parse page content using beautiful soup
    soup = BeautifulSoup(page_content)
    for rule in rules:
        try:
            # example: a.href -> <a href="...">     div.id -> <div id="..."> 
            node, attr = rule.split('.')
        except:
            continue
        for element in soup(node):
            # only for element which has the specific attribute
            if element != None and attr in [k for k, _ in element.attrs]:
                value = element[attr]
                if value.startswith('javascript:'): continue
                # dealing <a ...></a> and <img src='...' /> 
                if node == 'a' or node == 'img':
                    if value.startswith('/'):
                        url_compont = urlparse.urlparse(url)
                        value = url_compont.scheme + "://" + url_compont.netloc + value
                        output(value)
                    elif is_valid_url(value) == False:
                        url_compont = urlparse.urlparse(url)
                        path = '/'.join(url_compont.path.split('/')[:-1])
                        value = url_compont.scheme + "://" + url_compont.netloc + path + '/' + value
                        output(value)
                    else:
                        output(value)
                else:
                    output(value)
                    
        
if __name__ == '__main__':
    if len(sys.argv) < 3:
        print 'usage: ' + sys.argv[0] +' <url> <rules1> [rules2] ...'
        print 'example: ' + sys.argv[0] + ' http://g.cn img.src'
        print sys.argv[0] + ' http://g.cn a.href img.src'
        exit(0)

    url = sys.argv[1]
    rules = sys.argv[2:]
    
    if is_valid_url(url) == True:
        parse(url, rules)
    else:
        print 'url is not valid'
