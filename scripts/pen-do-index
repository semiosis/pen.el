#!/bin/bash
export TTY

sn="$(basename "$0")"

case "$sn" in
    *do-index-full) {
        reindex_full=y
    }
    ;;

    *)
esac

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -g) {
        dogit=y
        shift
    }
    ;;

    *) break;
esac; done

# cd $HOME/OneDrive
# find `pwd` -type f | files2text-mirror

# upd do-index-full

. $SCRIPTS/lib/stdin_exists


if stdin_exists; then
    cat | populate-mirror
fi

: "${file_list_fp:="$1"}"
: "${file_list_fp:="$NOTES/files.txt"}"

# Can be a directory to run 'find' or a file (of a list of file paths)
if test -e "$file_list_fp"; then
    shift
    populate-mirror "$file_list_fp"
else
    populate-mirror
fi

# (
# cd "$MIRRORD$MYGIT"; find . -type d -name 'vendor' -exec rm -rf {} \;
# )

if test "$reindex_full" = "y"; then
    :
else
    set -- -f "$@"

    # man glimpseindex
    # -f     incremental  indexing.   glimpseindex scans all files and adds
    #              to the index only those files that were  created  or  modified
    #              after the current index was built.
fi

CMD="$(cmd-nice "$@")"
: ${CMD:="$(cmd-nice "$@")"}

# This would include $MYGIT and other large directories. Therefore, it's
# not possible
# eval "glimpseindex $CMD -o $NOTES $MIRRORD $(cat $NOTES/directories.org | umn | dirs-only.sh | s join ' ')"

# eval "glimpseindex $CMD -o $NOTES $MIRRORD"
eval "glimpseindex $CMD -o $MIRRORD"
